/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/AgendaNomencladores/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaNomencladores/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaNomencladores/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaNomencladores/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaNomencladores/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AgendaNomenclador.AgendaNomencladorRequestDTO'];
          'text/json': components['schemas']['AgendaNomenclador.AgendaNomencladorRequestDTO'];
          'application/*+json': components['schemas']['AgendaNomenclador.AgendaNomencladorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaNomencladores/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AgendaNomenclador.AgendaNomencladorRequestDTO'];
          'text/json': components['schemas']['AgendaNomenclador.AgendaNomencladorRequestDTO'];
          'application/*+json': components['schemas']['AgendaNomenclador.AgendaNomencladorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaNomencladores/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaNomencladores/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO'];
          'text/json': components['schemas']['AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO'];
          'application/*+json': components['schemas']['AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO'];
          'text/json': components['schemas']['AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO'];
          'application/*+json': components['schemas']['AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaOSNoAtendidas/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Agenda.ListVistaAgenda.ListVistaAgendaResponseDTO'];
            'application/json': components['schemas']['Agenda.ListVistaAgenda.ListVistaAgendaResponseDTO'];
            'text/json': components['schemas']['Agenda.ListVistaAgenda.ListVistaAgendaResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/AperturaDeAgenda': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Agenda.AperturaDeAgenda.AperturaDeAgendaRequestDTO'];
          'text/json': components['schemas']['Agenda.AperturaDeAgenda.AperturaDeAgendaRequestDTO'];
          'application/*+json': components['schemas']['Agenda.AperturaDeAgenda.AperturaDeAgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/ModificarAperturaDeAgenda': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Agenda.ModificarAperturaDeAgenda.ModificarAperturaDeAgendaRequestDTO'];
          'text/json': components['schemas']['Agenda.ModificarAperturaDeAgenda.ModificarAperturaDeAgendaRequestDTO'];
          'application/*+json': components['schemas']['Agenda.ModificarAperturaDeAgenda.ModificarAperturaDeAgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/AnalisisCierreAgenda': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaRequestDTO'];
          'text/json': components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaRequestDTO'];
          'application/*+json': components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaResponseDTO'];
            'application/json': components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaResponseDTO'];
            'text/json': components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/CierreAgenda': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Agenda.CierreAgenda.CierreAgendaRequestDTO'];
          'text/json': components['schemas']['Agenda.CierreAgenda.CierreAgendaRequestDTO'];
          'application/*+json': components['schemas']['Agenda.CierreAgenda.CierreAgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/ListVistaAgendaDia': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          AgendaId?: number;
          Fecha?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Agenda.ListVistaAgendaDia.ListVistaAgendaDiaResponseDTO'];
            'application/json': components['schemas']['Agenda.ListVistaAgendaDia.ListVistaAgendaDiaResponseDTO'];
            'text/json': components['schemas']['Agenda.ListVistaAgendaDia.ListVistaAgendaDiaResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/ListFechasConTurnos': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          IdAgenda?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Agenda.ListFechasConTurnos.ListFechasConTurnosResponseDTO'];
            'application/json': components['schemas']['Agenda.ListFechasConTurnos.ListFechasConTurnosResponseDTO'];
            'text/json': components['schemas']['Agenda.ListFechasConTurnos.ListFechasConTurnosResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/ListAgendasActivas': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Agenda.ListAgendasActivas.ListAgendasActivasResponseDTO'];
            'application/json': components['schemas']['Agenda.ListAgendasActivas.ListAgendasActivasResponseDTO'];
            'text/json': components['schemas']['Agenda.ListAgendasActivas.ListAgendasActivasResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/ModalInfoTurnoAgenda': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          TurnoId?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Agenda.ModalInfoTurnoAgenda.ModalInfoTurnoAgendaResponseDTO'];
            'application/json': components['schemas']['Agenda.ModalInfoTurnoAgenda.ModalInfoTurnoAgendaResponseDTO'];
            'text/json': components['schemas']['Agenda.ModalInfoTurnoAgenda.ModalInfoTurnoAgendaResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Agenda.AgendaRequestDTO'];
          'text/json': components['schemas']['Agenda.AgendaRequestDTO'];
          'application/*+json': components['schemas']['Agenda.AgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Agenda.AgendaRequestDTO'];
          'text/json': components['schemas']['Agenda.AgendaRequestDTO'];
          'application/*+json': components['schemas']['Agenda.AgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Agendas/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AgendaTipo.AgendaTipoRequestDTO'];
          'text/json': components['schemas']['AgendaTipo.AgendaTipoRequestDTO'];
          'application/*+json': components['schemas']['AgendaTipo.AgendaTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AgendaTipo.AgendaTipoRequestDTO'];
          'text/json': components['schemas']['AgendaTipo.AgendaTipoRequestDTO'];
          'application/*+json': components['schemas']['AgendaTipo.AgendaTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AgendaTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['AreaLogin.ListVistaAreaLogin.ListVistaAreaLoginResponseDTO'];
            'application/json': components['schemas']['AreaLogin.ListVistaAreaLogin.ListVistaAreaLoginResponseDTO'];
            'text/json': components['schemas']['AreaLogin.ListVistaAreaLogin.ListVistaAreaLoginResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AreaLogin.AreaLoginRequestDTO'];
          'text/json': components['schemas']['AreaLogin.AreaLoginRequestDTO'];
          'application/*+json': components['schemas']['AreaLogin.AreaLoginRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AreaLogin.AreaLoginRequestDTO'];
          'text/json': components['schemas']['AreaLogin.AreaLoginRequestDTO'];
          'application/*+json': components['schemas']['AreaLogin.AreaLoginRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AreaLogin/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ASuCargo.ASuCargoRequestDTO'];
          'text/json': components['schemas']['ASuCargo.ASuCargoRequestDTO'];
          'application/*+json': components['schemas']['ASuCargo.ASuCargoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ASuCargo.ASuCargoRequestDTO'];
          'text/json': components['schemas']['ASuCargo.ASuCargoRequestDTO'];
          'application/*+json': components['schemas']['ASuCargo.ASuCargoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ASuCargos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AtencionTipo.AtencionTipoRequestDTO'];
          'text/json': components['schemas']['AtencionTipo.AtencionTipoRequestDTO'];
          'application/*+json': components['schemas']['AtencionTipo.AtencionTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['AtencionTipo.AtencionTipoRequestDTO'];
          'text/json': components['schemas']['AtencionTipo.AtencionTipoRequestDTO'];
          'application/*+json': components['schemas']['AtencionTipo.AtencionTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/AtencionTipo/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['BloqueoMotivo.BloqueoMotivosRequestDTO'];
          'text/json': components['schemas']['BloqueoMotivo.BloqueoMotivosRequestDTO'];
          'application/*+json': components['schemas']['BloqueoMotivo.BloqueoMotivosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['BloqueoMotivo.BloqueoMotivosRequestDTO'];
          'text/json': components['schemas']['BloqueoMotivo.BloqueoMotivosRequestDTO'];
          'application/*+json': components['schemas']['BloqueoMotivo.BloqueoMotivosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/BloqueoMotivos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaAperturaConfig.CajaAperturaConfigsRequestDTO'];
          'text/json': components['schemas']['CajaAperturaConfig.CajaAperturaConfigsRequestDTO'];
          'application/*+json': components['schemas']['CajaAperturaConfig.CajaAperturaConfigsRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaAperturaConfig.CajaAperturaConfigsRequestDTO'];
          'text/json': components['schemas']['CajaAperturaConfig.CajaAperturaConfigsRequestDTO'];
          'application/*+json': components['schemas']['CajaAperturaConfig.CajaAperturaConfigsRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaAperturaConfigs/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaBanco.CajaBancosRequestDTO'];
          'text/json': components['schemas']['CajaBanco.CajaBancosRequestDTO'];
          'application/*+json': components['schemas']['CajaBanco.CajaBancosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaBanco.CajaBancosRequestDTO'];
          'text/json': components['schemas']['CajaBanco.CajaBancosRequestDTO'];
          'application/*+json': components['schemas']['CajaBanco.CajaBancosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaBancos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajasConfiguracion.CajaConfiguracionRequestDTO'];
          'text/json': components['schemas']['CajasConfiguracion.CajaConfiguracionRequestDTO'];
          'application/*+json': components['schemas']['CajasConfiguracion.CajaConfiguracionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajasConfiguracion.CajaConfiguracionRequestDTO'];
          'text/json': components['schemas']['CajasConfiguracion.CajaConfiguracionRequestDTO'];
          'application/*+json': components['schemas']['CajasConfiguracion.CajaConfiguracionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaConfiguracion/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaCuota.CajaCuotasRequestDTO'];
          'text/json': components['schemas']['CajaCuota.CajaCuotasRequestDTO'];
          'application/*+json': components['schemas']['CajaCuota.CajaCuotasRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaCuota.CajaCuotasRequestDTO'];
          'text/json': components['schemas']['CajaCuota.CajaCuotasRequestDTO'];
          'application/*+json': components['schemas']['CajaCuota.CajaCuotasRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaCuotas/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaDerecho.CajaDerechosRequestDTO'];
          'text/json': components['schemas']['CajaDerecho.CajaDerechosRequestDTO'];
          'application/*+json': components['schemas']['CajaDerecho.CajaDerechosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaDerecho.CajaDerechosRequestDTO'];
          'text/json': components['schemas']['CajaDerecho.CajaDerechosRequestDTO'];
          'application/*+json': components['schemas']['CajaDerecho.CajaDerechosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDerechos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaDiaria.CajaDiariasRequestDTO'];
          'text/json': components['schemas']['CajaDiaria.CajaDiariasRequestDTO'];
          'application/*+json': components['schemas']['CajaDiaria.CajaDiariasRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaDiaria.CajaDiariasRequestDTO'];
          'text/json': components['schemas']['CajaDiaria.CajaDiariasRequestDTO'];
          'application/*+json': components['schemas']['CajaDiaria.CajaDiariasRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiarias/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO'];
          'text/json': components['schemas']['CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO'];
          'application/*+json': components['schemas']['CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO'];
          'text/json': components['schemas']['CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO'];
          'application/*+json': components['schemas']['CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaDiariasPrefijos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaMaestra.CajaMaestrasRequestDTO'];
          'text/json': components['schemas']['CajaMaestra.CajaMaestrasRequestDTO'];
          'application/*+json': components['schemas']['CajaMaestra.CajaMaestrasRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaMaestra.CajaMaestrasRequestDTO'];
          'text/json': components['schemas']['CajaMaestra.CajaMaestrasRequestDTO'];
          'application/*+json': components['schemas']['CajaMaestra.CajaMaestrasRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMaestras/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaMedioPago.CajaMediosPagoRequestDTO'];
          'text/json': components['schemas']['CajaMedioPago.CajaMediosPagoRequestDTO'];
          'application/*+json': components['schemas']['CajaMedioPago.CajaMediosPagoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaMedioPago.CajaMediosPagoRequestDTO'];
          'text/json': components['schemas']['CajaMedioPago.CajaMediosPagoRequestDTO'];
          'application/*+json': components['schemas']['CajaMedioPago.CajaMediosPagoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMediosPago/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaMovTipo.CajaMovTiposRequestDTO'];
          'text/json': components['schemas']['CajaMovTipo.CajaMovTiposRequestDTO'];
          'application/*+json': components['schemas']['CajaMovTipo.CajaMovTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaMovTipo.CajaMovTiposRequestDTO'];
          'text/json': components['schemas']['CajaMovTipo.CajaMovTiposRequestDTO'];
          'application/*+json': components['schemas']['CajaMovTipo.CajaMovTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaMovTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaUsuario.CajaUsuariosRequestDTO'];
          'text/json': components['schemas']['CajaUsuario.CajaUsuariosRequestDTO'];
          'application/*+json': components['schemas']['CajaUsuario.CajaUsuariosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CajaUsuario.CajaUsuariosRequestDTO'];
          'text/json': components['schemas']['CajaUsuario.CajaUsuariosRequestDTO'];
          'application/*+json': components['schemas']['CajaUsuario.CajaUsuariosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CajaUsuarios/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['CancelacionMotivo.ListVistaCancelacionMotivo.ListVistaCancelacionMotivoResponseDTO'];
            'application/json': components['schemas']['CancelacionMotivo.ListVistaCancelacionMotivo.ListVistaCancelacionMotivoResponseDTO'];
            'text/json': components['schemas']['CancelacionMotivo.ListVistaCancelacionMotivo.ListVistaCancelacionMotivoResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CancelacionMotivo.CancelacionMotivosRequestDTO'];
          'text/json': components['schemas']['CancelacionMotivo.CancelacionMotivosRequestDTO'];
          'application/*+json': components['schemas']['CancelacionMotivo.CancelacionMotivosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CancelacionMotivo.CancelacionMotivosRequestDTO'];
          'text/json': components['schemas']['CancelacionMotivo.CancelacionMotivosRequestDTO'];
          'application/*+json': components['schemas']['CancelacionMotivo.CancelacionMotivosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CancelacionMotivos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncVoidMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncVoidMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncVoidMethodBuilder'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CentroApertura.CentroAperturaRequestDTO'];
          'text/json': components['schemas']['CentroApertura.CentroAperturaRequestDTO'];
          'application/*+json': components['schemas']['CentroApertura.CentroAperturaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['CentroApertura.CentroAperturaRequestDTO'];
          'text/json': components['schemas']['CentroApertura.CentroAperturaRequestDTO'];
          'application/*+json': components['schemas']['CentroApertura.CentroAperturaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/CentroAperturas/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/VistaEstructuraCentro': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO'];
            'application/json': components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO'];
            'text/json': components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Centro.CentroRequestDTO'];
          'text/json': components['schemas']['Centro.CentroRequestDTO'];
          'application/*+json': components['schemas']['Centro.CentroRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Centro.CentroRequestDTO'];
          'text/json': components['schemas']['Centro.CentroRequestDTO'];
          'application/*+json': components['schemas']['Centro.CentroRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Centros/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Consultorio.ConsultorioRequestDTO'];
          'text/json': components['schemas']['Consultorio.ConsultorioRequestDTO'];
          'application/*+json': components['schemas']['Consultorio.ConsultorioRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Consultorio.ConsultorioRequestDTO'];
          'text/json': components['schemas']['Consultorio.ConsultorioRequestDTO'];
          'application/*+json': components['schemas']['Consultorio.ConsultorioRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Consultorios/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ContratoFechaAct.ContratoFechaActRequestDTO'];
          'text/json': components['schemas']['ContratoFechaAct.ContratoFechaActRequestDTO'];
          'application/*+json': components['schemas']['ContratoFechaAct.ContratoFechaActRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ContratoFechaAct.ContratoFechaActRequestDTO'];
          'text/json': components['schemas']['ContratoFechaAct.ContratoFechaActRequestDTO'];
          'application/*+json': components['schemas']['ContratoFechaAct.ContratoFechaActRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ContratoFechaAct/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Contrato.ContratoRequestDTO'];
          'text/json': components['schemas']['Contrato.ContratoRequestDTO'];
          'application/*+json': components['schemas']['Contrato.ContratoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Contrato.ContratoRequestDTO'];
          'text/json': components['schemas']['Contrato.ContratoRequestDTO'];
          'application/*+json': components['schemas']['Contrato.ContratoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Contratos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Controles/ListVistaControlAnticipado': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          FechaDesde?: string;
          FechaHasta?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Controles.ControlAnticipado.ListVistaControlAnticipadoResponseDTO'];
            'application/json': components['schemas']['Controles.ControlAnticipado.ListVistaControlAnticipadoResponseDTO'];
            'text/json': components['schemas']['Controles.ControlAnticipado.ListVistaControlAnticipadoResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Controles/ControlPostAtencionAnalisis': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostRequestDTO'];
          'text/json': components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostRequestDTO'];
          'application/*+json': components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostResponseDTO'];
            'application/json': components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostResponseDTO'];
            'text/json': components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Controles/ControlOrden': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Controles.ControlOrden.ControlOrdenRequestDTO'];
          'text/json': components['schemas']['Controles.ControlOrden.ControlOrdenRequestDTO'];
          'application/*+json': components['schemas']['Controles.ControlOrden.ControlOrdenRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Controles.ControlOrden.ControlOrdenResponseDTO'];
            'application/json': components['schemas']['Controles.ControlOrden.ControlOrdenResponseDTO'];
            'text/json': components['schemas']['Controles.ControlOrden.ControlOrdenResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Controles/ControlPostTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Controles.ControlPostTurno.ControlPostTurnoRequestDTO'];
          'text/json': components['schemas']['Controles.ControlPostTurno.ControlPostTurnoRequestDTO'];
          'application/*+json': components['schemas']['Controles.ControlPostTurno.ControlPostTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Controles.ControlPostTurno.ControlPostTurnoResponseDTO'];
            'application/json': components['schemas']['Controles.ControlPostTurno.ControlPostTurnoResponseDTO'];
            'text/json': components['schemas']['Controles.ControlPostTurno.ControlPostTurnoResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Controles/GetAssemblyVersion': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Controles.GetAssemblyVersion.GetAssemblyVersionResponseDTO'];
            'application/json': components['schemas']['Controles.GetAssemblyVersion.GetAssemblyVersionResponseDTO'];
            'text/json': components['schemas']['Controles.GetAssemblyVersion.GetAssemblyVersionResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Controles/GetVistaComboControlPost': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Controles.GetVistaComboControlPost.GetVistaComboControlPostResponseDTO'];
            'application/json': components['schemas']['Controles.GetVistaComboControlPost.GetVistaComboControlPostResponseDTO'];
            'text/json': components['schemas']['Controles.GetVistaComboControlPost.GetVistaComboControlPostResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Controles/JobControlPost': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Controles.JobControlPost.JobControlPostResponseDTO'];
            'application/json': components['schemas']['Controles.JobControlPost.JobControlPostResponseDTO'];
            'text/json': components['schemas']['Controles.JobControlPost.JobControlPostResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Discapacidad.DiscapacidadRequestDTO'];
          'text/json': components['schemas']['Discapacidad.DiscapacidadRequestDTO'];
          'application/*+json': components['schemas']['Discapacidad.DiscapacidadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Discapacidad.DiscapacidadRequestDTO'];
          'text/json': components['schemas']['Discapacidad.DiscapacidadRequestDTO'];
          'application/*+json': components['schemas']['Discapacidad.DiscapacidadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Discapacidades/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['DocumentoTipo.DocumentoTipoRequestDTO'];
          'text/json': components['schemas']['DocumentoTipo.DocumentoTipoRequestDTO'];
          'application/*+json': components['schemas']['DocumentoTipo.DocumentoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['DocumentoTipo.DocumentoTipoRequestDTO'];
          'text/json': components['schemas']['DocumentoTipo.DocumentoTipoRequestDTO'];
          'application/*+json': components['schemas']['DocumentoTipo.DocumentoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO'];
          'text/json': components['schemas']['DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO'];
          'application/*+json': components['schemas']['DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO'];
          'text/json': components['schemas']['DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO'];
          'application/*+json': components['schemas']['DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/DocumentoTurnoTipo/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Equipo.ListVistaEquipos.ListVistaEquiposResponseDTO'];
            'application/json': components['schemas']['Equipo.ListVistaEquipos.ListVistaEquiposResponseDTO'];
            'text/json': components['schemas']['Equipo.ListVistaEquipos.ListVistaEquiposResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Equipo.EquipoRequestDTO'];
          'text/json': components['schemas']['Equipo.EquipoRequestDTO'];
          'application/*+json': components['schemas']['Equipo.EquipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Equipo.EquipoRequestDTO'];
          'text/json': components['schemas']['Equipo.EquipoRequestDTO'];
          'application/*+json': components['schemas']['Equipo.EquipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Equipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Especialidad.ListVistaEspecialidades.ListVistaEspecialidadesResponseDTO'];
            'application/json': components['schemas']['Especialidad.ListVistaEspecialidades.ListVistaEspecialidadesResponseDTO'];
            'text/json': components['schemas']['Especialidad.ListVistaEspecialidades.ListVistaEspecialidadesResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Especialidad.EspecialidadRequestDTO'];
          'text/json': components['schemas']['Especialidad.EspecialidadRequestDTO'];
          'application/*+json': components['schemas']['Especialidad.EspecialidadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Especialidad.EspecialidadRequestDTO'];
          'text/json': components['schemas']['Especialidad.EspecialidadRequestDTO'];
          'application/*+json': components['schemas']['Especialidad.EspecialidadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Especialidades/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['EstudioTipo.EstudioTiposRequestDTO'];
          'text/json': components['schemas']['EstudioTipo.EstudioTiposRequestDTO'];
          'application/*+json': components['schemas']['EstudioTipo.EstudioTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['EstudioTipo.EstudioTiposRequestDTO'];
          'text/json': components['schemas']['EstudioTipo.EstudioTiposRequestDTO'];
          'application/*+json': components['schemas']['EstudioTipo.EstudioTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/EstudioTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/FacturacionOS/ListVistaLiquidacionesOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSRequestDTO'];
          'text/json': components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSRequestDTO'];
          'application/*+json': components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSResponseDTO'];
            'application/json': components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSResponseDTO'];
            'text/json': components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/FacturacionOS/ListVistaDetalleLiquidacionOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSRequestDTO'];
          'text/json': components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSRequestDTO'];
          'application/*+json': components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSResponseDTO'];
            'application/json': components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSResponseDTO'];
            'text/json': components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/FacturacionOS/ListVistaPrestacionesPendientes': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesRequestDTO'];
          'text/json': components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesRequestDTO'];
          'application/*+json': components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesResponseDTO'];
            'application/json': components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesResponseDTO'];
            'text/json': components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/FacturacionOS/ListVistaFacturasOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSRequestDTO'];
          'text/json': components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSRequestDTO'];
          'application/*+json': components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSResponseDTO'];
            'application/json': components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSResponseDTO'];
            'text/json': components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/FacturacionOS/ListVistaDebitosOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSRequestDTO'];
          'text/json': components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSRequestDTO'];
          'application/*+json': components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSResponseDTO'];
            'application/json': components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSResponseDTO'];
            'text/json': components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/FacturacionOS/ListVistaContratosOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['FacturacionOS.ListVistaContratosOS.ListVistaContratosOSRequestDTO'];
          'text/json': components['schemas']['FacturacionOS.ListVistaContratosOS.ListVistaContratosOSRequestDTO'];
          'application/*+json': components['schemas']['FacturacionOS.ListVistaContratosOS.ListVistaContratosOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['FacturacionOS.ListVistaContratosOSListVistaContratosOS.ListVistaContratosOSResponseDTO'];
            'application/json': components['schemas']['FacturacionOS.ListVistaContratosOSListVistaContratosOS.ListVistaContratosOSResponseDTO'];
            'text/json': components['schemas']['FacturacionOS.ListVistaContratosOSListVistaContratosOS.ListVistaContratosOSResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Feriado.ListVistaFeriado.ListVistaFeriadosResponseDTO'];
            'application/json': components['schemas']['Feriado.ListVistaFeriado.ListVistaFeriadosResponseDTO'];
            'text/json': components['schemas']['Feriado.ListVistaFeriado.ListVistaFeriadosResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Feriado.FeriadoRequestDTO'];
          'text/json': components['schemas']['Feriado.FeriadoRequestDTO'];
          'application/*+json': components['schemas']['Feriado.FeriadoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Feriado.FeriadoRequestDTO'];
          'text/json': components['schemas']['Feriado.FeriadoRequestDTO'];
          'application/*+json': components['schemas']['Feriado.FeriadoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Feriados/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GeneradorDeTurnos/Procesar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: {
          idAgenda?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Application.QueriesSqlJobs.GeneradorDeTurnos.GeneradorDeTurnosResponseDTO'];
            'application/json': components['schemas']['Application.QueriesSqlJobs.GeneradorDeTurnos.GeneradorDeTurnosResponseDTO'];
            'text/json': components['schemas']['Application.QueriesSqlJobs.GeneradorDeTurnos.GeneradorDeTurnosResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['GruposMedico.GrupoMedicoRequestDTO'];
          'text/json': components['schemas']['GruposMedico.GrupoMedicoRequestDTO'];
          'application/*+json': components['schemas']['GruposMedico.GrupoMedicoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['GruposMedico.GrupoMedicoRequestDTO'];
          'text/json': components['schemas']['GruposMedico.GrupoMedicoRequestDTO'];
          'application/*+json': components['schemas']['GruposMedico.GrupoMedicoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoMedicos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['GruposPresPregunta.GruposPresPreguntaRequestDTO'];
          'text/json': components['schemas']['GruposPresPregunta.GruposPresPreguntaRequestDTO'];
          'application/*+json': components['schemas']['GruposPresPregunta.GruposPresPreguntaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['GruposPresPregunta.GruposPresPreguntaRequestDTO'];
          'text/json': components['schemas']['GruposPresPregunta.GruposPresPreguntaRequestDTO'];
          'application/*+json': components['schemas']['GruposPresPregunta.GruposPresPreguntaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrePreguntas/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['GrupoPrestacion.GrupoPrestacionRequestDTO'];
          'text/json': components['schemas']['GrupoPrestacion.GrupoPrestacionRequestDTO'];
          'application/*+json': components['schemas']['GrupoPrestacion.GrupoPrestacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['GrupoPrestacion.GrupoPrestacionRequestDTO'];
          'text/json': components['schemas']['GrupoPrestacion.GrupoPrestacionRequestDTO'];
          'application/*+json': components['schemas']['GrupoPrestacion.GrupoPrestacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/GrupoPrestaciones/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['HorarioAdicional.HorarioAdicionalRequestDTO'];
          'text/json': components['schemas']['HorarioAdicional.HorarioAdicionalRequestDTO'];
          'application/*+json': components['schemas']['HorarioAdicional.HorarioAdicionalRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['HorarioAdicional.HorarioAdicionalRequestDTO'];
          'text/json': components['schemas']['HorarioAdicional.HorarioAdicionalRequestDTO'];
          'application/*+json': components['schemas']['HorarioAdicional.HorarioAdicionalRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioAdicionales/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['HorarioDetalle.HorarioDetalleRequestDTO'];
          'text/json': components['schemas']['HorarioDetalle.HorarioDetalleRequestDTO'];
          'application/*+json': components['schemas']['HorarioDetalle.HorarioDetalleRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['HorarioDetalle.HorarioDetalleRequestDTO'];
          'text/json': components['schemas']['HorarioDetalle.HorarioDetalleRequestDTO'];
          'application/*+json': components['schemas']['HorarioDetalle.HorarioDetalleRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/HorarioDetalles/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncVoidMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncVoidMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncVoidMethodBuilder'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Horario.HorarioRequestDTO'];
          'text/json': components['schemas']['Horario.HorarioRequestDTO'];
          'application/*+json': components['schemas']['Horario.HorarioRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Horario.HorarioRequestDTO'];
          'text/json': components['schemas']['Horario.HorarioRequestDTO'];
          'application/*+json': components['schemas']['Horario.HorarioRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Horarios/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeEstadoTipo.InformeEstadoTipoRequestDTO'];
          'text/json': components['schemas']['InformeEstadoTipo.InformeEstadoTipoRequestDTO'];
          'application/*+json': components['schemas']['InformeEstadoTipo.InformeEstadoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeEstadoTipo.InformeEstadoTipoRequestDTO'];
          'text/json': components['schemas']['InformeEstadoTipo.InformeEstadoTipoRequestDTO'];
          'application/*+json': components['schemas']['InformeEstadoTipo.InformeEstadoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeEstadoTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Informes/GetData': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          IdPaciente?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Informe.GetDataInforme.GetDataInformeResponseDTO'];
            'application/json': components['schemas']['Informe.GetDataInforme.GetDataInformeResponseDTO'];
            'text/json': components['schemas']['Informe.GetDataInforme.GetDataInformeResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Informes/GetInformePorTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          TurnoId?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Informe.GetInformePorTurno.GetInformePorTurnoResponseDTO'];
            'application/json': components['schemas']['Informe.GetInformePorTurno.GetInformePorTurnoResponseDTO'];
            'text/json': components['schemas']['Informe.GetInformePorTurno.GetInformePorTurnoResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Informes/AsignacionPool': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          TurnoId?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Informe.AsignacionPool.AsignacionPoolResponseDTO'];
            'application/json': components['schemas']['Informe.AsignacionPool.AsignacionPoolResponseDTO'];
            'text/json': components['schemas']['Informe.AsignacionPool.AsignacionPoolResponseDTO'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Informes/CombosFiltroInformes': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Informe.CombosFiltroInformes.CombosFiltroInformesResponseDTO'];
            'application/json': components['schemas']['Informe.CombosFiltroInformes.CombosFiltroInformesResponseDTO'];
            'text/json': components['schemas']['Informe.CombosFiltroInformes.CombosFiltroInformesResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Informes/ListVistaInformes': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Informe.ListVistaInformes.ListVistaInformesRequestDTO'];
          'text/json': components['schemas']['Informe.ListVistaInformes.ListVistaInformesRequestDTO'];
          'application/*+json': components['schemas']['Informe.ListVistaInformes.ListVistaInformesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Informe.ListVistaInformes.ListVistaInformesResponseDTO'];
            'application/json': components['schemas']['Informe.ListVistaInformes.ListVistaInformesResponseDTO'];
            'text/json': components['schemas']['Informe.ListVistaInformes.ListVistaInformesResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeTemplate.InformeTemplateRequestDTO'];
          'text/json': components['schemas']['InformeTemplate.InformeTemplateRequestDTO'];
          'application/*+json': components['schemas']['InformeTemplate.InformeTemplateRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeTemplate.InformeTemplateRequestDTO'];
          'text/json': components['schemas']['InformeTemplate.InformeTemplateRequestDTO'];
          'application/*+json': components['schemas']['InformeTemplate.InformeTemplateRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplates/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeTemplateGrupos.InformesTemplateGruposRequestDTO'];
          'text/json': components['schemas']['InformeTemplateGrupos.InformesTemplateGruposRequestDTO'];
          'application/*+json': components['schemas']['InformeTemplateGrupos.InformesTemplateGruposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeTemplateGrupos.InformesTemplateGruposRequestDTO'];
          'text/json': components['schemas']['InformeTemplateGrupos.InformesTemplateGruposRequestDTO'];
          'application/*+json': components['schemas']['InformeTemplateGrupos.InformesTemplateGruposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformesTemplatesGrupos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['InformeSubTipo.ListVistaInformeSubTipo.ListVistaInformeSubTipoResponseDTO'];
            'application/json': components['schemas']['InformeSubTipo.ListVistaInformeSubTipo.ListVistaInformeSubTipoResponseDTO'];
            'text/json': components['schemas']['InformeSubTipo.ListVistaInformeSubTipo.ListVistaInformeSubTipoResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeSubTipo.InformeSubTipoRequestDTO'];
          'text/json': components['schemas']['InformeSubTipo.InformeSubTipoRequestDTO'];
          'application/*+json': components['schemas']['InformeSubTipo.InformeSubTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeSubTipo.InformeSubTipoRequestDTO'];
          'text/json': components['schemas']['InformeSubTipo.InformeSubTipoRequestDTO'];
          'application/*+json': components['schemas']['InformeSubTipo.InformeSubTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeSubTipo/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['InformeTipo.ListVistaInformeTipos.ListVistaInformeTiposResponseDTO'];
            'application/json': components['schemas']['InformeTipo.ListVistaInformeTipos.ListVistaInformeTiposResponseDTO'];
            'text/json': components['schemas']['InformeTipo.ListVistaInformeTipos.ListVistaInformeTiposResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/TipoInformePrestacion': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionRequestDTO'];
          'text/json': components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionRequestDTO'];
          'application/*+json': components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionResponseDTO'];
            'application/json': components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionResponseDTO'];
            'text/json': components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeTipo.InformeTiposRequestDTO'];
          'text/json': components['schemas']['InformeTipo.InformeTiposRequestDTO'];
          'application/*+json': components['schemas']['InformeTipo.InformeTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InformeTipo.InformeTiposRequestDTO'];
          'text/json': components['schemas']['InformeTipo.InformeTiposRequestDTO'];
          'application/*+json': components['schemas']['InformeTipo.InformeTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InformeTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InfTemplateTipo.InfTemplateTipoRequestDTO'];
          'text/json': components['schemas']['InfTemplateTipo.InfTemplateTipoRequestDTO'];
          'application/*+json': components['schemas']['InfTemplateTipo.InfTemplateTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['InfTemplateTipo.InfTemplateTipoRequestDTO'];
          'text/json': components['schemas']['InfTemplateTipo.InfTemplateTipoRequestDTO'];
          'application/*+json': components['schemas']['InfTemplateTipo.InfTemplateTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/InfTemplateTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['IvaTipo.IvaTipoRequestDTO'];
          'text/json': components['schemas']['IvaTipo.IvaTipoRequestDTO'];
          'application/*+json': components['schemas']['IvaTipo.IvaTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['IvaTipo.IvaTipoRequestDTO'];
          'text/json': components['schemas']['IvaTipo.IvaTipoRequestDTO'];
          'application/*+json': components['schemas']['IvaTipo.IvaTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/IvaTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/LlamadorEnColarPaciente': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Llamador.LlamadorEnColarPaciente.LlamadorEnColarPacienteRequestDTO'];
          'text/json': components['schemas']['Llamador.LlamadorEnColarPaciente.LlamadorEnColarPacienteRequestDTO'];
          'application/*+json': components['schemas']['Llamador.LlamadorEnColarPaciente.LlamadorEnColarPacienteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Llamador.LlamadorRequestDTO'];
          'text/json': components['schemas']['Llamador.LlamadorRequestDTO'];
          'application/*+json': components['schemas']['Llamador.LlamadorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Llamador.LlamadorRequestDTO'];
          'text/json': components['schemas']['Llamador.LlamadorRequestDTO'];
          'application/*+json': components['schemas']['Llamador.LlamadorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Llamadores/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['MailTemplate.MailTemplatesRequestDTO'];
          'text/json': components['schemas']['MailTemplate.MailTemplatesRequestDTO'];
          'application/*+json': components['schemas']['MailTemplate.MailTemplatesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['MailTemplate.MailTemplatesRequestDTO'];
          'text/json': components['schemas']['MailTemplate.MailTemplatesRequestDTO'];
          'application/*+json': components['schemas']['MailTemplate.MailTemplatesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplates/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['MailTemplatesTipo.MailTemplatesTiposRequestDTO'];
          'text/json': components['schemas']['MailTemplatesTipo.MailTemplatesTiposRequestDTO'];
          'application/*+json': components['schemas']['MailTemplatesTipo.MailTemplatesTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['MailTemplatesTipo.MailTemplatesTiposRequestDTO'];
          'text/json': components['schemas']['MailTemplatesTipo.MailTemplatesTiposRequestDTO'];
          'application/*+json': components['schemas']['MailTemplatesTipo.MailTemplatesTiposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MailTemplatesTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['ListVistaUsuarios.ListVistaMedicos.ListVistaMedicosResponseDTO'];
            'application/json': components['schemas']['ListVistaUsuarios.ListVistaMedicos.ListVistaMedicosResponseDTO'];
            'text/json': components['schemas']['ListVistaUsuarios.ListVistaMedicos.ListVistaMedicosResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/GetData': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          CriterioBusqueda?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Medico.GetDataMedico.GetDataMedicoResponseDTO'];
            'application/json': components['schemas']['Medico.GetDataMedico.GetDataMedicoResponseDTO'];
            'text/json': components['schemas']['Medico.GetDataMedico.GetDataMedicoResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Medico.MedicoRequestDTO'];
          'text/json': components['schemas']['Medico.MedicoRequestDTO'];
          'application/*+json': components['schemas']['Medico.MedicoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Medico.MedicoRequestDTO'];
          'text/json': components['schemas']['Medico.MedicoRequestDTO'];
          'application/*+json': components['schemas']['Medico.MedicoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Medicos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Modalidad.ModalidadRequestDTO'];
          'text/json': components['schemas']['Modalidad.ModalidadRequestDTO'];
          'application/*+json': components['schemas']['Modalidad.ModalidadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Modalidad.ModalidadRequestDTO'];
          'text/json': components['schemas']['Modalidad.ModalidadRequestDTO'];
          'application/*+json': components['schemas']['Modalidad.ModalidadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Modalidades/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO'];
          'text/json': components['schemas']['MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO'];
          'application/*+json': components['schemas']['MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO'];
          'text/json': components['schemas']['MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO'];
          'application/*+json': components['schemas']['MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/MotivoRechazoPrestaciones/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Nomenclador.ListVistaNomencladores.ListVistaNomencladoresResponseDTO'];
            'application/json': components['schemas']['Nomenclador.ListVistaNomencladores.ListVistaNomencladoresResponseDTO'];
            'text/json': components['schemas']['Nomenclador.ListVistaNomencladores.ListVistaNomencladoresResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Nomenclador.NomencladorRequestDTO'];
          'text/json': components['schemas']['Nomenclador.NomencladorRequestDTO'];
          'application/*+json': components['schemas']['Nomenclador.NomencladorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Nomenclador.NomencladorRequestDTO'];
          'text/json': components['schemas']['Nomenclador.NomencladorRequestDTO'];
          'application/*+json': components['schemas']['Nomenclador.NomencladorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Nomencladores/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['NomencladorTipo.NomencladorTipoRequestDTO'];
          'text/json': components['schemas']['NomencladorTipo.NomencladorTipoRequestDTO'];
          'application/*+json': components['schemas']['NomencladorTipo.NomencladorTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['NomencladorTipo.NomencladorTipoRequestDTO'];
          'text/json': components['schemas']['NomencladorTipo.NomencladorTipoRequestDTO'];
          'application/*+json': components['schemas']['NomencladorTipo.NomencladorTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NomencladorTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['NotaTurno.NotaTurnoRequestDTO'];
          'text/json': components['schemas']['NotaTurno.NotaTurnoRequestDTO'];
          'application/*+json': components['schemas']['NotaTurno.NotaTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['NotaTurno.NotaTurnoRequestDTO'];
          'text/json': components['schemas']['NotaTurno.NotaTurnoRequestDTO'];
          'application/*+json': components['schemas']['NotaTurno.NotaTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/NotaTurno/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Novedad.NovedadRequestDTO'];
          'text/json': components['schemas']['Novedad.NovedadRequestDTO'];
          'application/*+json': components['schemas']['Novedad.NovedadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Novedad.NovedadRequestDTO'];
          'text/json': components['schemas']['Novedad.NovedadRequestDTO'];
          'application/*+json': components['schemas']['Novedad.NovedadRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Novedades/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocial.ObraSocialRequestDTO'];
          'text/json': components['schemas']['ObraSocial.ObraSocialRequestDTO'];
          'application/*+json': components['schemas']['ObraSocial.ObraSocialRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocial.ObraSocialRequestDTO'];
          'text/json': components['schemas']['ObraSocial.ObraSocialRequestDTO'];
          'application/*+json': components['schemas']['ObraSocial.ObraSocialRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSociales/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO'];
          'text/json': components['schemas']['ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO'];
          'text/json': components['schemas']['ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactCircuitos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO'];
          'text/json': components['schemas']['ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO'];
          'text/json': components['schemas']['ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialFactConfig/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialGrupo.ObraSocialGruposRequestDTO'];
          'text/json': components['schemas']['ObraSocialGrupo.ObraSocialGruposRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialGrupo.ObraSocialGruposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialGrupo.ObraSocialGruposRequestDTO'];
          'text/json': components['schemas']['ObraSocialGrupo.ObraSocialGruposRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialGrupo.ObraSocialGruposRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialGrupos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialLiqConfig/AltaObraSocialLiqConfig': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO'][];
          'text/json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO'][];
          'application/*+json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO'][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Informe.GetDataInforme.GetDataInformeResponseDTO'];
            'application/json': components['schemas']['Informe.GetDataInforme.GetDataInformeResponseDTO'];
            'text/json': components['schemas']['Informe.GetDataInforme.GetDataInformeResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialLiqConfig/ModificarObraSocialLiqConfig': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO'][];
          'text/json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO'][];
          'application/*+json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO'][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigResponseDTO'];
            'application/json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigResponseDTO'];
            'text/json': components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigResponseDTO'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObraSocialLiqConfig/BajaObraSocialLiqConfig': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialLiqConfigs.BajaObraSocialLiqConfig.BajaObraSocialLiqConfigRequestDTO'][];
          'text/json': components['schemas']['ObraSocialLiqConfigs.BajaObraSocialLiqConfig.BajaObraSocialLiqConfigRequestDTO'][];
          'application/*+json': components['schemas']['ObraSocialLiqConfigs.BajaObraSocialLiqConfig.BajaObraSocialLiqConfigRequestDTO'][];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObrasSocialLiquidaciones/LiquidacionOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSRequestDTO'];
          'text/json': components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSResponseDTO'];
            'application/json': components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSResponseDTO'];
            'text/json': components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObrasSocialLiquidaciones/AltaTNLiquidacionOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSRequestDTO'];
          'text/json': components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSResponseDTO'];
            'application/json': components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSResponseDTO'];
            'text/json': components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObrasSocialLiquidaciones/EliminarLiquidacionOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialLiquidacion.EliminarLiquidacionOS.EliminarLiquidacionOSRequestDTO'];
          'text/json': components['schemas']['ObraSocialLiquidacion.EliminarLiquidacionOS.EliminarLiquidacionOSRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialLiquidacion.EliminarLiquidacionOS.EliminarLiquidacionOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObrasSocialLiquidaciones/BajaTNLiquidacionOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObraSocialLiquidacion.BajaTNLiquidacionOS.BajaTNLiquidacionOSRequestDTO'];
          'text/json': components['schemas']['ObraSocialLiquidacion.BajaTNLiquidacionOS.BajaTNLiquidacionOSRequestDTO'];
          'application/*+json': components['schemas']['ObraSocialLiquidacion.BajaTNLiquidacionOS.BajaTNLiquidacionOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO'];
          'text/json': components['schemas']['ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO'];
          'application/*+json': components['schemas']['ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO'];
          'text/json': components['schemas']['ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO'];
          'application/*+json': components['schemas']['ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocDebitosMotivos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObSocValidadore.ObSocValidadoresRequestDTO'];
          'text/json': components['schemas']['ObSocValidadore.ObSocValidadoresRequestDTO'];
          'application/*+json': components['schemas']['ObSocValidadore.ObSocValidadoresRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ObSocValidadore.ObSocValidadoresRequestDTO'];
          'text/json': components['schemas']['ObSocValidadore.ObSocValidadoresRequestDTO'];
          'application/*+json': components['schemas']['ObSocValidadore.ObSocValidadoresRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ObSocValidadores/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/GetData': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          IdTurno?: number;
          CriterioBusqueda?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Paciente.GetDataPaciente.GetDataPacienteResponseDTO'];
            'application/json': components['schemas']['Paciente.GetDataPaciente.GetDataPacienteResponseDTO'];
            'text/json': components['schemas']['Paciente.GetDataPaciente.GetDataPacienteResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/ModificarDniPaciente': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Paciente.ModificarDniPaciente.ModificarDniPacienteRequestDTO'];
          'text/json': components['schemas']['Paciente.ModificarDniPaciente.ModificarDniPacienteRequestDTO'];
          'application/*+json': components['schemas']['Paciente.ModificarDniPaciente.ModificarDniPacienteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/GetAtencionPaciente': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          IdPaciente?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Paciente.GetAtencionPaciente.GetAtencionPacienteResponseDTO'];
            'application/json': components['schemas']['Paciente.GetAtencionPaciente.GetAtencionPacienteResponseDTO'];
            'text/json': components['schemas']['Paciente.GetAtencionPaciente.GetAtencionPacienteResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/GetAtencionPacientePrestaciones': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          IdPaciente?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO'];
            'application/json': components['schemas']['Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO'];
            'text/json': components['schemas']['Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/UnificacionPaciente': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          IdPaciente?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO'];
            'application/json': components['schemas']['Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO'];
            'text/json': components['schemas']['Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Paciente.PacienteRequestDTO'];
          'text/json': components['schemas']['Paciente.PacienteRequestDTO'];
          'application/*+json': components['schemas']['Paciente.PacienteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Paciente.PacienteRequestDTO'];
          'text/json': components['schemas']['Paciente.PacienteRequestDTO'];
          'application/*+json': components['schemas']['Paciente.PacienteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pacientes/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Parentesco.ParentescoRequestDTO'];
          'text/json': components['schemas']['Parentesco.ParentescoRequestDTO'];
          'application/*+json': components['schemas']['Parentesco.ParentescoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Parentesco.ParentescoRequestDTO'];
          'text/json': components['schemas']['Parentesco.ParentescoRequestDTO'];
          'application/*+json': components['schemas']['Parentesco.ParentescoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Parentesco/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ParentescoPaciente.ParentescoPacienteRequestDTO'];
          'text/json': components['schemas']['ParentescoPaciente.ParentescoPacienteRequestDTO'];
          'application/*+json': components['schemas']['ParentescoPaciente.ParentescoPacienteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ParentescoPaciente.ParentescoPacienteRequestDTO'];
          'text/json': components['schemas']['ParentescoPaciente.ParentescoPacienteRequestDTO'];
          'application/*+json': components['schemas']['ParentescoPaciente.ParentescoPacienteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ParentescosPaciente/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Piso.PisoRequestDTO'];
          'text/json': components['schemas']['Piso.PisoRequestDTO'];
          'application/*+json': components['schemas']['Piso.PisoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Piso.PisoRequestDTO'];
          'text/json': components['schemas']['Piso.PisoRequestDTO'];
          'application/*+json': components['schemas']['Piso.PisoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Pisos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Plan.ListVistaPlanes.ListVistaPlanesResponseDTO'];
            'application/json': components['schemas']['Plan.ListVistaPlanes.ListVistaPlanesResponseDTO'];
            'text/json': components['schemas']['Plan.ListVistaPlanes.ListVistaPlanesResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Plan.PlanRequestDTO'];
          'text/json': components['schemas']['Plan.PlanRequestDTO'];
          'application/*+json': components['schemas']['Plan.PlanRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Plan.PlanRequestDTO'];
          'text/json': components['schemas']['Plan.PlanRequestDTO'];
          'application/*+json': components['schemas']['Plan.PlanRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Planes/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Preparacion.PreparacionRequestDTO'];
          'text/json': components['schemas']['Preparacion.PreparacionRequestDTO'];
          'application/*+json': components['schemas']['Preparacion.PreparacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Preparacion.PreparacionRequestDTO'];
          'text/json': components['schemas']['Preparacion.PreparacionRequestDTO'];
          'application/*+json': components['schemas']['Preparacion.PreparacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Preparaciones/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['PreparacionPrestacion.PreparacionPrestacionRequestDTO'];
          'text/json': components['schemas']['PreparacionPrestacion.PreparacionPrestacionRequestDTO'];
          'application/*+json': components['schemas']['PreparacionPrestacion.PreparacionPrestacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['PreparacionPrestacion.PreparacionPrestacionRequestDTO'];
          'text/json': components['schemas']['PreparacionPrestacion.PreparacionPrestacionRequestDTO'];
          'application/*+json': components['schemas']['PreparacionPrestacion.PreparacionPrestacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PreparacionPrestacion/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/ListVistaPrestaciones': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          AgendaId?: number;
          PlanId?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/PreBusquedaPorPaciente': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Prestacion.PreBusquedaPrestaciones.PreBusquedaPrestacionesRequestDTO'];
          'text/json': components['schemas']['Prestacion.PreBusquedaPrestaciones.PreBusquedaPrestacionesRequestDTO'];
          'application/*+json': components['schemas']['Prestacion.PreBusquedaPrestaciones.PreBusquedaPrestacionesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Prestacion.PrestacionRequestDTO'];
          'text/json': components['schemas']['Prestacion.PrestacionRequestDTO'];
          'application/*+json': components['schemas']['Prestacion.PrestacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Prestacion.PrestacionRequestDTO'];
          'text/json': components['schemas']['Prestacion.PrestacionRequestDTO'];
          'application/*+json': components['schemas']['Prestacion.PrestacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Prestaciones/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['PrestacionAgenda.PrestacionAgendaRequestDTO'];
          'text/json': components['schemas']['PrestacionAgenda.PrestacionAgendaRequestDTO'];
          'application/*+json': components['schemas']['PrestacionAgenda.PrestacionAgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['PrestacionAgenda.PrestacionAgendaRequestDTO'];
          'text/json': components['schemas']['PrestacionAgenda.PrestacionAgendaRequestDTO'];
          'application/*+json': components['schemas']['PrestacionAgenda.PrestacionAgendaRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionesAgenda/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['PrestacionNomenclador.PrestacionNomencladorRequestDTO'];
          'text/json': components['schemas']['PrestacionNomenclador.PrestacionNomencladorRequestDTO'];
          'application/*+json': components['schemas']['PrestacionNomenclador.PrestacionNomencladorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['PrestacionNomenclador.PrestacionNomencladorRequestDTO'];
          'text/json': components['schemas']['PrestacionNomenclador.PrestacionNomencladorRequestDTO'];
          'application/*+json': components['schemas']['PrestacionNomenclador.PrestacionNomencladorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/PrestacionNomencladores/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['QuitaPresenteMotivo.ListVistaQuitaPresenteMotivos.ListVistaQuitaPresenteMotivosResponseDTO'];
            'application/json': components['schemas']['QuitaPresenteMotivo.ListVistaQuitaPresenteMotivos.ListVistaQuitaPresenteMotivosResponseDTO'];
            'text/json': components['schemas']['QuitaPresenteMotivo.ListVistaQuitaPresenteMotivos.ListVistaQuitaPresenteMotivosResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO'];
          'text/json': components['schemas']['QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO'];
          'application/*+json': components['schemas']['QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO'];
          'text/json': components['schemas']['QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO'];
          'application/*+json': components['schemas']['QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/QuitaPresenteMotivos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Recepcion.RecepcionRequestDTO'];
          'text/json': components['schemas']['Recepcion.RecepcionRequestDTO'];
          'application/*+json': components['schemas']['Recepcion.RecepcionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Recepcion.RecepcionRequestDTO'];
          'text/json': components['schemas']['Recepcion.RecepcionRequestDTO'];
          'application/*+json': components['schemas']['Recepcion.RecepcionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Recepciones/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Rol.RolRequestDTO'];
          'text/json': components['schemas']['Rol.RolRequestDTO'];
          'application/*+json': components['schemas']['Rol.RolRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Rol.RolRequestDTO'];
          'text/json': components['schemas']['Rol.RolRequestDTO'];
          'application/*+json': components['schemas']['Rol.RolRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Roles/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TelefonoAdicional.TelefonoAdicionalRequestDTO'];
          'text/json': components['schemas']['TelefonoAdicional.TelefonoAdicionalRequestDTO'];
          'application/*+json': components['schemas']['TelefonoAdicional.TelefonoAdicionalRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TelefonoAdicional.TelefonoAdicionalRequestDTO'];
          'text/json': components['schemas']['TelefonoAdicional.TelefonoAdicionalRequestDTO'];
          'application/*+json': components['schemas']['TelefonoAdicional.TelefonoAdicionalRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TelefonoAdicional/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoDocumentos/S3UploadIntegrity': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoDocumento.S3UploadIntegrity.S3UploadIntegrityRequestDTO'];
          'text/json': components['schemas']['TurnoDocumento.S3UploadIntegrity.S3UploadIntegrityRequestDTO'];
          'application/*+json': components['schemas']['TurnoDocumento.S3UploadIntegrity.S3UploadIntegrityRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoDocumentos/S3DeleteIntegrity/{FileName}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          patch?: string;
        };
        header?: never;
        path: {
          FileName: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoDocumentos/S3Modify': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoDocumento.S3Modify.S3ModifyRequestDTO'];
          'text/json': components['schemas']['TurnoDocumento.S3Modify.S3ModifyRequestDTO'];
          'application/*+json': components['schemas']['TurnoDocumento.S3Modify.S3ModifyRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/AsignarEstadoAtendiendo': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
          'text/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
          'application/*+json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['TurnoEstado.CambiosEstadoTurno.AsignarEstadoAtendiendo.EstadoAtendiendoResponseDTO'];
            'application/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.AsignarEstadoAtendiendo.EstadoAtendiendoResponseDTO'];
            'text/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.AsignarEstadoAtendiendo.EstadoAtendiendoResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/AsignarEstadoAtendido': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
          'text/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
          'application/*+json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/AsignarEstadoPresente': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
          'text/json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
          'application/*+json': components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoEstado.TurnoEstadoRequestDTO'];
          'text/json': components['schemas']['TurnoEstado.TurnoEstadoRequestDTO'];
          'application/*+json': components['schemas']['TurnoEstado.TurnoEstadoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoEstado.TurnoEstadoRequestDTO'];
          'text/json': components['schemas']['TurnoEstado.TurnoEstadoRequestDTO'];
          'application/*+json': components['schemas']['TurnoEstado.TurnoEstadoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstados/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoEstadoTipo.TurnoEstadoTipoRequestDTO'];
          'text/json': components['schemas']['TurnoEstadoTipo.TurnoEstadoTipoRequestDTO'];
          'application/*+json': components['schemas']['TurnoEstadoTipo.TurnoEstadoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoEstadoTipo.TurnoEstadoTipoRequestDTO'];
          'text/json': components['schemas']['TurnoEstadoTipo.TurnoEstadoTipoRequestDTO'];
          'application/*+json': components['schemas']['TurnoEstadoTipo.TurnoEstadoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnoEstadoTipos/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/GetData': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          IdPaciente?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.GetDataTurno.GetDataTurnoResponseDTO'];
            'application/json': components['schemas']['Turno.GetDataTurno.GetDataTurnoResponseDTO'];
            'text/json': components['schemas']['Turno.GetDataTurno.GetDataTurnoResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/AsignacionDeTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.AsignacionDeTurno.AsignacionDeTurnoRequestDTO'];
          'text/json': components['schemas']['Turno.AsignacionDeTurno.AsignacionDeTurnoRequestDTO'];
          'application/*+json': components['schemas']['Turno.AsignacionDeTurno.AsignacionDeTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/CancelacionDeTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.CancelacionDeTurno.CancelacionDeTurnoRequestDTO'];
          'text/json': components['schemas']['Turno.CancelacionDeTurno.CancelacionDeTurnoRequestDTO'];
          'application/*+json': components['schemas']['Turno.CancelacionDeTurno.CancelacionDeTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/RecepcionDeTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoRequestDTO'];
          'text/json': components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoRequestDTO'];
          'application/*+json': components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO'];
            'application/json': components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO'];
            'text/json': components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/QuitaPresenteDeTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.QuitaPresente.QuitaPresenteRequestDTO'];
          'text/json': components['schemas']['Turno.QuitaPresente.QuitaPresenteRequestDTO'];
          'application/*+json': components['schemas']['Turno.QuitaPresente.QuitaPresenteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.QuitaPresente.QuitaPresenteResponseDTO'];
            'application/json': components['schemas']['Turno.QuitaPresente.QuitaPresenteResponseDTO'];
            'text/json': components['schemas']['Turno.QuitaPresente.QuitaPresenteResponseDTO'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/AsociarDesasociarMedicoSolicitante': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.AsociarDesasociarMedicoSolicitante.AsociarDesasociarMedicoSolicitanteRequestDTO'];
          'text/json': components['schemas']['Turno.AsociarDesasociarMedicoSolicitante.AsociarDesasociarMedicoSolicitanteRequestDTO'];
          'application/*+json': components['schemas']['Turno.AsociarDesasociarMedicoSolicitante.AsociarDesasociarMedicoSolicitanteRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/CreacionSobreTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.CreacionSobreTurno.CreacionSobreTurnoRequestDTO'];
          'text/json': components['schemas']['Turno.CreacionSobreTurno.CreacionSobreTurnoRequestDTO'];
          'application/*+json': components['schemas']['Turno.CreacionSobreTurno.CreacionSobreTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/BloqueoDeTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoRequestDTO'];
          'text/json': components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoRequestDTO'];
          'application/*+json': components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoResponseDTO'];
            'application/json': components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoResponseDTO'];
            'text/json': components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/NumeroDeAutorizacion': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionRequestDTO'];
          'text/json': components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionRequestDTO'];
          'application/*+json': components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionResponseDTO'];
            'application/json': components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionResponseDTO'];
            'text/json': components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/CambioOSAnalis': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisRequestDTO'];
          'text/json': components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisRequestDTO'];
          'application/*+json': components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisResponseDTO'];
            'application/json': components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisResponseDTO'];
            'text/json': components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/GetPrestacionesAgendaPorTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          TurnoId?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.GetPrestacionAgenda.GetPrestacionesAgendaResponseDTO'];
            'application/json': components['schemas']['Turno.GetPrestacionAgenda.GetPrestacionesAgendaResponseDTO'];
            'text/json': components['schemas']['Turno.GetPrestacionAgenda.GetPrestacionesAgendaResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/ModificarPrestaciones': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.ModificarPrestacion.ModificarPrestacionesRequestDTO'];
          'text/json': components['schemas']['Turno.ModificarPrestacion.ModificarPrestacionesRequestDTO'];
          'application/*+json': components['schemas']['Turno.ModificarPrestacion.ModificarPrestacionesRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/ModificarCodigoNomencladores': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresRequestDTO'];
          'text/json': components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresRequestDTO'];
          'application/*+json': components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresResponsetDTO'];
            'application/json': components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresResponsetDTO'];
            'text/json': components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresResponsetDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/CambioDeTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.CambioDeTurno.CambioDeTurnoRequestDTO'];
          'text/json': components['schemas']['Turno.CambioDeTurno.CambioDeTurnoRequestDTO'];
          'application/*+json': components['schemas']['Turno.CambioDeTurno.CambioDeTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/CambioOS': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.CambioOS.CambioOSRequestDTO'];
          'text/json': components['schemas']['Turno.CambioOS.CambioOSRequestDTO'];
          'application/*+json': components['schemas']['Turno.CambioOS.CambioOSRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/DefinicionDeValores': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresRequestDTO'];
          'text/json': components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresRequestDTO'];
          'application/*+json': components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresResponseDTO'];
            'application/json': components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresResponseDTO'];
            'text/json': components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/EnvioWorklist': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.EnvioWorklist.EnvioWorklistRequestDTO'];
          'text/json': components['schemas']['Turno.EnvioWorklist.EnvioWorklistRequestDTO'];
          'application/*+json': components['schemas']['Turno.EnvioWorklist.EnvioWorklistRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.EnvioWorklist.EnvioWorklistResponseDTO'];
            'application/json': components['schemas']['Turno.EnvioWorklist.EnvioWorklistResponseDTO'];
            'text/json': components['schemas']['Turno.EnvioWorklist.EnvioWorklistResponseDTO'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/InformacionTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          TurnoId?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Turno.InformacionTurno.InformacionTurnoResponseDTO'];
            'application/json': components['schemas']['Turno.InformacionTurno.InformacionTurnoResponseDTO'];
            'text/json': components['schemas']['Turno.InformacionTurno.InformacionTurnoResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Turnos/CobroTurno': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Turno.CobroTurno.CobroTurnoRequestDTO'];
          'text/json': components['schemas']['Turno.CobroTurno.CobroTurnoRequestDTO'];
          'application/*+json': components['schemas']['Turno.CobroTurno.CobroTurnoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'application/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
            'text/json': components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoTipo.TurnoTipoRequestDTO'];
          'text/json': components['schemas']['TurnoTipo.TurnoTipoRequestDTO'];
          'application/*+json': components['schemas']['TurnoTipo.TurnoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['TurnoTipo.TurnoTipoRequestDTO'];
          'text/json': components['schemas']['TurnoTipo.TurnoTipoRequestDTO'];
          'application/*+json': components['schemas']['TurnoTipo.TurnoTipoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/TurnosTipo/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/Vista': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'text/plain': components['schemas']['Usuario.ListVistaUsuarios.ListVistaUsuariosResponseDTO'];
            'application/json': components['schemas']['Usuario.ListVistaUsuarios.ListVistaUsuariosResponseDTO'];
            'text/json': components['schemas']['Usuario.ListVistaUsuarios.ListVistaUsuariosResponseDTO'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Usuario.UsuarioRequestDTO'];
          'text/json': components['schemas']['Usuario.UsuarioRequestDTO'];
          'application/*+json': components['schemas']['Usuario.UsuarioRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Usuario.UsuarioRequestDTO'];
          'text/json': components['schemas']['Usuario.UsuarioRequestDTO'];
          'application/*+json': components['schemas']['Usuario.UsuarioRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Usuarios/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ValidadorCaido.ValidadorCaidoRequestDTO'];
          'text/json': components['schemas']['ValidadorCaido.ValidadorCaidoRequestDTO'];
          'application/*+json': components['schemas']['ValidadorCaido.ValidadorCaidoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['ValidadorCaido.ValidadorCaidoRequestDTO'];
          'text/json': components['schemas']['ValidadorCaido.ValidadorCaidoRequestDTO'];
          'application/*+json': components['schemas']['ValidadorCaido.ValidadorCaidoRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/ValidadorCaido/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Validador.ValidadorRequestDTO'];
          'text/json': components['schemas']['Validador.ValidadorRequestDTO'];
          'application/*+json': components['schemas']['Validador.ValidadorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Validador.ValidadorRequestDTO'];
          'text/json': components['schemas']['Validador.ValidadorRequestDTO'];
          'application/*+json': components['schemas']['Validador.ValidadorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Validadores/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/Get': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/GetAll': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/GetAllLite': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/Delete': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/Create': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Vestidor.VestidorRequestDTO'];
          'text/json': components['schemas']['Vestidor.VestidorRequestDTO'];
          'application/*+json': components['schemas']['Vestidor.VestidorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/Update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          'application/json': components['schemas']['Vestidor.VestidorRequestDTO'];
          'text/json': components['schemas']['Vestidor.VestidorRequestDTO'];
          'application/*+json': components['schemas']['Vestidor.VestidorRequestDTO'];
        };
      };
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/Inactivar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/Vestidores/Activar': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: {
          id?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    'ASuCargo.ASuCargoRequestDTO': {
      /** Format: int32 */
      idAgenda?: number | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number | null;
      noValida?: boolean;
    };
    'Agenda.AgendaRequestDTO': {
      nombreAgenda?: string | null;
      /** Format: int32 */
      idMedico?: number | null;
      /** Format: int32 */
      idEquipo?: number | null;
      /** Format: int32 */
      idEspecialidad?: number;
      /** Format: int32 */
      minutosTurno: number;
      /** Format: date */
      cambiosDesde?: string;
      sexo: string;
      /** Format: int32 */
      edadMin: number;
      /** Format: int32 */
      edadMax: number;
      /** Format: int32 */
      idConsultorioFijo?: number | null;
      /** Format: int32 */
      pesoMax: number;
      atiendePrimeraVez?: boolean;
      usaMinutosDinamicos?: boolean;
      seOfreceWeb: boolean;
      /** Format: int32 */
      diasGeneracion: number;
      /** Format: int32 */
      idAgendaTipo?: number;
      evoluciona: boolean;
      informa: boolean;
      liquidaMedico: boolean;
      /** Format: int32 */
      idGrupoMedico?: number | null;
      pasaTerminal?: boolean;
      informaEnAtencion?: boolean;
      permiteTurnoManual?: boolean;
      /** Format: int32 */
      idAtencionTipo?: number;
      retiraEfectivo?: boolean;
      trabajaFeriados?: boolean;
      _24Horas?: boolean;
      activo?: boolean;
    };
    'Agenda.AgendaResponseDTO': {
      nombreAgenda?: string | null;
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idMedico?: number;
      /** Format: int32 */
      idEquipo?: number;
      /** Format: int32 */
      idEspecialidad?: number;
      /** Format: int32 */
      minutosTurno?: number;
      /** Format: date */
      cambiosDesde?: string;
      sexo?: string | null;
      /** Format: int32 */
      edadMin?: number;
      /** Format: int32 */
      edadMax?: number;
      /** Format: int32 */
      idConsultorioFijo?: number;
      /** Format: int32 */
      pesoMax?: number;
      atiendePrimeraVez?: boolean;
      usaMinutosDinamicos?: boolean;
      seOfreceWeb?: boolean;
      /** Format: int32 */
      sobreTurnosAusentismo?: number;
      /** Format: int32 */
      minutosMinimos?: number;
      /** Format: int32 */
      diasGeneracion?: number;
      /** Format: int32 */
      idAgendaTipo?: number;
      evoluciona?: boolean;
      informa?: boolean;
      liquidaMedico?: boolean;
      /** Format: int32 */
      idGrupoMedico?: number;
      pasaTerminal?: boolean;
      informaEnAtencion?: boolean;
      permiteTurnoManual?: boolean;
      /** Format: int32 */
      idAtencionTipo?: number;
      retiraEfectivo?: boolean;
      trabajaFeriados?: boolean;
      _24Horas?: boolean;
      activo?: boolean;
      idAgendaTipoNavigation?: components['schemas']['AgendaTipo.AgendaTipoResponseDTO'];
      idAtencionTipoNavigation?: components['schemas']['AtencionTipo.AtencionTipoResponseDTO'];
      idConsultorioFijoNavigation?: components['schemas']['Consultorio.ConsultorioResponseDTO'];
      idEquipoNavigation?: components['schemas']['Equipo.EquipoResponseDTO'];
      idEspecialidadNavigation?: components['schemas']['Especialidad.EspecialidadResponseDTO'];
      idGrupoMedicoNavigation?: components['schemas']['GruposMedico.GrupoMedicoResponseDTO'];
      idMedicoNavigation?: components['schemas']['Medico.MedicoResponseDTO'];
    };
    'Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaRequestDTO': {
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaResponseDTO': {
      agendaCerrada?: boolean;
      turnoResponse?:
        | components['schemas']['Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaTurnoDTO'][]
        | null;
      turnoNomencladoresResponse?:
        | components['schemas']['Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaTurnoNomencladoresDTO'][]
        | null;
    };
    'Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaPacienteDTO': {
      apellido?: string | null;
      nombre?: string | null;
    };
    'Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaTurnoDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      medicoId?: number | null;
      medicoDescripcion?: string | null;
      /** Format: int32 */
      medicoSolicitanteId?: number | null;
      medicoSolicitanteDescripcion?: string | null;
      /** Format: int32 */
      equipoId?: number | null;
      /** Format: int32 */
      especialidadId?: number;
      especialidadDescripcion?: string | null;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      /** Format: date */
      fechaAsignacion?: string | null;
      /** Format: int32 */
      obraSocialId?: number | null;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number | null;
      planDescripcion?: string | null;
      aSuCargo?: boolean;
      pacienteResponse?: components['schemas']['Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaPacienteDTO'];
      /** Format: int32 */
      turnoTipoId?: number;
      estadoInvalido?: boolean;
      faltaOrden?: boolean;
      faltaAutorizacion?: boolean;
      faltaMedicoSolicitante?: boolean;
      turnoEstadosResponseId?: number[] | null;
    };
    'Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaTurnoNomencladoresDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int64 */
      nomencladorId?: number;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      numeroAfiliado?: string | null;
      /** Format: int32 */
      ivaTipoId?: number;
      /** Format: int32 */
      cantidad?: number;
      numeroAutorizacion?: string | null;
      validacionAprobada?: boolean;
      faltaAutorizacion?: boolean;
      faltaNumeroAutorizacion?: boolean;
      faltaOrden?: boolean;
      faltaValidacion?: boolean;
      faltaCobro?: boolean;
    };
    'Agenda.AperturaDeAgenda.AperturaDeAgendaRequestDTO': {
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      consultorioId?: number;
      nota?: string | null;
      /** Format: int32 */
      usuarioId?: number;
    };
    'Agenda.CierreAgenda.CierreAgendaRequestDTO': {
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      usuarioId?: number;
      /** Format: int32 */
      estadoCierre?: number;
    };
    'Agenda.ListAgendasActivas.DTOAuxiliares.ListAgendasActivasEntradaSalidasDTO': {
      /** Format: int32 */
      idAgenda?: number;
      horaDesde?: string | null;
      horaHasta?: string | null;
      /** Format: int32 */
      idHorarioDetalle?: number;
    };
    'Agenda.ListAgendasActivas.DTOAuxiliares.ListAgendasActivasHorariosDetallesDTO': {
      /** Format: int32 */
      horarioDetalleId?: number;
      /** Format: int32 */
      agendaId?: number;
      horaEntrada?: string | null;
      horaSalida?: string | null;
      /** Format: int32 */
      centroId?: number;
      centroDescripcion?: string | null;
      /** Format: int32 */
      consultorioId?: number;
      consultorioDescripcion?: string | null;
    };
    'Agenda.ListAgendasActivas.ListAgendasActivasResponseDTO': {
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      medicoId?: number;
      usuarioNombreApellido?: string | null;
      /** Format: int32 */
      equipoId?: number;
      /** Format: int32 */
      especialidadId?: number;
      especialidadDescripcion?: string | null;
      /** Format: int32 */
      consultorioId?: number;
      consultorioDescripcion?: string | null;
      /** Format: int32 */
      minutosTurnos?: number;
      usaMinutosDinamicos?: boolean;
      /** Format: int32 */
      calculoDemora?: number;
      /** Format: int32 */
      cantidadPresentes?: number;
      /** Format: int32 */
      cantidadAtendidos?: number;
      /** Format: int32 */
      cantidadSinLlegar?: number;
      horarioDetalleDtos?:
        | components['schemas']['Agenda.ListAgendasActivas.DTOAuxiliares.ListAgendasActivasHorariosDetallesDTO'][]
        | null;
      entradaSalidaDtos?:
        | components['schemas']['Agenda.ListAgendasActivas.DTOAuxiliares.ListAgendasActivasEntradaSalidasDTO'][]
        | null;
    };
    'Agenda.ListFechasConTurnos.ListFechasConTurnosResponseDTO': {
      fechasConTurnos?: string[] | null;
    };
    'Agenda.ListVistaAgenda.ListVistaAgendaResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      usuarioId?: number;
      usuarioNombre?: string | null;
      usuarioApellido?: string | null;
      /** Format: int32 */
      equipoId?: number;
      equipoDescripcion?: string | null;
      /** Format: int32 */
      especialidadId?: number;
      especialidadDescripcion?: string | null;
      /** Format: int32 */
      agendaTipoId?: number;
      agendaTipoDescripcion?: string | null;
      /** Format: int32 */
      atencionTipoId?: number;
      atencionTipoDescripcion?: string | null;
      /** Format: int32 */
      sobreTurnosAusentismo?: number;
      informa?: boolean;
      evoluciona?: boolean;
      activo?: boolean;
    };
    'Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaEntradaSalidasDTO': {
      /** Format: int32 */
      agendaId?: number;
      horaDesde?: string | null;
      horaHasta?: string | null;
      /** Format: int32 */
      horarioDetalleId?: number;
      nota?: string | null;
      usuarioNombreApellidoIngreso?: string | null;
      usuarioNombreApellidoEgreso?: string | null;
    };
    'Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaHorariosDetallesDTO': {
      /** Format: int32 */
      horarioDetalleId?: number;
      /** Format: int32 */
      agendaId?: number;
      horaEntrada?: string | null;
      horaSalida?: string | null;
      /** Format: int32 */
      centroId?: number;
      centroDescripcion?: string | null;
      /** Format: int32 */
      consultorioId?: number;
      consultorioDescripcion?: string | null;
    };
    'Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaNotaTurnosResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      descripcion?: string | null;
      /** Format: int32 */
      usuarioId?: number;
      usuarioNombreApellido?: string | null;
      /** Format: date */
      fecha?: string;
    };
    'Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaTurnosResponseDTO': {
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      numeroAfiliado?: string | null;
      /** Format: int32 */
      turnoTiposId?: number;
      /** Format: int32 */
      pacienteId?: number;
      pacienteNombreApellido?: string | null;
      urgente?: boolean;
      /** Format: int32 */
      minutos?: number;
      /** Format: int32 */
      minutosDisponibles?: number;
      sobreTurnoManual?: boolean;
      sobreTurnoAusentismo?: boolean;
      noOfreceEnBusqueda?: boolean;
      /** Format: int32 */
      turnoEstadoTipoId?: number;
      turnoEstadoTipoDescripcion?: string | null;
      /** Format: int32 */
      turnoEstadoTipoOrden?: number;
      turnoTiposDescripcion?: string | null;
      motivoBloqueo?: string | null;
    };
    'Agenda.ListVistaAgendaDia.ListVistaAgendaDiaResponseDTO': {
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      medicoId?: number;
      usuarioNombreApellido?: string | null;
      /** Format: int32 */
      equipoId?: number;
      /** Format: int32 */
      especialidadId?: number;
      especialidadDescripcion?: string | null;
      agendaTipoDescripcion?: string | null;
      informa?: boolean;
      evoluciona?: boolean;
      usaMinutosDinamicos?: boolean;
      consultorioDescripcion?: string | null;
      usuarioNombreApellidoIngreso?: string | null;
      usuarioNombreApellidoEgreso?: string | null;
      nota?: string | null;
      /** Format: int32 */
      minutosTurno?: number;
      /** Format: int32 */
      consultorioId?: number;
      turnosDTO?:
        | components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaTurnosResponseDTO'][]
        | null;
      notaTurnosDTO?:
        | components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaNotaTurnosResponseDTO'][]
        | null;
      entradaSalidaDtos?:
        | components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaEntradaSalidasDTO'][]
        | null;
      horarioDetalleDtos?:
        | components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaHorariosDetallesDTO'][]
        | null;
    };
    'Agenda.ModalInfoTurnoAgenda.DTOAuxiliares.ModalInfoTurnoAgendaTurnoDelDiaDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: time */
      horaTurno?: string;
      /** Format: int32 */
      consultorioId?: number;
      consultorioDescripcion?: string | null;
      estadoTurno?: string | null;
      /** Format: time */
      horaCambioEstado?: string;
    };
    'Agenda.ModalInfoTurnoAgenda.DTOAuxiliares.ModalInfoTurnoAgendaTurnoPrestacionesDTO': {
      /** Format: int32 */
      prestacionId?: number;
      prestacionDescripcion?: string | null;
    };
    'Agenda.ModalInfoTurnoAgenda.ModalInfoTurnoAgendaResponseDTO': {
      /** Format: int32 */
      pacienteId?: number;
      /** Format: int32 */
      pacienteEdad?: number;
      pacienteSexo?: string | null;
      turnoPrestacionesDTO?:
        | components['schemas']['Agenda.ModalInfoTurnoAgenda.DTOAuxiliares.ModalInfoTurnoAgendaTurnoPrestacionesDTO'][]
        | null;
      turnoDelDiaDTO?:
        | components['schemas']['Agenda.ModalInfoTurnoAgenda.DTOAuxiliares.ModalInfoTurnoAgendaTurnoDelDiaDTO'][]
        | null;
    };
    'Agenda.ModificarAperturaDeAgenda.ModificarAperturaDeAgendaRequestDTO': {
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      consultorioId?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'AgendaNomenclador.AgendaNomencladorRequestDTO': {
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int64 */
      idNomenclador?: number;
    };
    'AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO': {
      /** Format: int32 */
      idAgenda?: number | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number | null;
    };
    'AgendaTipo.AgendaTipoRequestDTO': {
      descripcion?: string | null;
    };
    'AgendaTipo.AgendaTipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'AreaLogin.AreaLoginRequestDTO': {
      descripcion: string;
      /** Format: int32 */
      idCentro?: number;
      activo?: boolean;
    };
    'AreaLogin.ListVistaAreaLogin.ListVistaAreaLoginResponseDTO': {
      /** Format: int32 */
      id?: number;
      activo?: boolean;
      descripcion?: string | null;
      /** Format: int32 */
      centroId?: number;
      centroDescripcion?: string | null;
    };
    'AtencionTipo.AtencionTipoRequestDTO': {
      descripcion?: string | null;
    };
    'AtencionTipo.AtencionTipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'BloqueoMotivo.BloqueoMotivosRequestDTO': {
      descripcion?: string | null;
    };
    'CajaAperturaConfig.CajaAperturaConfigsRequestDTO': {
      /** Format: int32 */
      idCajaDiaria?: number;
      /** Format: int32 */
      idUsuarioConfig?: number;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      importe?: number;
      /** Format: date */
      fecha?: string;
      recurrente?: boolean;
    };
    'CajaBanco.CajaBancosRequestDTO': {
      descripcion?: string | null;
    };
    'CajaCuota.CajaCuotasRequestDTO': {
      /** Format: int32 */
      cantidadCuotas?: number;
      /** Format: double */
      coeficiente?: number;
      /** Format: int32 */
      idCajaBancos?: number;
      /** Format: int32 */
      idEspecialidades?: number;
    };
    'CajaDerecho.CajaDerechosRequestDTO': {
      /** Format: int32 */
      idCajaMaestra?: number;
      /** Format: int32 */
      idUsuario?: number;
      aperturas?: boolean;
      movimientos?: boolean;
    };
    'CajaDiaria.CajaDiariasRequestDTO': {
      descripcion?: string | null;
      esOnline?: boolean;
      permiteIngresos?: boolean;
      permiteEgresos?: boolean;
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      idEmpresa?: number;
      /** Format: int32 */
      idRecepcion?: number;
      /** Format: int32 */
      idOperadorActivo?: number | null;
      /** Format: int32 */
      idCajaMaestras?: number;
      activo?: boolean;
    };
    'CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO': {
      /** Format: int32 */
      puntoDeVenta?: number;
      /** Format: int32 */
      idEmpresa?: number;
      descripcion?: string | null;
      /** Format: int32 */
      numeracion?: number;
    };
    'CajaMaestra.CajaMaestrasRequestDTO': {
      descripcion?: string | null;
      /** Format: double */
      saldo?: number;
    };
    'CajaMedioPago.CajaMediosPagoRequestDTO': {
      descripcion?: string | null;
    };
    'CajaMovTipo.CajaMovTiposRequestDTO': {
      descripcion?: string | null;
      interno?: boolean;
      requiereAutorizacion?: boolean;
      /** Format: int32 */
      sigla?: number;
    };
    'CajaUsuario.CajaUsuariosRequestDTO': {
      /** Format: int32 */
      idCajaDiaria?: number;
      /** Format: int32 */
      idUsuario?: number;
    };
    'CajasConfiguracion.CajaConfiguracionRequestDTO': {
      arqueoParaTransferencia?: boolean;
      habilitaMP?: boolean;
      habilitaModo?: boolean;
      habilitaSPS?: boolean;
      depositoHabilitado?: boolean;
      depositoReqAutorizacion?: boolean;
      depositoDiasHabiles?: boolean;
      depositoTitulo?: boolean;
      depositoDescripcion?: boolean;
      decimalesRedondeo?: string | null;
    };
    'CancelacionMotivo.CancelacionMotivosRequestDTO': {
      descripcion?: string | null;
      visiblePaciente?: boolean;
      activo?: boolean;
    };
    'CancelacionMotivo.ListVistaCancelacionMotivo.ListVistaCancelacionMotivoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      visiblePaciente?: boolean;
      activo?: boolean;
    };
    'Centro.CentroRequestDTO': {
      descripcion: string;
      /** Format: int32 */
      idLocalidad?: number;
      domicilio: string;
      razonSocial: string;
      cuit?: string | null;
      telefono: string;
      coordenadas?: string | null;
      /** Format: int32 */
      idValidador?: number;
      visibleWeb: boolean;
      activo?: boolean;
    };
    'Centro.CentroResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idLocalidad?: number;
      domicilio?: string | null;
      razonSocial?: string | null;
      cuit?: string | null;
      telefono?: string | null;
      coordenadas?: string | null;
      /** Format: int32 */
      idValidador?: number | null;
      visibleWeb?: boolean;
      activo?: boolean;
      idEmpresaNavigation?: components['schemas']['Empresa.EmpresasResponseDTO'];
      idLocalidadNavigation?: components['schemas']['Localidad.LocalidadResponseDTO'];
    };
    'Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      razonSocial?: string | null;
      cuit?: string | null;
      empresas?:
        | components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO-ListVistaEstructuraCentroItem'][]
        | null;
      recepciones?:
        | components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO-ListVistaEstructuraCentroItem'][]
        | null;
      pisos?:
        | components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO-ListVistaEstructuraCentroItem'][]
        | null;
      consultorios?:
        | components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO-ListVistaEstructuraCentroItem'][]
        | null;
      vestidores?:
        | components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO-ListVistaEstructuraCentroItem'][]
        | null;
    };
    'Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO-ListVistaEstructuraCentroItem': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'CentroApertura.CentroAperturaRequestDTO': {
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      diaDeSemana: number;
      /** Format: time */
      horaApertura?: string;
      /** Format: time */
      horaCierre?: string;
      /** Format: date */
      fechaActivacion?: string;
    };
    'Consultorio.ConsultorioRequestDTO': {
      descripcion: string;
      /** Format: int32 */
      idRecepcion?: number;
      /** Format: int32 */
      idPiso?: number;
      /** Format: int32 */
      idEquipo?: number | null;
      /** Format: int32 */
      interno?: number | null;
      /** Format: int32 */
      idLlamador?: number | null;
      /** Format: time */
      disponibleDesde?: string | null;
      /** Format: time */
      disponibleHasta?: string | null;
      activo?: boolean;
    };
    'Consultorio.ConsultorioResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idRecepcion?: number;
      /** Format: int32 */
      idPiso?: number;
      /** Format: int32 */
      idEquipo?: number | null;
      /** Format: int32 */
      interno?: number | null;
      /** Format: int32 */
      idLlamador?: number | null;
      /** Format: time */
      disponibleDesde?: string | null;
      /** Format: time */
      disponibleHasta?: string | null;
      activo?: boolean;
      idEquipoNavigation?: components['schemas']['Equipo.EquipoResponseDTO'];
      idLlamadorNavigation?: components['schemas']['Llamador.LlamadorResponseDTO'];
      idPisoNavigation?: components['schemas']['Piso.PisoResponseDTO'];
      idRecepcionNavigation?: components['schemas']['Recepcion.RecepcionResponseDTO'];
    };
    'Contrato.ContratoRequestDTO': {
      /** Format: int32 */
      idPlan?: number;
      /** Format: date */
      fechaActivacion?: string;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: double */
      valorPactado?: number | null;
      /** Format: double */
      valorMedico?: number | null;
      /** Format: int32 */
      efectivo?: number | null;
      /** Format: int32 */
      coseguro?: number | null;
      /** Format: int32 */
      codigoAuxiliar?: number | null;
      descripcionAuxiliar?: string | null;
      validaOnline?: boolean;
      validaDiagnostico?: boolean;
      requiereInforme?: boolean;
      altaComplejidad?: boolean;
      requiereAutorizacion?: boolean;
    };
    'ContratoFechaAct.ContratoFechaActRequestDTO': {
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      /** Format: date */
      fecha?: string;
    };
    'Controles.ControlAnticipado.ListVistaControlAnticipadoResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      aprobado?: boolean;
      /** Format: int32 */
      estadoOrden?: number;
      estadoAutorizacion?: boolean;
      estadoPrestaciones?: boolean;
      estadoMedicoSolicitante?: boolean;
      /** Format: int32 */
      idUsuarioAprueba?: number;
      /** Format: date-time */
      fechaAprobado?: string;
      /** Format: int32 */
      idMotivoRechazo?: number | null;
      /** Format: int32 */
      idUsuarioRechazo?: number | null;
      /** Format: date-time */
      fechaRechazo?: string | null;
      requiereCambio?: boolean;
    };
    'Controles.ControlOrden.ControlOrdenRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      aprobado?: boolean;
      /** Format: int32 */
      estadoOrden?: number;
      /** Format: int32 */
      usuarioId?: number;
      estadoAutorizacion?: boolean;
      estadoPrestaciones?: boolean;
      estadoMedicoSolicitante?: boolean;
      prestacionesIds?: number[] | null;
    };
    'Controles.ControlOrden.ControlOrdenResponseDTO': {
      /** Format: int32 */
      idTurnoNomenclador?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int64 */
      idNomenclador?: number;
      codigoNomenclador?: string | null;
      descripcionNomenclador?: string | null;
      /** Format: int32 */
      idObraSocial?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      idPlan?: number;
      planDescripcion?: string | null;
      /** Format: int32 */
      idPaciente?: number;
      pacienteDescripcion?: string | null;
      /** Format: int32 */
      cantidad?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      idMedico?: number;
      medicoNombreApellido?: string | null;
      /** Format: int32 */
      idMedicoSolicitante?: number;
      medicoSolicitanteNombreApellido?: string | null;
      /** Format: int32 */
      idEspecialidad?: number;
      especialidadDescripcion?: string | null;
      /** Format: int32 */
      idCentro?: number;
      centroDescripcion?: string | null;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      faltaAutorizacion?: boolean;
      faltaNumeroAutorizacion?: boolean;
      faltaValidacion?: boolean;
      faltaCobro?: boolean;
      faltaOrden?: boolean;
      faltaInforme?: boolean;
      faltaMedicoSolicitante?: boolean;
      estadoControl?: boolean;
    };
    'Controles.ControlPostTurno.ControlPostTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
    };
    'Controles.ControlPostTurno.ControlPostTurnoResponseDTO': {
      /** Format: int32 */
      turnoNomencladorId?: number;
      faltaAutorizacion?: boolean;
      faltaNumeroAutorizacion?: boolean;
      faltaValidacion?: boolean;
      faltaCobro?: boolean;
      faltaOrden?: boolean;
      faltaInforme?: boolean;
      faltaAtendido?: boolean;
      faltaMedicoSolicitante?: boolean;
      estadoControl?: boolean;
      estaControlado?: boolean;
      estadoInformeDescripcion?: string | null;
      /** Format: int32 */
      estadoInformeId?: number;
    };
    'Controles.GetAssemblyVersion.GetAssemblyVersionResponseDTO': {
      codigoNomenclador?: string | null;
    };
    'Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostAgendasResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostCentrosResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostEspecialidadesResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostEstadoTurnosResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostObraSocialesResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Controles.GetVistaComboControlPost.GetVistaComboControlPostResponseDTO': {
      agendasResponseDTO?:
        | components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostAgendasResponseDTO'][]
        | null;
      centrosResponseDTO?:
        | components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostCentrosResponseDTO'][]
        | null;
      especialidadesResponseDTO?:
        | components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostEspecialidadesResponseDTO'][]
        | null;
      estadoTurnosResponseDTO?:
        | components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostEstadoTurnosResponseDTO'][]
        | null;
      obraSocialesResponseDTO?:
        | components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostObraSocialesResponseDTO'][]
        | null;
    };
    'Controles.JobControlPost.JobControlPostResponseDTO': {
      /** Format: int32 */
      usuarioId?: number;
      turnoNomencladorIds?: number[] | null;
      centrosId?: number[] | null;
      especialidadesId?: number[] | null;
      agendasId?: number[] | null;
      obraSocialesId?: number[] | null;
      /** Format: int32 */
      estadoControladoId?: number;
      /** Format: date */
      fechaDesde?: string;
      /** Format: date */
      fechaHasta?: string;
    };
    'Controles.ListVistaControlPost.ListVistaControlPostRequestDTO': {
      /** Format: int32 */
      usuarioId?: number;
      turnoNomencladorIds?: number[] | null;
      centrosId?: number[] | null;
      especialidadesId?: number[] | null;
      agendasId?: number[] | null;
      obraSocialesId?: number[] | null;
      /** Format: int32 */
      estadoControladoId?: number;
      /** Format: date */
      fechaDesde?: string;
      /** Format: date */
      fechaHasta?: string;
    };
    'Controles.ListVistaControlPost.ListVistaControlPostResponseDTO': {
      /** Format: int32 */
      turnoNomencladorId?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int64 */
      nomencladorId?: number;
      codigoNomenclador?: string | null;
      descripcionNomenclador?: string | null;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      /** Format: int32 */
      pacienteId?: number;
      pacienteDescripcion?: string | null;
      /** Format: int32 */
      cantidad?: number;
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      medicoId?: number;
      medicoNombreApellido?: string | null;
      /** Format: int32 */
      medicoSolicitanteId?: number;
      medicoSolicitanteNombreApellido?: string | null;
      /** Format: int32 */
      especialidadId?: number;
      especialidadDescripcion?: string | null;
      /** Format: int32 */
      centroId?: number;
      centroDescripcion?: string | null;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      faltaAutorizacion?: boolean;
      faltaNumeroAutorizacion?: boolean;
      faltaValidacion?: boolean;
      faltaCobro?: boolean;
      faltaOrden?: boolean;
      faltaInforme?: boolean;
      faltaAtendido?: boolean;
      faltaMedicoSolicitante?: boolean;
      estadoControl?: boolean;
      estaControlado?: boolean;
      estadoInformeDescripcion?: string | null;
      /** Format: int32 */
      estadoInformeId?: number;
    };
    'DiaGenerado.DiaGeneradoResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      idHorario?: number | null;
      /** Format: int32 */
      idHorarioAdicional?: number | null;
      /** Format: date */
      fecha?: string;
      /** Format: int32 */
      turnosTotales?: number;
      /** Format: int32 */
      turnosLibres?: number;
      /** Format: int32 */
      sobreTurnos?: number;
      /** Format: date */
      cambiosDesde?: string;
      idAgendaNavigation?: components['schemas']['Agenda.AgendaResponseDTO'];
      idHorarioAdicionalNavigation?: components['schemas']['HorarioAdicional.HorarioAdicionalResponseDTO'];
      idHorarioNavigation?: components['schemas']['Horario.HorarioResponseDTO'];
    };
    'Discapacidad.DiscapacidadRequestDTO': {
      /** Format: int32 */
      idPaciente?: number;
      noVidente?: boolean;
      claustrofobico?: boolean;
      sordomudo?: boolean;
      movilidadReducida?: boolean;
    };
    'DocumentoTipo.DocumentoTipoRequestDTO': {
      descripcion?: string | null;
    };
    'DocumentoTipo.DocumentoTipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO': {
      descripcion?: string | null;
    };
    'Empresa.EmpresasResponseDTO': {
      /** Format: int32 */
      id?: number;
      direccion?: string | null;
      razonSocial?: string | null;
      email?: string | null;
      ingresosBrutos?: string | null;
      cuit?: string | null;
      telefono?: string | null;
      /** Format: int32 */
      idLocalidad?: number;
      codigoPostal?: string | null;
      nombreAbreviatura?: string | null;
      activo?: boolean;
      idLocalidadNavigation?: components['schemas']['Localidad.LocalidadResponseDTO'];
    };
    'Equipo.EquipoRequestDTO': {
      descripcion: string;
      nombreParaAgenda?: string | null;
      /** Format: int32 */
      idCentro?: number;
      marca: string;
      studyInstanceID?: string | null;
      modelo: string;
      /** Format: int32 */
      idModalidad?: number;
      aeTitle: string;
      activo?: boolean;
    };
    'Equipo.EquipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      nombreParaAgenda?: string | null;
      /** Format: int32 */
      idCentro?: number;
      marca?: string | null;
      studyInstanceID?: string | null;
      modelo?: string | null;
      /** Format: int32 */
      idModalidad?: number;
      aeTitle?: string | null;
      activo?: boolean;
      idCentroNavigation?: components['schemas']['Centro.CentroResponseDTO'];
      idModalidadNavigation?: components['schemas']['Modalidad.ModalidadResponseDTO'];
    };
    'Equipo.ListVistaEquipos.ListVistaEquiposResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      marca?: string | null;
      modelo?: string | null;
      aeTitle?: string | null;
      activo?: boolean;
      /** Format: int32 */
      idModalidad?: number | null;
      modalidadDescripcion?: string | null;
      /** Format: int32 */
      idCentro?: number;
      centroDescripcion?: string | null;
    };
    'Especialidad.EspecialidadRequestDTO': {
      descripcion: string;
      /** Format: int32 */
      idModalidad?: number | null;
      usaWorklist: boolean;
      controlManual: boolean;
      preDefinido?: boolean;
      activo?: boolean;
    };
    'Especialidad.EspecialidadResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idModalidad?: number | null;
      usaWorklist?: boolean;
      controlManual?: boolean;
      preDefinido?: boolean;
      activo?: boolean;
      idModalidadNavigation?: components['schemas']['Modalidad.ModalidadResponseDTO'];
    };
    'Especialidad.ListVistaEspecialidades.ListVistaEspecialidadesResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      usaWorklist?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idModalidad?: number;
      modalidadDescripcion?: string | null;
    };
    'EstudioTipo.EstudioTiposRequestDTO': {
      descripcion?: string | null;
      usaWorklist?: boolean;
    };
    'EstudioTipo.EstudioTiposResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      usaWorklist?: boolean;
    };
    'FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByContratosFechaActsRequestDTO': {
      /** Format: int32 */
      contratosFechaActsId?: number;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      fechaActivacion?: string | null;
    };
    'FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByObraSocialesRequestDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      validador?: number;
      validadorDescripcion?: string | null;
    };
    'FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByPlanesRequestDTO': {
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      masterPlan?: boolean;
      activo?: boolean;
      /** Format: int32 */
      ivaTipoId?: number;
      ivaTipoDescripcion?: string | null;
      /** Format: int32 */
      porcentajePlanMaestro?: number;
    };
    'FacturacionOS.ListVistaContratosOS.ListVistaContratosOSRequestDTO': {
      /** Format: int32 */
      obraSocialesId?: number;
      /** Format: int32 */
      planId?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'FacturacionOS.ListVistaContratosOSListVistaContratosOS.ListVistaContratosOSResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      fechaActivacion?: string | null;
      /** Format: int64 */
      nomencladorId?: number;
      nomencladorDescripcion?: string | null;
      /** Format: double */
      valorMedico?: number;
      /** Format: double */
      efectivo?: number;
      /** Format: double */
      coseguro?: number;
      codigoAuxiliar?: string | null;
      descripcionAuxiliar?: string | null;
      validaOnline?: boolean;
      validaDiagnostico?: boolean;
      requireInforme?: boolean;
      altaComplejidad?: boolean;
      requiereAutorizacion?: boolean;
      obraSocialesDto?: components['schemas']['FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByObraSocialesRequestDTO'];
      listPlanesDto?:
        | components['schemas']['FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByPlanesRequestDTO'][]
        | null;
      listContratosFechaActsDto?:
        | components['schemas']['FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByContratosFechaActsRequestDTO'][]
        | null;
    };
    'FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSRequestDTO': {
      /** Format: date-time */
      fechaDesde?: string;
      /** Format: date-time */
      fechaHasta?: string;
      obraSocialesIds?: number[] | null;
      empresasIds?: number[] | null;
      /** Format: int32 */
      usuarioId?: number;
    };
    'FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      facturaId?: number;
      fechaFactura?: string | null;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      nroDebito?: number;
      fechaRecepcion?: string | null;
      /** Format: int32 */
      empresaId?: number;
      empresaDescripcion?: string | null;
      parcial?: boolean;
      /** Format: double */
      importeDebito?: number;
      aprobado?: boolean;
      rechazado?: boolean;
      motivoDebito?: string | null;
      refacturado?: boolean;
    };
    'FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSRequestDTO': {
      /** Format: int32 */
      nroLiquidacion?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      liquidacionObraSocialesId?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int64 */
      nomencladorId?: number;
      descripcionNomenclador?: string | null;
      codigoNomenclador?: string | null;
      /** Format: int32 */
      cantidad?: number;
      /** Format: double */
      valor?: number;
      /** Format: double */
      coseguro?: number;
      codigoAuxiliar?: string | null;
    };
    'FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSRequestDTO': {
      /** Format: int32 */
      obraSocialFacturasId?: number;
      /** Format: date-time */
      fechaDesde?: string;
      /** Format: date-time */
      fechaHasta?: string;
      obraSocialesIds?: number[] | null;
      empresasIds?: number[] | null;
      /** Format: int32 */
      tipo?: number;
      /** Format: int32 */
      ivaId?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: date */
      fechaAlta?: string;
      comprobanteNumero?: string | null;
      /** Format: int32 */
      ivaTipoId?: number;
      ivaTipoDescripcion?: string | null;
      /** Format: int32 */
      empresaId?: number;
      empresaDescripcion?: string | null;
      /** Format: double */
      subTotal?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      ivaTotal?: number;
      saldada?: boolean;
      anulada?: boolean;
      debitada?: boolean;
      /** Format: int32 */
      debitoId?: number;
      refacturada?: boolean;
      cae?: string | null;
      fechaVencCae?: string | null;
      mailNotificacion?: string | null;
      automatica?: boolean;
    };
    'FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSRequestDTO': {
      /** Format: int32 */
      nroLiquidacion?: number;
      /** Format: date-time */
      fechaDesde?: string;
      /** Format: date-time */
      fechaHasta?: string;
      obraSocialesIds?: number[] | null;
      /** Format: int32 */
      tipoId?: number;
      /** Format: int32 */
      ivaId?: number;
      /** Format: int32 */
      usuarioId?: number;
      empresasIds?: number[] | null;
    };
    'FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSResponseDTO': {
      /** Format: int32 */
      liquidacionObraSocialesId?: number;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      fechaDesde?: string | null;
      fechaHasta?: string | null;
      /** Format: int32 */
      nomencIncluye?: number;
      /** Format: int32 */
      nomencExcluye?: number;
      /** Format: int32 */
      ivaTipoId?: number;
      ivaTipoDescripcion?: string | null;
      /** Format: int32 */
      nroFactura?: number;
      fechaActivacion?: string | null;
      /** Format: double */
      valor?: number;
      automatica?: boolean;
    };
    'FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesRequestDTO': {
      /** Format: date */
      fechaDesde?: string;
      /** Format: date */
      fechaHasta?: string;
      obraSocialesIds?: number[] | null;
      empresasIds?: number[] | null;
      /** Format: int32 */
      usuarioId?: number;
    };
    'FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: date */
      fechaTurno?: string;
      codigoNomenclador?: string | null;
      descripcionNomenclador?: string | null;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      controlado?: boolean;
      informado?: boolean;
      noSeFactura?: boolean;
      /** Format: int32 */
      idObraSocialLiquidacion?: number;
      /** Format: int32 */
      idObraSocialFactura?: number;
      /** Format: int32 */
      idObraSocialDebito?: number;
      /** Format: int32 */
      idReObraSocialFactura?: number;
    };
    'Feriado.FeriadoRequestDTO': {
      /** Format: date */
      fecha?: string;
      /** Format: int32 */
      idPais?: number;
      descripcion?: string | null;
      feriadoFijo?: boolean;
      diaNoLaborable?: boolean;
      activo?: boolean;
    };
    'Feriado.ListVistaFeriado.ListVistaFeriadosResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: date */
      fecha?: string;
      descripcion?: string | null;
      feriadoFijo?: boolean;
      diaNoLaborable?: boolean;
      activo?: boolean;
    };
    'GrupoPrestacion.GrupoPrestacionRequestDTO': {
      descripcion?: string | null;
      formula?: string | null;
      acumulaPrestaciones?: boolean;
      muestraTexto?: boolean;
      texto?: string | null;
      usaPreguntas?: boolean;
      visibleUsuarios?: boolean;
      visiblePacientes?: boolean;
    };
    'GrupoPrestacion.GrupoPrestacionResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      formula?: string | null;
      acumulaPrestaciones?: boolean;
      muestraTexto?: boolean;
      texto?: string | null;
      usaPreguntas?: boolean;
      visibleUsuarios?: boolean;
      visiblePacientes?: boolean;
    };
    'GruposMedico.GrupoMedicoRequestDTO': {
      descripcion?: string | null;
    };
    'GruposMedico.GrupoMedicoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'GruposPresPregunta.GruposPresPreguntaRequestDTO': {
      /** Format: int32 */
      idGrupoPrestaciones?: number;
      textoPregunta?: string | null;
      siNo?: boolean;
      bloqueaAvance?: boolean;
      bloqueaNo?: boolean;
      /** Format: int32 */
      idPreguntaPadre?: number | null;
      fuerzaAgendaDestino?: boolean;
      /** Format: int32 */
      idAgendaDestino?: number | null;
      prestacionInversa?: boolean;
      /** Format: int32 */
      idPrestacionDestino?: number | null;
    };
    'Horario.HorarioRequestDTO': {
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      diaDeSemana: number;
      /** Format: int32 */
      sobreTurnosMax?: number;
      mensaje?: string | null;
      /** Format: date */
      fechaActivacion: string;
      /** Format: date */
      fechaBaja?: string | null;
    };
    'Horario.HorarioResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      diaDeSemana?: number;
      /** Format: int32 */
      sobreTurnosMax?: number;
      mensaje?: string | null;
      /** Format: date */
      fechaActivacion?: string;
      /** Format: date */
      fechaBaja?: string | null;
      idAgendaDestinoNavigation?: components['schemas']['Agenda.AgendaResponseDTO'];
    };
    'HorarioAdicional.HorarioAdicionalRequestDTO': {
      /** Format: date */
      fecha?: string;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      sobreTurnosMax?: number | null;
      noOfrecerEnBusqueda?: boolean;
    };
    'HorarioAdicional.HorarioAdicionalResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: date */
      fecha?: string;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      sobreTurnosMax?: number | null;
      noOfrecerEnBusqueda?: boolean;
      idAgendaDestinoNavigation?: components['schemas']['Agenda.AgendaResponseDTO'];
    };
    'HorarioDetalle.HorarioDetalleRequestDTO': {
      /** Format: int32 */
      idHorario?: number | null;
      /** Format: int32 */
      idHorarioAdicional?: number | null;
      /** Format: time */
      horarioDesde?: string;
      /** Format: time */
      horarioHasta?: string;
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      idConsultorio?: number;
      /** Format: int32 */
      idTipoTurno?: number;
    };
    'InfTemplateTipo.InfTemplateTipoRequestDTO': {
      descripcion?: string | null;
    };
    'Informe.AsignacionPool.AsignacionPoolResponseDTO': {
      subTipoInformeDescripcion?: string | null;
      mnesaje?: string | null;
      esOk?: boolean;
    };
    'Informe.CombosFiltroInformes.ComboDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Informe.CombosFiltroInformes.CombosFiltroInformesResponseDTO': {
      agendasDTO?: components['schemas']['Informe.CombosFiltroInformes.ComboDTO'][] | null;
      usuariosDTO?: components['schemas']['Informe.CombosFiltroInformes.ComboDTO'][] | null;
      poolsDTO?: components['schemas']['Informe.CombosFiltroInformes.ComboDTO'][] | null;
      estudioTiposDTO?: components['schemas']['Informe.CombosFiltroInformes.ComboDTO'][] | null;
      informeTiposDTO?: components['schemas']['Informe.CombosFiltroInformes.ComboDTO'][] | null;
      informeSubTiposDTO?: components['schemas']['Informe.CombosFiltroInformes.ComboDTO'][] | null;
    };
    'Informe.GetDataInforme.GetDataInformeResponseDTO': {
      /** Format: int32 */
      id_Informe?: number;
      informeValidado?: boolean;
      /** Format: int32 */
      idInformeTipo_Informe?: number;
      /** Format: int32 */
      idInformeSubTipo_Informe?: number;
      urgente_Informe?: boolean;
      /** Format: int32 */
      id_InformeEstados?: number;
      /** Format: int32 */
      idInformeEstadoTipos_InformeEstados?: number;
      /** Format: date-time */
      fecha_InformeEstados?: string;
      /** Format: int32 */
      idUsuario_InformeEstados?: number;
      /** Format: date-time */
      fechaBaja_InformeEstados?: string | null;
      /** Format: int32 */
      idMedico_Turnos?: number | null;
      descripcion_Medico?: string | null;
      /** Format: int32 */
      idEquipo_Turnos?: number | null;
      /** Format: int32 */
      idTurno_Informe?: number;
      descripcion_Equipo?: string | null;
      /** Format: date */
      fechaTurno_Turnos?: string;
    };
    'Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoInformesDTO': {
      /** Format: int32 */
      idInforme?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      estudioTipoId?: number;
      estudioTipoDescripcion?: string | null;
      /** Format: int32 */
      informeTipoId?: number;
      informeTipoDescripcion?: string | null;
      /** Format: int32 */
      informeSubtipoId?: number;
      informeSubtipoDescripcion?: string | null;
      /** Format: int32 */
      usuarioId?: number;
      textoInforme?: string | null;
      textoTemp?: string | null;
      conclusionInforme?: string | null;
      /** Format: int32 */
      informeTemplateId?: number | null;
      pdf?: boolean;
      urgente?: boolean;
      /** Format: int32 */
      medicoSolicitanteId?: number | null;
      validacionDiagnostico?: boolean;
      /** Format: int32 */
      hssLa?: number;
      permitePdf?: boolean;
      llevaImagen?: boolean;
      requiereImagen?: boolean;
      usuarioNombre?: string | null;
      conclusionTemporal?: string | null;
      medicoSolicitanteNombre?: string | null;
      validado?: boolean;
      impreso?: boolean;
      vistoPaciente?: boolean;
      /** Format: int32 */
      poolId?: number;
    };
    'Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoTurnoNomencladorDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      turnoId?: number;
      validacionAprobada?: string | null;
    };
    'Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoTurnoPrestacionesDTO': {
      /** Format: int32 */
      prestacionId?: number;
      prestacionDescripcion?: string | null;
      lado?: string | null;
      /** Format: int32 */
      informeTipoId?: number;
      /** Format: int32 */
      informeSubtipoId?: number;
    };
    'Informe.GetInformePorTurno.GetInformePorTurnoResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      agendaNombre?: string | null;
      medicoDescripcion?: string | null;
      /** Format: date */
      fechaTurno?: string;
      /** Format: int32 */
      centroId?: number;
      centroDescripcion?: string | null;
      /** Format: int32 */
      consultorioId?: number;
      consultorioDescripcion?: string | null;
      /** Format: int32 */
      pacienteId?: number;
      pacienteApellido?: string | null;
      pacienteNombre?: string | null;
      /** Format: date-time */
      fechaNacimiento?: string;
      sexo?: string | null;
      informesDTO?:
        | components['schemas']['Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoInformesDTO'][]
        | null;
      prestacionesDTO?:
        | components['schemas']['Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoTurnoPrestacionesDTO'][]
        | null;
      nomencladores?:
        | components['schemas']['Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoTurnoNomencladorDTO'][]
        | null;
    };
    'Informe.ListVistaInformes.ListVistaInformesRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      agendaIds?: number[] | null;
      usuarioIds?: number[] | null;
      poolsIds?: number[] | null;
      estudioTipoIds?: number[] | null;
      informeTiposIds?: number[] | null;
      infomeSubTipoIds?: number[] | null;
      /** Format: date */
      fechaDesde?: string;
      /** Format: date */
      fechaHasta?: string;
      urgencia?: boolean;
      estados?: boolean;
    };
    'Informe.ListVistaInformes.ListVistaInformesResponseDTO': {
      /** Format: int32 */
      informeId?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      estudioTipoId?: number;
      estudioTipoDescripcion?: string | null;
      /** Format: int32 */
      informeTipoId?: number;
      informeTipoDescripcion?: string | null;
      /** Format: int32 */
      informeSubTipoId?: number;
      informeSubTipoDescripcion?: string | null;
      /** Format: int32 */
      usuarioId?: number;
      textoInforme?: string | null;
      textoTemporal?: string | null;
      conclusionInforme?: string | null;
      /** Format: int32 */
      informeTemplateId?: number;
      pdf?: boolean;
      urgente?: boolean;
      /** Format: int32 */
      medicoSolicitanteId?: number;
      validacionDiagnostico?: boolean;
      /** Format: int32 */
      hssla?: number;
      permitePdf?: boolean;
      llevaImagen?: boolean;
      /** Format: int32 */
      poolId?: number;
      impreso?: boolean;
      vistoPaciente?: boolean;
      requiereImagen?: boolean;
      validado?: boolean | null;
      /** Format: int32 */
      usuarioGuardado?: number | null;
      /** Format: date-time */
      fechaGuardado?: string | null;
    };
    'InformeEstadoTipo.InformeEstadoTipoRequestDTO': {
      descripcion?: string | null;
    };
    'InformeSubTipo.InformeSubTipoRequestDTO': {
      descripcion?: string | null;
      /** Format: int32 */
      idInformeTipo?: number;
      /** Format: int32 */
      hsSla?: number | null;
      permitePdf?: boolean;
      llevaImagen?: boolean;
      requiereImagen?: boolean;
      usaWorkList?: boolean;
    };
    'InformeSubTipo.InformeSubTipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idInformeTipo?: number;
      /** Format: int32 */
      hsSla?: number | null;
      permitePdf?: boolean;
      llevaImagen?: boolean;
      requiereImagen?: boolean;
      usaWorkList?: boolean;
      idInformeTipoNavigation?: components['schemas']['InformeTipo.InformeTiposResponseDTO'];
    };
    'InformeSubTipo.ListVistaInformeSubTipo.ListVistaInformeSubTipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idInformeTipos?: number | null;
      /** Format: int32 */
      hsSla?: number | null;
      permitePdf?: boolean;
      llevaImagen?: boolean;
      requiereImagen?: boolean;
    };
    'InformeTemplate.InformeTemplateRequestDTO': {
      descripcion?: string | null;
      texto?: string | null;
      /** Format: int32 */
      idInformeTipo?: number;
      /** Format: int32 */
      idInformeSubTipo?: number;
      /** Format: int32 */
      idUsuarios?: number | null;
      /** Format: int32 */
      idInfTemplateTipos?: number;
      /** Format: int32 */
      idInfTempGrupos?: number | null;
      activo?: boolean;
    };
    'InformeTemplateGrupos.InformesTemplateGruposRequestDTO': {
      descripcion?: string | null;
    };
    'InformeTipo.InformeTiposRequestDTO': {
      descripcion?: string | null;
      /** Format: int32 */
      idModalidades?: number;
      /** Format: int32 */
      idEstudioTipos?: number;
      usaWorklist?: boolean;
    };
    'InformeTipo.InformeTiposResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idModalidades?: number;
      /** Format: int32 */
      idEstudioTipos?: number;
      usaWorklist?: boolean;
      idEstudioTiposNavigation?: components['schemas']['EstudioTipo.EstudioTiposResponseDTO'];
      idModalidadesNavigation?: components['schemas']['Modalidad.ModalidadResponseDTO'];
    };
    'InformeTipo.ListVistaInformeTipos.ListVistaInformeTiposResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'InformeTipo.TipoInformePrestacion.TipoInformePrestacionRequestDTO': {
      /** Format: int32 */
      idTurno?: number;
    };
    'InformeTipo.TipoInformePrestacion.TipoInformePrestacionResponseDTO': {
      /** Format: int32 */
      idPrestaciones?: number;
      status?: boolean;
      mensaje?: string | null;
    };
    'IvaTipo.IvaTipoRequestDTO': {
      descripcion?: string | null;
    };
    'IvaTipo.IvaTipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'ListVistaUsuarios.ListVistaMedicos.ListVistaMedicosResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idUsuario?: number;
      usuarioApellido?: string | null;
      usuarioNombre?: string | null;
      usuarioEmail?: string | null;
      /** Format: int32 */
      idEspecialidad?: number;
      especialidadDescripcion?: string | null;
      matriculaNacional?: string | null;
      matriculaProvincial?: string | null;
      cuit?: string | null;
      activo?: boolean;
    };
    'Llamador.LlamadorEnColarPaciente.LlamadorEnColarPacienteRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
    };
    'Llamador.LlamadorRequestDTO': {
      descripcion?: string | null;
      /** Format: int32 */
      idCentro?: number;
      horizontal?: boolean;
      activo?: boolean;
    };
    'Llamador.LlamadorResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idCentro?: number;
      horizontal?: boolean;
      activo?: boolean;
      idCentroNavigation?: components['schemas']['Centro.CentroResponseDTO'];
    };
    'Localidad.LocalidadResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idProvincia?: number;
      descripcion?: string | null;
      idProvinciaNavigation?: components['schemas']['Provincia.ProvinciasResponseDTO'];
    };
    'MailTemplate.MailTemplatesRequestDTO': {
      textoMail?: string | null;
      /** Format: int32 */
      idMailTipo?: number;
    };
    'MailTemplatesTipo.MailTemplatesTiposRequestDTO': {
      descripcion?: string | null;
    };
    'Medico.GetDataMedico.GetDataMedicoResponseDTO': {
      /** Format: int32 */
      id_Medico?: number;
      nombre_Medico?: string | null;
      apellido_Medico?: string | null;
      matriculaNacional_Medico?: string | null;
      medicoInterno_Medico?: boolean;
    };
    'Medico.MedicoRequestDTO': {
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      matriculaNacional?: number | null;
      /** Format: int32 */
      matriculaProvincial?: number | null;
      prefijo?: string | null;
      /** Format: int32 */
      idEspecialidad?: number;
      cuit?: string | null;
      medicoInterno?: boolean;
      /** Format: int32 */
      idGrupoMedico?: number | null;
      activo?: boolean;
    };
    'Medico.MedicoResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      matriculaNacional?: number | null;
      /** Format: int32 */
      matriculaProvincial?: number | null;
      prefijo?: string | null;
      /** Format: int32 */
      idEspecialidad?: number;
      cuit?: string | null;
      medicoInterno?: boolean;
      /** Format: int32 */
      idGrupoMedico?: number | null;
      activo?: boolean;
      idEspecialidadNavigation?: components['schemas']['Especialidad.EspecialidadResponseDTO'];
      idGrupoMedicoNavigation?: components['schemas']['GruposMedico.GrupoMedicoResponseDTO'];
      idUsuarioNavigation?: components['schemas']['Usuario.UsuarioResponseDTO'];
    };
    'Modalidad.ModalidadRequestDTO': {
      abreviatura?: string | null;
      descripcion?: string | null;
    };
    'Modalidad.ModalidadResponseDTO': {
      /** Format: int32 */
      id?: number;
      abreviatura?: string | null;
      descripcion?: string | null;
    };
    'MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO': {
      'descripci\u00F3n'?: string | null;
      controlAnticipado?: boolean;
    };
    'Nomenclador.ListVistaNomencladores.ListVistaNomencladoresResponseDTO': {
      /** Format: int64 */
      id?: number;
      codigo?: string | null;
      descripcion?: string | null;
      controlManual?: boolean;
      requiereOrden?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idEspecialidad?: number | null;
      especialidadDescripcion?: string | null;
      /** Format: int32 */
      idTipoNomenclador?: number | null;
      tipoNomencladorDescripcion?: string | null;
      /** Format: int32 */
      idTipoInforme?: number | null;
      tipoInformeDescripcion?: string | null;
    };
    'Nomenclador.NomencladorRequestDTO': {
      codigoNomenclador: string;
      descripcion: string;
      /** Format: int32 */
      idEspecialidad?: number;
      liquidaEnMedico: boolean;
      liquidaEnObraSocial: boolean;
      nomenclado: boolean;
      altaComplejidad: boolean;
      esContenedor: boolean;
      /** Format: int32 */
      idNomencladorTipo?: number;
      seIncluyeContratos: boolean;
      controlManual: boolean;
      consumeArticulos?: boolean;
      requiereOrden?: boolean;
      activo?: boolean;
    };
    'NomencladorTipo.NomencladorTipoRequestDTO': {
      descripcion?: string | null;
    };
    'NotaTurno.NotaTurnoRequestDTO': {
      /** Format: int32 */
      idTurno?: number;
      descripcion?: string | null;
      bloqueaTurno?: boolean;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: date-time */
      fecha?: string;
      medica?: boolean;
      administrativa?: boolean;
    };
    'Novedad.NovedadRequestDTO': {
      descripcion?: string | null;
      ubicacion?: string | null;
      /** Format: date-time */
      fecha?: string;
      activo?: boolean;
    };
    'ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO': {
      descripcion?: string | null;
    };
    'ObSocValidadore.ObSocValidadoresRequestDTO': {
      descripcion?: string | null;
      /** Format: date */
      fechaAlta?: string;
      ivaTurnosSeparado?: boolean;
      onlineSeparado?: boolean;
      separaVIdeoAtencion?: boolean;
      incluyeMesesAnteriores?: boolean;
      separaCentros?: boolean;
    };
    'ObraSocial.ObraSocialRequestDTO': {
      nombre?: string | null;
      razonSocial?: string | null;
      monoPlan?: boolean;
      domicilio?: string | null;
      telefono?: string | null;
      cuit?: string | null;
      /** Format: int32 */
      idIvaTipo?: number;
      noFacturar?: boolean;
      activo?: boolean;
      bloqueoConsultas?: boolean;
      bloqueoPracticas?: boolean;
      elegibilIdadPaciente?: boolean;
      validacionOnline?: boolean;
      /** Format: int32 */
      idValidador?: number | null;
      mascaraAfiliado?: string | null;
      importeOrden?: boolean;
      abonaPaciente?: boolean;
      /** Format: int32 */
      idPriorIdadGrupo?: number | null;
      observaciones?: string | null;
      /** Format: int32 */
      diasOrden?: number | null;
      /** Format: int32 */
      diaspago?: number | null;
      requiereFirmaOrden?: boolean;
      noVisibleRegistroWeb?: boolean;
      noMuestraInformesWeb?: boolean;
    };
    'ObraSocial.ObraSocialResponseDTO': {
      /** Format: int32 */
      id?: number;
      nombre?: string | null;
      razonSocial?: string | null;
      monoPlan?: boolean;
      domicilio?: string | null;
      telefono?: string | null;
      cuit?: string | null;
      /** Format: int32 */
      idIvaTipo?: number;
      noFacturar?: boolean;
      activo?: boolean;
      bloqueoConsultas?: boolean;
      bloqueoPracticas?: boolean;
      elegibilIdadPaciente?: boolean;
      validacionOnline?: boolean;
      /** Format: int32 */
      idValidador?: number | null;
      mascaraAfiliado?: string | null;
      importeOrden?: boolean;
      abonaPaciente?: boolean;
      /** Format: int32 */
      idPriorIdadGrupo?: number | null;
      observaciones?: string | null;
      /** Format: int32 */
      diasOrden?: number | null;
      /** Format: int32 */
      diaspago?: number | null;
      requiereFirmaOrden?: boolean;
      noVisibleRegistroWeb?: boolean;
      noMuestraInformesWeb?: boolean;
      idIvaTipoNavigation?: components['schemas']['IvaTipo.IvaTipoResponseDTO'];
    };
    'ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO': {
      descripcion?: string | null;
      /** Format: date */
      fechaAlta?: string;
      ivaTurnosSeparado?: boolean;
      onlineSeparado?: boolean;
      separaVIdeoAtencion?: boolean;
      incluyeMesesAnteriores?: boolean;
      separaCentros?: boolean;
    };
    'ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO': {
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idCircuitoFact?: number;
      /** Format: int32 */
      procesaDia?: number;
      /** Format: int32 */
      procesaHora?: number;
      /** Format: int32 */
      idUsuarioResponsable?: number | null;
      autorizaManual?: boolean;
      /** Format: int32 */
      nomencladorIncluye?: number | null;
      /** Format: int32 */
      nomencladorExcluye?: number | null;
    };
    'ObraSocialGrupo.ObraSocialGruposRequestDTO': {
      descripcion?: string | null;
      /** Format: int32 */
      idObraSocial?: number;
    };
    'ObraSocialLiqConfigs.BajaObraSocialLiqConfig.BajaObraSocialLiqConfigRequestDTO': {
      /** Format: int32 */
      id?: number;
    };
    'ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      obraSocialId?: number;
      /** Format: int32 */
      tipoIvaId?: number;
      /** Format: int32 */
      controlTipoId?: number;
      /** Format: int32 */
      empresaOrigenId?: number;
      /** Format: int32 */
      empresaDestinoId?: number | null;
      /** Format: int32 */
      usuarioResponsableId?: number | null;
      ordenaPorFechaTurno?: boolean;
      ordenaPorMonto?: boolean;
      /** Format: int32 */
      diaDesde?: number;
      /** Format: int32 */
      diaHasta?: number | null;
      /** Format: int32 */
      procesaDia?: number | null;
      liquidaMesesAnteriores?: boolean;
      finDeMes?: boolean;
      nroAutorizacionManual?: string | null;
      nroAutorizacionOnline?: string | null;
      nomencladoresIncluyenIds?: number[] | null;
      nomencladoresExcluyenIds?: number[] | null;
    };
    'ObraSocialLiqConfigs.ObraSocialLiqConfigResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idTipoIva?: number;
      /** Format: int32 */
      idControlTipo?: number;
      /** Format: int32 */
      idCentroOrigen?: number;
      /** Format: int32 */
      idUsuarioResponsable?: number | null;
      /** Format: int32 */
      idCentroDestino?: number | null;
      ordenaPorFechaTurno?: boolean;
      ordenaPorMonto?: boolean;
      /** Format: int32 */
      diaDesde?: number;
      /** Format: int32 */
      diaHasta?: number | null;
      /** Format: int32 */
      procesaDia?: number | null;
      liquidaMesesAnteriores?: boolean;
      finDeMes?: boolean;
      nroAutorizacionManual?: string | null;
      nroAutorizacionOnline?: string | null;
    };
    'ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSRequestDTO': {
      /** Format: int32 */
      obraSocialLiquidacionesId?: number;
      /** Format: int32 */
      turnoNomencladorId?: number;
    };
    'ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSResponseDTO': {
      success?: boolean;
      mensajesError?: string[] | null;
    };
    'ObraSocialLiquidacion.BajaTNLiquidacionOS.BajaTNLiquidacionOSRequestDTO': {
      /** Format: int32 */
      obraSocialLiquidacionesId?: number;
      /** Format: int32 */
      turnoNomencladoresId?: number;
    };
    'ObraSocialLiquidacion.EliminarLiquidacionOS.EliminarLiquidacionOSRequestDTO': {
      /** Format: int32 */
      obraSocialLiquidacionesId?: number;
    };
    'ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSRequestDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      obraSocialId?: number;
      /** Format: int32 */
      ivaTipoId?: number;
      /** Format: int32 */
      tipoControlId?: number;
      /** Format: int32 */
      empresaOrigenId?: number;
      ordenaPorFecha?: boolean;
      ordenaPorMonto?: boolean;
      /** Format: date-time */
      diaDesde?: string;
      /** Format: date-time */
      diaHasta?: string;
      finDeMes?: boolean;
      mesAnterior?: boolean;
      liquidaMesesAnteriores?: boolean;
      /** Format: int32 */
      usuarioId?: number;
      /** Format: int32 */
      idEmpresaOrigen?: number;
      /** Format: int32 */
      idEmpresaDestino?: number | null;
      automatica?: boolean;
      nomencladorIncluyeId?: number[] | null;
      nomencladorExcluyeId?: number[] | null;
    };
    'ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int64 */
      nomencladorId?: number;
      /** Format: int32 */
      obraSocialId?: number;
      /** Format: int32 */
      prestacionId?: number;
      prestacionDescripcion?: string | null;
      /** Format: int32 */
      turnoNomencladorId?: number;
      /** Format: double */
      valorPactado?: number;
      /** Format: double */
      coseguro?: number;
      /** Format: int32 */
      cantidad?: number;
      codigoAuxiliar?: string | null;
      descripcionAuxiliar?: string | null;
      mensajesError?: string[] | null;
    };
    'Paciente.GetAtencionPaciente.DTOAuxiliares.GetAtencionPacienteParentescoDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      pacienteId?: number;
      /** Format: int32 */
      pacienteDestinoId?: number;
      pacienteDestinoNombreApellido?: string | null;
      /** Format: int32 */
      parentescoId?: number;
      parentescoDescripcion?: string | null;
      permiteTomaTurnos?: boolean;
      permiteVerInformes?: boolean;
    };
    'Paciente.GetAtencionPaciente.DTOAuxiliares.GetAtencionPacienteTurnoDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      medicoId?: number;
      medicoNombreApellido?: string | null;
      /** Format: int32 */
      medicoSolicitanteId?: number;
      medicoSolicitanteNombreApellido?: string | null;
      /** Format: int32 */
      equipoId?: number;
      equipoDescripcion?: string | null;
      /** Format: int32 */
      especialidadId?: number;
      especialidadDescripcion?: string | null;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      /** Format: date */
      fechaAsignacion?: string | null;
      /** Format: int32 */
      pacienteId?: number;
      /** Format: int32 */
      minutos?: number;
      /** Format: int32 */
      minutosDisponibles?: number;
      /** Format: int32 */
      turnoTipoId?: number;
      turnoTipoDescripcion?: string | null;
      sobreturnoManual?: boolean;
      sobreturnoAusentismo?: boolean;
      abonado?: boolean;
      informado?: boolean;
      urgente?: boolean;
      noOfrecerEnBusqueda?: boolean;
      evolucionado?: boolean;
      aSuCargos?: boolean;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      numeroAfiliado?: string | null;
      /** Format: int32 */
      prestacionOrigenId?: number;
      prestacionOrigenDescripcion?: string | null;
      /** Format: int32 */
      centroId?: number;
      centroDescripcion?: string | null;
      /** Format: int32 */
      consultorioId?: number;
      consultorioDescripcion?: string | null;
      /** Format: int32 */
      turnoEstadoTipoId?: number;
      turnoEstadoTipoDescripcion?: string | null;
      /** Format: int32 */
      turnoEstadoTipoOrden?: number;
    };
    'Paciente.GetAtencionPaciente.GetAtencionPacienteResponseDTO': {
      /** Format: int32 */
      id?: number;
      nombre?: string | null;
      apellido?: string | null;
      /** Format: int32 */
      documentoTipoId?: number;
      documentoTipoDescripcion?: string | null;
      documentoNumero?: string | null;
      /** Format: date */
      fechaNacimiento?: string;
      telefono?: string | null;
      telefonoMovil?: string | null;
      email?: string | null;
      /** Format: int32 */
      paisId?: number;
      paisDescripcion?: string | null;
      /** Format: int32 */
      localidadId?: number | null;
      localidadDescripcion?: string | null;
      domicilio?: string | null;
      password?: string | null;
      passwordReqCambio?: boolean;
      /** Format: int32 */
      passwordIntentos?: number | null;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      numeroAfiliado?: string | null;
      sexo?: string | null;
      /** Format: int32 */
      ivaTipoId?: number | null;
      ivaTipoDescripcion?: string | null;
      bloqueado?: boolean;
      conflictivo?: boolean;
      fotoPerfil?: string | null;
      googleId?: string | null;
      googleMail?: string | null;
      appleId?: string | null;
      appleMail?: string | null;
      facebookId?: string | null;
      facebookMail?: string | null;
      discapacidadDTO?: components['schemas']['Discapacidades'];
      parentescoPacienteDTO?:
        | components['schemas']['Paciente.GetAtencionPaciente.DTOAuxiliares.GetAtencionPacienteParentescoDTO'][]
        | null;
      telefonoAdicionalesDTO?: components['schemas']['TelefonoAdicionales'][] | null;
      turnitoDTO?:
        | components['schemas']['Paciente.GetAtencionPaciente.DTOAuxiliares.GetAtencionPacienteTurnoDTO'][]
        | null;
    };
    'Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      sexo?: string | null;
      /** Format: int32 */
      edadDesde?: number | null;
      /** Format: int32 */
      edadHasta?: number | null;
      esPractica?: boolean;
      conContraste?: boolean;
      requiereLado?: boolean;
      preparacion?: boolean;
      /** Format: int32 */
      prestInversaContraste?: number | null;
      /** Format: int32 */
      minutos?: number | null;
      /** Format: int32 */
      grupoPrestacionId?: number | null;
      grupoPrestacionDescripcion?: string | null;
      /** Format: int32 */
      estudioTiposId?: number;
      estudioTiposDescripcion?: string | null;
      alias?: string | null;
      ofreceEnWeb?: boolean;
      activo?: boolean;
      /** Format: int64 */
      nomencladorId?: number;
      enContrato?: boolean;
    };
    'Paciente.GetDataPaciente.GetDataPacienteResponseDTO': {
      /** Format: int32 */
      id_Paciente?: number;
      nombre_Paciente?: string | null;
      apellido_Paciente?: string | null;
      /** Format: int32 */
      idDocumentoTipo_Paciente?: number;
      documentoNumero_Paciente?: string | null;
      /** Format: date */
      fechaNacimiento_Paciente?: string;
      telefono_Paciente?: string | null;
      telefonoMovil_Paciente?: string | null;
      email_Paciente?: string | null;
      /** Format: int32 */
      idPais_Paciente?: number;
      /** Format: int32 */
      idLocalidad_Paciente?: number | null;
      domicilio_Paciente?: string | null;
      password_Paciente?: string | null;
      passwordReqCambio_Paciente?: boolean;
      /** Format: int32 */
      passwordIntentos_Paciente?: number | null;
      /** Format: int32 */
      idObraSocial_Paciente?: number;
      /** Format: int32 */
      idPlan_Paciente?: number;
      numeroAfiliado_Paciente?: string | null;
      sexo_Paciente?: string | null;
      /** Format: int32 */
      idIvaTipo_Paciente?: number | null;
      bloqueado_Paciente?: boolean;
      conflictivo_Paciente?: boolean;
      fotoPerfil_Paciente?: string | null;
      googleId_Paciente?: string | null;
      googleMail_Paciente?: string | null;
      appleId_Paciente?: string | null;
      appleMail_Paciente?: string | null;
      facebookId_Paciente?: string | null;
      facebookMail_Paciente?: string | null;
      /** Format: int32 */
      id_ObraSocial?: number;
      descripcion_ObraSocial?: string | null;
      /** Format: int32 */
      id_Plan?: number;
      descripcion_Plan?: string | null;
      /** Format: int32 */
      id_Discapacidad?: number;
      noVidente_Discapacidad?: boolean;
      claustrofobico_Discapacidad?: boolean;
      sordomudo_Discapacidad?: boolean;
      movilidadReducida_Discapacidad?: boolean;
      /** Format: int32 */
      id_TelefonoAdicional?: number;
      numero_TelefonoAdicional?: string | null;
      relacionConPaciente_TelefonoAdicional?: string | null;
      nombre_TelefonoAdicional?: string | null;
      /** Format: int32 */
      id_ParentescoPaciente?: number;
      /** Format: int32 */
      idPacienteDestino_ParentescoPaciente?: number;
      /** Format: int32 */
      idParentesco_ParentescoPaciente?: number;
      permiteTomaTurnos_ParentescoPaciente?: boolean;
      permiteVerInformes_ParentescoPaciente?: boolean;
      descripcion_Parentesco?: string | null;
    };
    'Paciente.ModificarDniPaciente.ModificarDniPacienteRequestDTO': {
      /** Format: int32 */
      pacienteId?: number;
      nroDocumento?: string | null;
    };
    'Paciente.PacienteRequestDTO': {
      nombre?: string | null;
      apellido?: string | null;
      /** Format: int32 */
      idDocumentoTipo?: number;
      documentoNumero?: string | null;
      /** Format: date */
      fechaNacimiento: string;
      telefono?: string | null;
      telefonoMovil?: string | null;
      email?: string | null;
      /** Format: int32 */
      idPais?: number;
      /** Format: int32 */
      idLocalidad?: number | null;
      domicilio?: string | null;
      password?: string | null;
      passwordReqCambio?: boolean;
      /** Format: int32 */
      passwordIntentos?: number | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      numeroAfiliado?: string | null;
      sexo?: string | null;
      /** Format: int32 */
      idIvaTipo?: number | null;
      bloqueado?: boolean;
      conflictivo?: boolean;
      fotoPerfil?: string | null;
      googleId?: string | null;
      googleMail?: string | null;
      appleId?: string | null;
      appleMail?: string | null;
      facebookId?: string | null;
      facebookMail?: string | null;
    };
    'Paciente.PacienteResponseDTO': {
      /** Format: int32 */
      id?: number;
      nombre?: string | null;
      apellido?: string | null;
      /** Format: int32 */
      idDocumentoTipo?: number;
      documentoNumero?: string | null;
      /** Format: date */
      fechaNacimiento?: string;
      telefono?: string | null;
      telefonoMovil?: string | null;
      email?: string | null;
      /** Format: int32 */
      idPais?: number;
      /** Format: int32 */
      idLocalidad?: number | null;
      domicilio?: string | null;
      password?: string | null;
      passwordReqCambio?: boolean;
      /** Format: int32 */
      passwordIntentos?: number | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      numeroAfiliado?: string | null;
      sexo?: string | null;
      /** Format: int32 */
      idIvaTipo?: number | null;
      bloqueado?: boolean;
      conflictivo?: boolean;
      fotoPerfil?: string | null;
      googleId?: string | null;
      googleMail?: string | null;
      appleId?: string | null;
      appleMail?: string | null;
      facebookId?: string | null;
      facebookMail?: string | null;
      idDocumentoTipoNavigation?: components['schemas']['DocumentoTipo.DocumentoTipoResponseDTO'];
      idIvaTipoNavigation?: components['schemas']['IvaTipo.IvaTipoResponseDTO'];
      idLocalidadNavigation?: components['schemas']['Localidad.LocalidadResponseDTO'];
      idObraSocialNavigation?: components['schemas']['ObraSocial.ObraSocialResponseDTO'];
      idPaisNavigation?: components['schemas']['Pais.PaisesResponseDTO'];
      idPlanNavigation?: components['schemas']['Plan.PlanResponseDTO'];
    };
    'Pais.PaisesResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Parentesco.ParentescoRequestDTO': {
      descripcion?: string | null;
    };
    'ParentescoPaciente.ParentescoPacienteRequestDTO': {
      /** Format: int32 */
      idPaciente?: number;
      /** Format: int32 */
      idPacienteDestino?: number;
      /** Format: int32 */
      idParentesco?: number;
      permiteTomaTurnos?: boolean;
      permiteVerInformes?: boolean;
    };
    'Piso.PisoRequestDTO': {
      descripcion: string;
      /** Format: int32 */
      idCentro?: number;
      activo?: boolean;
    };
    'Piso.PisoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idCentro?: number;
      activo?: boolean;
      idCentroNavigation?: components['schemas']['Centro.CentroResponseDTO'];
    };
    'Plan.ListVistaPlanes.ListVistaPlanesResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idObraSocial?: number;
      obraSocialRazonSocial?: string | null;
      /** Format: int32 */
      idTipoIva?: number;
      tipoIvaDescripcion?: string | null;
      /** Format: int32 */
      porcentagePlanMaestro?: number | null;
      masterPlan?: boolean;
      activo?: boolean;
    };
    'Plan.PlanRequestDTO': {
      /** Format: int32 */
      idObraSocial?: number;
      descripcion?: string | null;
      masterPlan?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idIvaTipo?: number;
      /** Format: int32 */
      porcentagePlanMaestro?: number;
    };
    'Plan.PlanResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      descripcion?: string | null;
      masterPlan?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idIvaTipo?: number | null;
      /** Format: int32 */
      porcentagePlanMaestro?: number | null;
      idIvaTipoNavigation?: components['schemas']['IvaTipo.IvaTipoResponseDTO'];
      idObraSocialNavigation?: components['schemas']['ObraSocial.ObraSocialResponseDTO'];
    };
    'Preparacion.PreparacionRequestDTO': {
      sexo?: string | null;
      /** Format: int32 */
      edadDesde?: number;
      /** Format: int32 */
      edadHasta?: number;
      texto?: string | null;
    };
    'PreparacionPrestacion.PreparacionPrestacionRequestDTO': {
      /** Format: int32 */
      idPrestacion?: number;
      /** Format: int32 */
      'idPreparaci\u00F3n'?: number;
    };
    'Prestacion.PreBusquedaPrestaciones.PreBusquedaPrestacionesRequestDTO': {
      /** Format: int32 */
      pacienteId?: number;
    };
    'Prestacion.PrestacionRequestDTO': {
      descripcion: string;
      sexo?: string | null;
      /** Format: int32 */
      edadDesde?: number | null;
      /** Format: int32 */
      edadHasta?: number | null;
      esPractica?: boolean;
      conContraste?: boolean;
      requiereLado?: boolean;
      preparacion?: boolean;
      /** Format: double */
      valorInforme?: number | null;
      /** Format: int32 */
      prestInversaContraste?: number | null;
      /** Format: int32 */
      minutos?: number | null;
      /** Format: int32 */
      idGrupoPrestacion?: number | null;
      /** Format: int32 */
      idInformeTipo?: number | null;
      /** Format: int32 */
      idInformeSubTipo?: number | null;
      alias?: string | null;
      ofreceEnWeb?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idEstudioTipos?: number;
      usaWorklist?: boolean;
    };
    'Prestacion.PrestacionResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      sexo?: string | null;
      /** Format: int32 */
      edadDesde?: number | null;
      /** Format: int32 */
      edadHasta?: number | null;
      esPractica?: boolean;
      conContraste?: boolean;
      requiereLado?: boolean;
      preparacion?: boolean;
      /** Format: double */
      valorInforme?: number | null;
      /** Format: int32 */
      prestInversaContraste?: number | null;
      /** Format: int32 */
      minutos?: number | null;
      /** Format: int32 */
      idGrupoPrestacion?: number | null;
      /** Format: int32 */
      idInformeTipo?: number | null;
      /** Format: int32 */
      idInformeSubTipo?: number | null;
      alias?: string | null;
      ofreceEnWeb?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idEstudioTipos?: number;
      usaWorklist?: boolean;
      idEstudioTiposNavigation?: components['schemas']['EstudioTipo.EstudioTiposResponseDTO'];
      idGrupoPrestacionNavigation?: components['schemas']['GrupoPrestacion.GrupoPrestacionResponseDTO'];
      idInformeSubTipoNavigation?: components['schemas']['InformeSubTipo.InformeSubTipoResponseDTO'];
      idInformeTipoNavigation?: components['schemas']['InformeTipo.InformeTiposResponseDTO'];
    };
    'PrestacionAgenda.PrestacionAgendaRequestDTO': {
      /** Format: int32 */
      idPrestacion?: number;
      /** Format: int32 */
      idAgenda?: number;
    };
    'PrestacionNomenclador.PrestacionNomencladorRequestDTO': {
      /** Format: int32 */
      idPrestacion?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: int32 */
      cantidad?: number;
    };
    'Provincia.ProvinciasResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPais?: number;
      descripcion?: string | null;
      idPaisNavigation?: components['schemas']['Pais.PaisesResponseDTO'];
    };
    'QuitaPresenteMotivo.ListVistaQuitaPresenteMotivos.ListVistaQuitaPresenteMotivosResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      activo?: boolean;
    };
    'QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO': {
      descripcion?: string | null;
      activo?: boolean;
    };
    'Recepcion.RecepcionRequestDTO': {
      descripcion: string;
      /** Format: int32 */
      idCentro?: number;
      ubicacion: string;
      activo?: boolean;
    };
    'Recepcion.RecepcionResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      /** Format: int32 */
      idCentro?: number;
      ubicacion?: string | null;
      activo?: boolean;
      idCentroNavigation?: components['schemas']['Centro.CentroResponseDTO'];
    };
    'Rol.RolRequestDTO': {
      descripcion?: string | null;
    };
    'TelefonoAdicional.TelefonoAdicionalRequestDTO': {
      /** Format: int32 */
      idPaciente: number;
      numero: string;
      relacionConPaciente?: string | null;
      nombre?: string | null;
    };
    'Turno.AsignacionDeTurno.AsignacionDeTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      pacienteId?: number;
      busquedaPorMinutos?: boolean;
      /** Format: int32 */
      minutosAOcupar?: number;
      prestaciones?:
        | components['schemas']['Turno.AsignacionDeTurno.DTOAuxiliares.AsignacionDeTurnoPrestacionRequestDTO'][]
        | null;
    };
    'Turno.AsignacionDeTurno.DTOAuxiliares.AsignacionDeTurnoPrestacionRequestDTO': {
      /** Format: int32 */
      prestacionId?: number;
      esParticular?: boolean;
    };
    'Turno.AsociarDesasociarMedicoSolicitante.AsociarDesasociarMedicoSolicitanteRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
      /** Format: int32 */
      medicoId?: number | null;
    };
    'Turno.BloqueoDeTurno.BloqueoDeTurnoRequestDTO': {
      /** Format: int32 */
      usuarioId?: number;
      turno?: components['schemas']['Turno.BloqueoDeTurno.DTOAuxiliares.BloqueoDeTurnoTurnoRequestDTO'][] | null;
    };
    'Turno.BloqueoDeTurno.BloqueoDeTurnoResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      mensaje?: string | null;
      success?: boolean;
    };
    'Turno.BloqueoDeTurno.DTOAuxiliares.BloqueoDeTurnoTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      textoNota?: string | null;
    };
    'Turno.CambioDeTurno.CambioDeTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      pacienteId?: number;
      busquedaPorMinutos?: boolean;
      /** Format: int32 */
      minutosAOcupar?: number;
      cambioTurno?: boolean;
      /** Format: int32 */
      turnoOrigenId?: number | null;
      prestaciones?:
        | components['schemas']['Turno.CambioDeTurno.DTOAuxiliares.CambioDeTurnoPrestacionRequestDTO'][]
        | null;
    };
    'Turno.CambioDeTurno.DTOAuxiliares.CambioDeTurnoPrestacionRequestDTO': {
      /** Format: int32 */
      prestacionId?: number;
      esParticular?: boolean;
    };
    'Turno.CambioOS.CambioOSRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
      /** Format: int32 */
      obraSocialDestinoId?: number;
      /** Format: int32 */
      planDestinoId?: number;
      turnoNomenclador?:
        | components['schemas']['Turno.CambioOS.DTOAuxiliares.CambioOSTurnoNomencladorRequestDTO'][]
        | null;
    };
    'Turno.CambioOS.DTOAuxiliares.CambioOSTurnoNomencladorRequestDTO': {
      /** Format: int64 */
      nomencladorId?: number;
      /** Format: int32 */
      obraSocialDestinoId?: number;
      /** Format: int32 */
      planDestinoId?: number;
      /** Format: int32 */
      ivaTipoDestinoId?: number;
    };
    'Turno.CambioOSAnalisis.CambioOSAnalisisRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
      /** Format: int32 */
      obraSocialDestinoId?: number;
      /** Format: int32 */
      ivaTipoId?: number;
      /** Format: int32 */
      planDestinoId?: number;
    };
    'Turno.CambioOSAnalisis.CambioOSAnalisisResponseDTO': {
      /** Format: int64 */
      nomencladorId?: number;
      osCubre?: boolean;
    };
    'Turno.CancelacionDeTurno.CancelacionDeTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      motivoCancelacionesId?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'Turno.CobroTurno.CobroTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      productoId?: number;
      /** Format: int32 */
      usuarioId?: number;
      /** Format: int32 */
      depositoId?: number;
      /** Format: double */
      importe?: number;
      /** Format: int32 */
      cajaDiariaId?: number;
      /** Format: int32 */
      medioDePagoId?: number;
      /** Format: int32 */
      movimientoTipoId?: number;
      /** Format: int32 */
      bancoId?: number;
      /** Format: int32 */
      cuotas?: number;
      /** Format: int32 */
      coeficiente?: number;
      /** Format: int32 */
      pacienteCtaCteiId?: number;
    };
    'Turno.CreacionSobreTurno.CreacionSobreTurnoRequestDTO': {
      /** Format: int32 */
      pacienteId?: number;
      /** Format: time */
      horaTurno?: string;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      agendaId?: number;
      sobreTurnoManual?: boolean;
      esParticular?: boolean;
    };
    'Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaBancosResponseDTO': {
      descripcion?: string | null;
    };
    'Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaCuotasResponseDTO': {
      /** Format: int32 */
      cantidadCuotas?: number;
      /** Format: double */
      coeficiente?: number;
      /** Format: int32 */
      idCajaBancos?: number;
      /** Format: int32 */
      idEspecialidades?: number;
    };
    'Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaMediosPagoResponseDTO': {
      descripcion?: string | null;
    };
    'Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresTurnoNomencladorRequestDTO': {
      /** Format: int64 */
      nomencladorId?: number;
      /** Format: double */
      importeValidacion?: number;
      deposito?: boolean;
    };
    'Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresTurnoNomencladorResponseDTO': {
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: double */
      debitoParticular?: number;
      /** Format: double */
      debitoObraSocial?: number;
    };
    'Turno.DefinicionDeValores.DefinicionDeValoresRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: double */
      importeOrden?: number;
      cobroDirecto?: boolean;
      turnoNomenclador?:
        | components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresTurnoNomencladorRequestDTO'][]
        | null;
    };
    'Turno.DefinicionDeValores.DefinicionDeValoresResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: double */
      debeParticulares?: number;
      /** Format: double */
      debeOS?: number;
      turnoNomenclador?:
        | components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresTurnoNomencladorResponseDTO'][]
        | null;
      listCajaBancos?:
        | components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaBancosResponseDTO'][]
        | null;
      listCajaMediosPago?:
        | components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaMediosPagoResponseDTO'][]
        | null;
      listCajaCuotas?:
        | components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaCuotasResponseDTO'][]
        | null;
      dictPacienteCtaCte?:
        | components['schemas']['System.Collections.Generic.KeyValuePair`2[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'][]
        | null;
    };
    'Turno.EnvioWorklist.DTOAuxiliares.EnvioWorklistScheduledProcedureStepSequenceResponseDTO': {
      modality?: string | null;
      scheduledStationAeTitle?: string | null;
      scheduledProcedureStepStartDate?: string | null;
    };
    'Turno.EnvioWorklist.EnvioWorklistRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
    };
    'Turno.EnvioWorklist.EnvioWorklistResponseDTO': {
      accessionNumber?: string | null;
      patientName?: string | null;
      patientId?: string | null;
      patientBirthDate?: string | null;
      patientSex?: string | null;
      studyInstanceUid?: string | null;
      requestedProcedureDescription?: string | null;
      scheduledProcedureStepSequence?: components['schemas']['Turno.EnvioWorklist.DTOAuxiliares.EnvioWorklistScheduledProcedureStepSequenceResponseDTO'];
    };
    'Turno.GetDataTurno.GetDataTurnoResponseDTO': {
      /** Format: int32 */
      id_Turno?: number;
      /** Format: int32 */
      idAgenda_Turno?: number;
      /** Format: int32 */
      idMedico_Turno?: number | null;
      /** Format: int32 */
      idMedicoSolicitante_Turno?: number | null;
      /** Format: int32 */
      idEquipo_Turno?: number | null;
      /** Format: int32 */
      idEspecialidad_Turno?: number;
      /** Format: date */
      fechaTurno_Turno?: string;
      /** Format: time */
      horaTurno_Turno?: string;
      /** Format: date */
      fechaAsignacion_Turno?: string | null;
      /** Format: int32 */
      idPaciente_Turno?: number | null;
      /** Format: int32 */
      minutos_Turno?: number | null;
      /** Format: int32 */
      minutosDisponibles_Turno?: number | null;
      /** Format: int32 */
      idTurnoTipo_Turno?: number;
      /** Format: int32 */
      id_Especialidad?: number;
      descripcion_Especialidad?: string | null;
      /** Format: int32 */
      id_TurnoTipos?: number;
      descripcion_TurnoTipos?: string | null;
      /** Format: int32 */
      id_ObraSocial?: number;
      descripcion_ObraSocial?: string | null;
      /** Format: int32 */
      id_Plan?: number;
      descripcion_Plan?: string | null;
      /** Format: int32 */
      id_Centro?: number;
      descripcion_Centro?: string | null;
      /** Format: int32 */
      id_Consultorio?: number;
      descripcion_Consultorio?: string | null;
      /** Format: int32 */
      id_TurnoEstadoTipos?: number;
      descripcion_TurnoEstadoTipos?: string | null;
      /** Format: int32 */
      orden_TurnoEstadoTipos?: number;
      color_TurnoEstadoTipos?: string | null;
    };
    'Turno.GetPrestacionAgenda.GetPrestacionesAgendaResponseDTO': {
      descripcion?: string | null;
      cubreOS?: boolean;
    };
    'Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoDocumentosResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      documentoTurnoTipoId?: number;
      bucketId?: string | null;
      path?: string | null;
    };
    'Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoEstadosResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      turnoEstadoTiposId?: number;
      turnoEstadoTiposDescripcion?: string | null;
      /** Format: int32 */
      usuarioAltaId?: number;
      /** Format: int32 */
      usuarioBajaId?: number;
      fechaAlta?: string | null;
      fechaBaja?: string | null;
    };
    'Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoNomencladoresResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int64 */
      nomencladorId?: number;
      codigoNomenclador?: string | null;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      /** Format: int32 */
      ivaTipoId?: number;
      ivaTipoDescripcion?: string | null;
      /** Format: int32 */
      cantidad?: number;
      /** Format: int32 */
      prestacionOrigenId?: number;
      prestacionOrigenDescripcion?: string | null;
      numeroAutorizacion?: string | null;
      /** Format: int32 */
      validacionEstadosId?: number;
      validacionEstadosDescripcion?: string | null;
      /** Format: int32 */
      idReObraSocialFactura?: number;
      /** Format: int32 */
      idObraSocialDebito?: number;
      /** Format: int32 */
      idObraSocialLiquidacion?: number;
      /** Format: int32 */
      idObraSocialFactura?: number;
    };
    'Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoPrestacionesResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      prestacionId?: number;
      prestacionDescripcion?: string | null;
      lado?: string | null;
      /** Format: int32 */
      estudioTipoId?: number;
      estudioTipoDescripcion?: string | null;
      /** Format: int32 */
      informeTipoId?: number;
      informeTipoDescripcion?: string | null;
      /** Format: int32 */
      subInformeTipoId?: number;
      subInformeTipoDescripcion?: string | null;
      informado?: boolean;
    };
    'Turno.InformacionTurno.InformacionTurnoResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      agendaId?: number;
      /** Format: int32 */
      medicoId?: number;
      medicoNombreApellido?: string | null;
      /** Format: int32 */
      especialidadId?: number;
      especialidadDescripcion?: string | null;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      /** Format: int32 */
      obraSocialId?: number;
      obraSocialNombre?: string | null;
      /** Format: int32 */
      planId?: number;
      planDescripcion?: string | null;
      numeroAfiliado?: string | null;
      /** Format: int32 */
      medicoSolicitanteId?: number;
      medicoSolicitanteNombreApellido?: string | null;
      /** Format: int32 */
      turnoTipoId?: number;
      turnoTipoDescripcion?: string | null;
      /** Format: int32 */
      centroId?: number;
      centroDescripcion?: string | null;
      /** Format: int32 */
      consultorioId?: number;
      consultorioDescripcion?: string | null;
      /** Format: int32 */
      pacienteId?: number;
      pacienteNombreApellido?: string | null;
      pacienteNumeroDocumento?: string | null;
      /** Format: date */
      fechaNacimiento?: string;
      turnoPrestacionesDTO?:
        | components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoPrestacionesResponseDTO'][]
        | null;
      turnoNomencladoresDTO?:
        | components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoNomencladoresResponseDTO'][]
        | null;
      turnoEstadosDTO?:
        | components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoEstadosResponseDTO'][]
        | null;
      turnoDocumentosDTO?:
        | components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoDocumentosResponseDTO'][]
        | null;
    };
    'Turno.ModificarCodigoNomenclador.DTOAuxiliares.ModificarCodigoNomencladorTurnoNomencladorRequestDTO': {
      /** Format: int64 */
      nomencladorId?: number;
      /** Format: int32 */
      cantidad?: number;
      /** Format: int32 */
      turnoPrestacionOrigenId?: number;
      cambioAParticular?: boolean;
    };
    'Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
      turnoNomenclador?:
        | components['schemas']['Turno.ModificarCodigoNomenclador.DTOAuxiliares.ModificarCodigoNomencladorTurnoNomencladorRequestDTO'][]
        | null;
    };
    'Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresResponsetDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: int32 */
      cantidad?: number;
      numeroAutorizacion?: string | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      /** Format: int32 */
      idTurnoPrestacionOrigen?: number | null;
      numeroAfiliado?: string | null;
      noSeFactura?: boolean;
      /** Format: int32 */
      idValidacionEstados?: number | null;
      /** Format: int32 */
      idIvaTipo?: number | null;
      rechazoCierreAgenda?: boolean;
      controlado?: boolean;
      informado?: boolean;
      /** Format: int32 */
      idObraSocialLiquidacion?: number | null;
      /** Format: int32 */
      idObraSocialFactura?: number | null;
      /** Format: int32 */
      idObraSocialDebito?: number | null;
      /** Format: int32 */
      idReObraSocialFactura?: number | null;
      /** Format: int32 */
      idLiquidacionMed?: number | null;
    };
    'Turno.ModificarPrestacion.ModificarPrestacionesRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
      prestacion?:
        | components['schemas']['Turno.ModificarPrestacions.DTOAuxiliares.ModificarPrestacionesPrestacionRequestDTO'][]
        | null;
    };
    'Turno.ModificarPrestacions.DTOAuxiliares.ModificarPrestacionesPrestacionRequestDTO': {
      /** Format: int32 */
      prestacionId?: number;
      esParticular?: boolean;
      lado?: string | null;
    };
    'Turno.NumeroAutorizacion.DTOAuxiliares.NumeroAutorizacionTurnoNomencladorRequestDTO': {
      /** Format: int64 */
      nomencladorId?: number;
      numeroAutorizacion?: string | null;
    };
    'Turno.NumeroAutorizacion.NumeroAutorizacionRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
      turnoNomenclador?:
        | components['schemas']['Turno.NumeroAutorizacion.DTOAuxiliares.NumeroAutorizacionTurnoNomencladorRequestDTO'][]
        | null;
    };
    'Turno.NumeroAutorizacion.NumeroAutorizacionResponseDTO': {
      /** Format: int64 */
      nomencladorId?: number;
      numeroAutorizacion?: string | null;
      estaLiquidado?: boolean;
      esNumeroValido?: boolean;
    };
    'Turno.QuitaPresente.DTOAuxiliares.QuitaPresenteTurnoCancelacionRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      quitaPresenteMotivoId?: number;
    };
    'Turno.QuitaPresente.QuitaPresenteRequestDTO': {
      quitaPresente?:
        | components['schemas']['Turno.QuitaPresente.DTOAuxiliares.QuitaPresenteTurnoCancelacionRequestDTO'][]
        | null;
      /** Format: int32 */
      usuarioId?: number;
    };
    'Turno.QuitaPresente.QuitaPresenteResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      mensaje?: string | null;
    };
    'Turno.RecepcionDeTurno.RecepcionDeTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO': {
      /** Format: int32 */
      turnoId?: number;
      tieneEstadoPresente?: boolean;
      faltaMedicoSolicitante?: boolean;
      reqImporteOrden?: boolean;
      reqElegibilidad?: boolean;
      sePuedeRecepcionar?: boolean;
      nomencladores?:
        | components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO-NomencladorDTO'][]
        | null;
    };
    'Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO-NomencladorDTO': {
      /** Format: int64 */
      nomencladorId?: number;
      faltaAutorizacion?: boolean;
      faltaNumeroAutorizacion?: boolean;
      faltaOrden?: boolean;
      requiereValidacion?: boolean;
      validacionOnline?: boolean;
      sinProblemas?: boolean;
      tipoNomenclador?: components['schemas']['Domain.Enums.TipoNomenclador'];
    };
    'Turno.TurnoResponseDTO': {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      idMedico?: number | null;
      /** Format: int32 */
      idMedicoSolicitante?: number | null;
      /** Format: int32 */
      idEquipo?: number | null;
      /** Format: int32 */
      idEspecialidad?: number;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      /** Format: date */
      fechaAsignacion?: string | null;
      /** Format: int32 */
      idPaciente?: number | null;
      /** Format: int32 */
      minutos?: number | null;
      /** Format: int32 */
      minutosDisponibles?: number | null;
      /** Format: int32 */
      idTurnoTipo?: number;
      abonado?: boolean;
      informado?: boolean;
      urgente?: boolean;
      noOfrecerEnBusqueda?: boolean;
      evolucionado?: boolean;
      aSuCargos?: boolean;
      /** Format: int32 */
      idObraSocial?: number | null;
      /** Format: int32 */
      idPlan?: number | null;
      numeroAfiliado?: string | null;
      /** Format: int32 */
      prestacionOrigen?: number | null;
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      idConsultorio?: number;
      idAgendaNavigation?: components['schemas']['Agenda.AgendaResponseDTO'];
      idCentroNavigation?: components['schemas']['Centro.CentroResponseDTO'];
      idConsultorioNavigation?: components['schemas']['Consultorio.ConsultorioResponseDTO'];
      idEquipoNavigation?: components['schemas']['Equipo.EquipoResponseDTO'];
      idEspecialidadNavigation?: components['schemas']['Especialidad.EspecialidadResponseDTO'];
      idMedicoNavigation?: components['schemas']['Medico.MedicoResponseDTO'];
      idMedicoSolicitanteNavigation?: components['schemas']['Medico.MedicoResponseDTO'];
      idObraSocialNavigation?: components['schemas']['ObraSocial.ObraSocialResponseDTO'];
      idPacienteNavigation?: components['schemas']['Paciente.PacienteResponseDTO'];
      prestacionOrigenNavigation?: components['schemas']['Prestacion.PrestacionResponseDTO'];
      idPlanNavigation?: components['schemas']['Plan.PlanResponseDTO'];
      idTurnoTipoNavigation?: components['schemas']['TurnoTipo.TurnoTipoResponseDTO'];
    };
    'TurnoDocumento.S3Modify.S3ModifyRequestDTO': {
      newKey: string;
      /** Format: int32 */
      documentoTurnoTipoId: number;
      oldKey: string;
    };
    'TurnoDocumento.S3UploadIntegrity.S3UploadIntegrityRequestDTO': {
      /** Format: int32 */
      turnoId: number;
      /** Format: int32 */
      documentoTurnoTipoId: number;
      key: string;
      bucketId: string;
    };
    'TurnoEstado.CambiosEstadoTurno.AsignarEstadoAtendiendo.EstadoAtendiendoResponseDTO': {
      informaEnAtencion?: boolean;
      mensaje?: string | null;
    };
    'TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO': {
      /** Format: int32 */
      turnoId?: number;
      /** Format: int32 */
      usuarioId?: number;
    };
    'TurnoEstado.TurnoEstadoRequestDTO': {
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idTurnoEstadoTipos?: number;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: date */
      fechaAlta?: string;
    };
    'TurnoEstadoTipo.TurnoEstadoTipoRequestDTO': {
      descripcion?: string | null;
      /** Format: int32 */
      orden?: number;
      color?: string | null;
    };
    'TurnoTipo.TurnoTipoRequestDTO': {
      descripcion?: string | null;
    };
    'TurnoTipo.TurnoTipoResponseDTO': {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
    };
    'Usuario.ListVistaUsuarios.ListVistaUsuariosResponseDTO': {
      /** Format: int32 */
      id?: number;
      userName?: string | null;
      nombre?: string | null;
      apellido?: string | null;
      password?: string | null;
      documentoNumero?: string | null;
      /** Format: date */
      fechaNacimiento?: string;
      telefono?: string | null;
      email?: string | null;
      domicilio?: string | null;
      activo?: boolean;
    };
    'Usuario.UsuarioRequestDTO': {
      userName: string;
      nombre: string;
      apellido: string;
      password?: string | null;
      documentoNumero: string;
      /** Format: date */
      fechaNacimiento: string;
      telefono: string;
      email: string;
      domicilio: string;
      activo?: boolean;
    };
    'Usuario.UsuarioResponseDTO': {
      /** Format: int32 */
      id?: number;
      userName?: string | null;
      nombre?: string | null;
      apellido?: string | null;
      password?: string | null;
      documentoNumero?: string | null;
      /** Format: date */
      fechaNacimiento?: string;
      telefono?: string | null;
      email?: string | null;
      domicilio?: string | null;
      activo?: boolean;
    };
    'Validador.ValidadorRequestDTO': {
      descripcion?: string | null;
    };
    'ValidadorCaido.ValidadorCaidoRequestDTO': {
      /** Format: int32 */
      idValidador?: number;
      requiereAutorizacion?: boolean;
      numeroAutorizacion?: string | null;
      /** Format: date */
      fechaAlta?: string;
      /** Format: date */
      fechaBaja?: string | null;
    };
    'Vestidor.VestidorRequestDTO': {
      descripcion: string;
      /** Format: int32 */
      idConsultorio?: number;
    };
    'Application.QueriesSqlJobs.GeneradorDeTurnos.GeneradorDeTurnosResponseDTO': {
      turnos?: components['schemas']['Turno.TurnoResponseDTO'][] | null;
      diaGenerados?: components['schemas']['DiaGenerado.DiaGeneradoResponseDTO'][] | null;
    };
    ASuCargos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number | null;
      noValida?: boolean;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPlanNavigation?: components['schemas']['Planes'];
    };
    AgendaNomencladores: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int64 */
      idNomenclador?: number;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
    };
    AgendaOSNoAtendidas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPlanNavigation?: components['schemas']['Planes'];
    };
    AgendaTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      agendas?: components['schemas']['Agendas'][] | null;
    };
    Agendas: {
      /** Format: int32 */
      id?: number;
      nombreAgenda?: string | null;
      /** Format: int32 */
      idMedico?: number | null;
      /** Format: int32 */
      idEquipo?: number | null;
      /** Format: int32 */
      idEspecialidad?: number;
      /** Format: int32 */
      minutosTurno?: number;
      /** Format: date-time */
      cambiosDesde?: string;
      sexo: string;
      /** Format: int32 */
      edadMin?: number;
      /** Format: int32 */
      edadMax?: number;
      /** Format: int32 */
      idConsultorioFijo?: number | null;
      /** Format: int32 */
      pesoMax?: number | null;
      atiendePrimeraVez?: boolean;
      usaMinutosDinamicos?: boolean;
      seOfreceWeb?: boolean;
      /** Format: int32 */
      sobreTurnosAusentismo?: number | null;
      /** Format: int32 */
      minutosMinimos?: number | null;
      /** Format: int32 */
      diasGeneracion?: number;
      /** Format: int32 */
      idAgendaTipo?: number;
      evoluciona?: boolean;
      informa?: boolean;
      liquidaMedico?: boolean;
      /** Format: int32 */
      idGrupoMedico?: number | null;
      pasaTerminal?: boolean;
      informaEnAtencion?: boolean;
      permiteTurnoManual?: boolean;
      /** Format: int32 */
      idAtencionTipo?: number;
      retiraEfectivo?: boolean;
      trabajaFeriados?: boolean;
      _24Horas?: boolean;
      activo?: boolean;
      aSuCargos?: components['schemas']['ASuCargos'][] | null;
      agendaNomencladores?: components['schemas']['AgendaNomencladores'][] | null;
      agendaOSNoAtendidas?: components['schemas']['AgendaOSNoAtendidas'][] | null;
      diaGenerados?: components['schemas']['DiaGenerados'][] | null;
      entradaSalidas?: components['schemas']['EntradaSalidas'][] | null;
      grupoPrePreguntas?: components['schemas']['GrupoPrePreguntas'][] | null;
      horarioAdicionales?: components['schemas']['HorarioAdicionales'][] | null;
      horarioCancelados?: components['schemas']['HorarioCancelados'][] | null;
      horarios?: components['schemas']['Horarios'][] | null;
      idAgendaTipoNavigation?: components['schemas']['AgendaTipos'];
      idAtencionTipoNavigation?: components['schemas']['AtencionTipos'];
      idConsultorioFijoNavigation?: components['schemas']['Consultorios'];
      idEquipoNavigation?: components['schemas']['Equipos'];
      idEspecialidadNavigation?: components['schemas']['Especialidades'];
      idGrupoMedicoNavigation?: components['schemas']['GrupoMedicos'];
      idMedicoNavigation?: components['schemas']['Medicos'];
      poolDefiniciones?: components['schemas']['PoolDefiniciones'][] | null;
      prestacionAgendas?: components['schemas']['PrestacionAgendas'][] | null;
      restriccionReglas?: components['schemas']['RestriccionReglas'][] | null;
      tecnicos?: components['schemas']['Tecnicos'][] | null;
      turnoAReprogramarIdAgendaDestinoNavigation?: components['schemas']['TurnoAReprogramar'][] | null;
      turnoAReprogramarIdAgendaOrigenNavigation?: components['schemas']['TurnoAReprogramar'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    AreaLogIns: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idCentro?: number;
      activo?: boolean;
      idCentroNavigation?: components['schemas']['Centros'];
    };
    AtencionTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      agendas?: components['schemas']['Agendas'][] | null;
    };
    BloqueoMotivos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      turnoEstados?: components['schemas']['TurnoEstados'][] | null;
    };
    CajaAperturaConfigs: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idCajaDiaria?: number;
      /** Format: int32 */
      idUsuarioConfig?: number;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: double */
      importe?: number;
      /** Format: date-time */
      fecha?: string;
      recurrente?: boolean;
      cajaAperturas?: components['schemas']['CajaAperturas'][] | null;
      idCajaDiariaNavigation?: components['schemas']['CajaDiarias'];
      idUsuarioConfigNavigation?: components['schemas']['Usuarios'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    CajaAperturas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idCajaAperturasConfig?: number;
      /** Format: int32 */
      idUsuarioCajero?: number;
      /** Format: double */
      importe?: number;
      /** Format: date-time */
      fecha?: string;
      error?: boolean | null;
      errorMensaje?: string | null;
      idCajaAperturasConfigNavigation?: components['schemas']['CajaAperturaConfigs'];
      idUsuarioCajeroNavigation?: components['schemas']['Usuarios'];
    };
    CajaArqueos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idCajaDiaria?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: double */
      importe?: number;
      /** Format: double */
      importeFaltante?: number | null;
      /** Format: double */
      importeSobrante?: number | null;
      /** Format: int32 */
      idUsuarioCajero?: number;
      idCajaDiariaNavigation?: components['schemas']['CajaDiarias'];
      idUsuarioCajeroNavigation?: components['schemas']['Usuarios'];
    };
    CajaBancos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      cajaCuotas?: components['schemas']['CajaCuotas'][] | null;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
    };
    CajaCuotas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      cantidadCuotas?: number;
      /** Format: double */
      coeficiente?: number;
      /** Format: int32 */
      idCajaBancos?: number;
      /** Format: int32 */
      idEspecialidades?: number;
      idCajaBancosNavigation?: components['schemas']['CajaBancos'];
      idEspecialidadesNavigation?: components['schemas']['Especialidades'];
    };
    CajaDerechos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idCajaMaestra?: number;
      /** Format: int32 */
      idUsuario?: number;
      aperturas?: boolean;
      movimientos?: boolean;
      idCajaMaestraNavigation?: components['schemas']['CajaMaestras'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    CajaDiariaMovs: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idUsuarioCajero?: number;
      /** Format: int32 */
      idTurno?: number | null;
      /** Format: double */
      importe?: number;
      /** Format: int32 */
      idCajaMovTipos?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      idCajaDiaria?: number;
      /** Format: int32 */
      idMedico?: number | null;
      movimientoEmpresa?: boolean;
      /** Format: int32 */
      idIvaTipo?: number;
      /** Format: int32 */
      retencion?: number | null;
      /** Format: int32 */
      idCajaMediosPago?: number;
      /** Format: int32 */
      cuotas?: number | null;
      /** Format: int32 */
      coeficiente?: number | null;
      /** Format: int32 */
      idPaciente?: number;
      /** Format: int32 */
      idCajaBancos?: number | null;
      /** Format: int32 */
      idComprobante?: number | null;
      esNotaCredito?: boolean;
      /** Format: int32 */
      nroNotaCredito?: number | null;
      /** Format: int32 */
      idDeposito?: number | null;
      tokenDecidir?: string | null;
      /** Format: int32 */
      idCajaProducto?: number | null;
      /** Format: int32 */
      cantidadProducto?: number | null;
      idMercadopago?: string | null;
      idModo?: string | null;
      idPayway?: string | null;
      nroCuponTarjeta?: string | null;
      /** Format: time */
      hora?: string;
      cajaFactuElectronica?: components['schemas']['CajaFactuElectronica'][] | null;
      idCajaBancosNavigation?: components['schemas']['CajaBancos'];
      idCajaDiariaNavigation?: components['schemas']['CajaDiarias'];
      idCajaMediosPagoNavigation?: components['schemas']['CajaMediosPago'];
      idCajaMovTiposNavigation?: components['schemas']['CajaMovTipos'];
      idCajaProductoNavigation?: components['schemas']['CajaProductos'];
      idComprobanteNavigation?: components['schemas']['Comprobantes'];
      idDepositoNavigation?: components['schemas']['Depositos'];
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idMedicoNavigation?: components['schemas']['Medicos'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuarioCajeroNavigation?: components['schemas']['Usuarios'];
    };
    CajaDiarias: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idCajaMaestras?: number;
      /** Format: int32 */
      idCajaDiariasPrefijo?: number;
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      idRecepcion?: number;
      esOnline?: boolean;
      permiteIngresos?: boolean;
      permiteEgresos?: boolean;
      /** Format: int32 */
      idOperadorActivo?: number | null;
      activo?: boolean;
      cajaAperturaConfigs?: components['schemas']['CajaAperturaConfigs'][] | null;
      cajaArqueos?: components['schemas']['CajaArqueos'][] | null;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      cajaMovInternosIdCajaDiariaDestinoNavigation?: components['schemas']['CajaMovInternos'][] | null;
      cajaMovInternosIdCajaDiariaOrigenNavigation?: components['schemas']['CajaMovInternos'][] | null;
      cajaUsuarios?: components['schemas']['CajaUsuarios'][] | null;
      idCajaDiariasPrefijoNavigation?: components['schemas']['CajaDiariasPrefijos'];
      idCajaMaestrasNavigation?: components['schemas']['CajaMaestras'];
      idCentroNavigation?: components['schemas']['Centros'];
      idOperadorActivoNavigation?: components['schemas']['Usuarios'];
      idRecepcionNavigation?: components['schemas']['Recepciones'];
    };
    CajaDiariasPrefijos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      puntoDeVenta?: number;
      /** Format: int32 */
      idEmpresa?: number;
      descripcion: string;
      /** Format: int32 */
      numeracion?: number;
      cajaDiarias?: components['schemas']['CajaDiarias'][] | null;
      idEmpresaNavigation?: components['schemas']['Empresas'];
    };
    CajaFactuElectronica: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idComprobante?: number | null;
      /** Format: int32 */
      idCajaDiariaMov?: number;
      /** Format: date-time */
      fechaGeneracion?: string;
      /** Format: int32 */
      intentos?: number | null;
      /** Format: date-time */
      fechaUltimoIntento?: string | null;
      emitido?: boolean;
      idCajaDiariaMovNavigation?: components['schemas']['CajaDiariaMovs'];
      idComprobanteNavigation?: components['schemas']['Comprobantes'];
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    CajaHistoricoMovs: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idUsuarioCajero?: number;
      /** Format: int32 */
      turno?: number | null;
      /** Format: double */
      importe?: number;
      /** Format: int32 */
      idCajaMovTipos?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      idCajaDiaria?: number;
      /** Format: int32 */
      idMedico?: number | null;
      movimientoEmpresa?: boolean;
      /** Format: int32 */
      idTipoIva?: number;
      /** Format: double */
      retencion?: number | null;
      /** Format: int32 */
      idCajaMediosPago?: number;
      /** Format: int32 */
      cuotas?: number;
      /** Format: double */
      coeficiente?: number | null;
      /** Format: int32 */
      idPaciente?: number;
      /** Format: int32 */
      idComprobante?: number | null;
      esNotaCredito?: boolean;
      /** Format: int32 */
      nroNotaCredito?: number | null;
      /** Format: int32 */
      idDeposito?: number | null;
      /** Format: int32 */
      idCajaBancos?: number | null;
      tokenDecidir?: string | null;
      /** Format: int32 */
      idCajaProducto?: number | null;
      /** Format: int32 */
      cantidadProduto?: number | null;
      idMercadopago?: string | null;
      idModo?: string | null;
      idPayway?: string | null;
      nroCuponTarjeta?: string | null;
      idCajaBancosNavigation?: components['schemas']['CajaBancos'];
      idCajaDiariaNavigation?: components['schemas']['CajaDiarias'];
      idCajaMediosPagoNavigation?: components['schemas']['CajaMediosPago'];
      idCajaMovTiposNavigation?: components['schemas']['CajaMovTipos'];
      idCajaProductoNavigation?: components['schemas']['CajaProductos'];
      idComprobanteNavigation?: components['schemas']['Comprobantes'];
      idDepositoNavigation?: components['schemas']['Depositos'];
      idMedicoNavigation?: components['schemas']['Medicos'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idTipoIvaNavigation?: components['schemas']['IvaTipos'];
      idUsuarioCajeroNavigation?: components['schemas']['Usuarios'];
      turnoNavigation?: components['schemas']['Turnos'];
    };
    CajaMaestras: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: double */
      saldo?: number;
      cajaDerechos?: components['schemas']['CajaDerechos'][] | null;
      cajaDiarias?: components['schemas']['CajaDiarias'][] | null;
      cajaMovInternosIdCajaMaestraDestinoNavigation?: components['schemas']['CajaMovInternos'][] | null;
      cajaMovInternosIdCajaMaestraOrigenNavigation?: components['schemas']['CajaMovInternos'][] | null;
    };
    CajaMediosPago: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
    };
    CajaMovInternos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idCajaDiariaOrigen?: number | null;
      /** Format: int32 */
      idCajaDiariaDestino?: number | null;
      /** Format: int32 */
      idCajaMaestraOrigen?: number | null;
      /** Format: int32 */
      idCajaMaestraDestino?: number | null;
      cajasMaestras?: boolean;
      extraccionCajaMaestra?: boolean;
      /** Format: double */
      importe?: number;
      /** Format: int32 */
      idCajaMovTipos?: number;
      observaciones?: string | null;
      idCajaDiariaDestinoNavigation?: components['schemas']['CajaDiarias'];
      idCajaDiariaOrigenNavigation?: components['schemas']['CajaDiarias'];
      idCajaMaestraDestinoNavigation?: components['schemas']['CajaMaestras'];
      idCajaMaestraOrigenNavigation?: components['schemas']['CajaMaestras'];
      idCajaMovTiposNavigation?: components['schemas']['CajaMovTipos'];
    };
    CajaMovTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      interno?: boolean;
      requiereAutorizacion?: boolean;
      /** Format: int32 */
      sigla?: number;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      cajaMovInternos?: components['schemas']['CajaMovInternos'][] | null;
    };
    CajaProductos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: double */
      importe?: number;
      /** Format: date-time */
      fechaActivacion?: string;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
    };
    CajaUsuarios: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idCajaDiaria?: number;
      /** Format: int32 */
      idUsuario?: number;
      idCajaDiariaNavigation?: components['schemas']['CajaDiarias'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    CancelacionMotivos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      textoMotivo?: string | null;
      visiblePaciente?: boolean;
      activo?: boolean;
      turnoEstados?: components['schemas']['TurnoEstados'][] | null;
    };
    CentroAperturas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      diaDeSemana?: number;
      /** Format: time */
      horaApertura?: string;
      /** Format: time */
      horaCierre?: string;
      /** Format: date-time */
      fechaActivacion?: string;
      idCentroNavigation?: components['schemas']['Centros'];
    };
    Centros: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idLocalidad?: number;
      domicilio?: string | null;
      /** Format: int32 */
      idEmpresa?: number;
      telefono?: string | null;
      coordenadas?: string | null;
      visibleWeb?: boolean;
      activo?: boolean;
      areaLogIns?: components['schemas']['AreaLogIns'][] | null;
      cajaDiarias?: components['schemas']['CajaDiarias'][] | null;
      centroAperturas?: components['schemas']['CentroAperturas'][] | null;
      equipos?: components['schemas']['Equipos'][] | null;
      horarioDetalles?: components['schemas']['HorarioDetalles'][] | null;
      idEmpresaNavigation?: components['schemas']['Empresas'];
      idLocalidadNavigation?: components['schemas']['Localidades'];
      llamadores?: components['schemas']['Llamadores'][] | null;
      pisos?: components['schemas']['Pisos'][] | null;
      recepciones?: components['schemas']['Recepciones'][] | null;
      restriccionReglas?: components['schemas']['RestriccionReglas'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    Comentarios: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: date-time */
      fecha?: string;
      texto: string;
      visible?: boolean;
      critico?: boolean;
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    ComprobanteDetalles: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idComprobante?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: double */
      importeUnitario?: number;
      /** Format: int32 */
      idIvaTipo?: number;
      /** Format: double */
      importeIva?: number;
      idComprobanteNavigation?: components['schemas']['Comprobantes'];
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
    };
    ComprobanteTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      signo?: number;
      abreviatura: string;
      codigo: string;
      comprobantes?: components['schemas']['Comprobantes'][] | null;
    };
    Comprobantes: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      puntoDeVenta?: number;
      /** Format: int32 */
      numero?: number;
      sigla: string;
      /** Format: date-time */
      fecha?: string;
      /** Format: date-time */
      fechaVencimiento?: string | null;
      /** Format: double */
      totalBruto?: number;
      /** Format: double */
      totalNeto?: number;
      /** Format: double */
      totalFinal?: number;
      observacion?: string | null;
      /** Format: int32 */
      idComprobanteTipo?: number;
      /** Format: int32 */
      idEmpresa?: number;
      cae?: string | null;
      /** Format: date-time */
      fechaVencimientoCae?: string | null;
      anulado?: boolean;
      /** Format: int32 */
      idMoneda?: number;
      /** Format: int32 */
      idObraSocial?: number | null;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaFactuElectronica?: components['schemas']['CajaFactuElectronica'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      comprobanteDetalles?: components['schemas']['ComprobanteDetalles'][] | null;
      idComprobanteTipoNavigation?: components['schemas']['ComprobanteTipos'];
      idEmpresaNavigation?: components['schemas']['Empresas'];
      idMonedaNavigation?: components['schemas']['Monedas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      obraSocialFacturas?: components['schemas']['ObraSocialFacturas'][] | null;
      pacienteCtaCte?: components['schemas']['PacienteCtaCte'][] | null;
    };
    ComunicacionTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      comunicacionesFila?: components['schemas']['ComunicacionesFila'][] | null;
    };
    ComunicacionesFila: {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      idComunicacionTipo?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idMailTemplate?: number | null;
      mensaje?: string | null;
      /** Format: int32 */
      idPaciente?: number | null;
      idComunicacionTipoNavigation?: components['schemas']['ComunicacionTipos'];
      idMailTemplateNavigation?: components['schemas']['MailTemplates'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    CondicionPagos: {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      obraSocialFacturas?: components['schemas']['ObraSocialFacturas'][] | null;
    };
    Consultorios: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idRecepcion?: number;
      /** Format: int32 */
      idPiso?: number;
      /** Format: int32 */
      idEquipo?: number | null;
      /** Format: int32 */
      interno?: number | null;
      /** Format: int32 */
      idLlamador?: number | null;
      /** Format: time */
      disponibleDesde?: string | null;
      /** Format: time */
      disponibleHasta?: string | null;
      activo?: boolean;
      agendas?: components['schemas']['Agendas'][] | null;
      entradaSalidas?: components['schemas']['EntradaSalidas'][] | null;
      horarioDetalles?: components['schemas']['HorarioDetalles'][] | null;
      idEquipoNavigation?: components['schemas']['Equipos'];
      idLlamadorNavigation?: components['schemas']['Llamadores'];
      idPisoNavigation?: components['schemas']['Pisos'];
      idRecepcionNavigation?: components['schemas']['Recepciones'];
      turnos?: components['schemas']['Turnos'][] | null;
      vestidores?: components['schemas']['Vestidores'][] | null;
    };
    ContratoFechaActs: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      /** Format: date-time */
      fecha?: string;
      contratos?: components['schemas']['Contratos'][] | null;
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPlanNavigation?: components['schemas']['Planes'];
    };
    Contratos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPlan?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: int32 */
      idContratoFechaActs?: number;
      /** Format: double */
      valorPactado?: number | null;
      /** Format: double */
      valorMedico?: number | null;
      /** Format: double */
      efectivo?: number | null;
      /** Format: double */
      coseguro?: number | null;
      valorEnCero?: boolean;
      codigoAuxiliar?: string | null;
      descripcionAuxiliar?: string | null;
      validaOnline?: boolean;
      validaDiagnostico?: boolean;
      requiereInforme?: boolean;
      altaComplejidad?: boolean;
      requiereAutorizacion?: boolean;
      idContratoFechaActsNavigation?: components['schemas']['ContratoFechaActs'];
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
      idPlanNavigation?: components['schemas']['Planes'];
    };
    ControlCierreAgenda: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: date-time */
      fechaControl?: string;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      idMotivosRechazoPrestacion?: number;
      idMotivosRechazoPrestacionNavigation?: components['schemas']['MotivoRechazoPrestaciones'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    ControlOrdenes: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      aprobado?: boolean;
      /** Format: int32 */
      estadoOrden?: number;
      estadoAutorizacion?: boolean;
      estadoPrestaciones?: boolean;
      estadoMedicoSolicitante?: boolean;
      /** Format: int32 */
      idUsuarioAprueba?: number;
      /** Format: date-time */
      fechaAprobado?: string;
      /** Format: int32 */
      idMotivoRechazo?: number | null;
      /** Format: int32 */
      idUsuarioRechazo?: number | null;
      /** Format: date-time */
      fechaRechazo?: string | null;
      requiereCambio?: boolean;
      idMotivoRechazoNavigation?: components['schemas']['MotivoRechazoPrestaciones'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuarioApruebaNavigation?: components['schemas']['Usuarios'];
      idUsuarioRechazoNavigation?: components['schemas']['Usuarios'];
    };
    ControlTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      obraSocialLiqConfig?: components['schemas']['ObraSocialLiqConfig'][] | null;
      obraSocialLiqConfigManual?: components['schemas']['ObraSocialLiqConfigManual'][] | null;
    };
    CtaCteNomencladores: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPacienteCtaCte?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: double */
      importe?: number | null;
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
      idPacienteCtaCteNavigation?: components['schemas']['PacienteCtaCte'];
    };
    Depositos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPaciente?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int64 */
      idNomenclandor?: number;
      /** Format: double */
      importe?: number;
      /** Format: date-time */
      fechaAlta?: string;
      /** Format: int32 */
      idUsuarioAlta?: number;
      /** Format: date-time */
      fechaDevolucion?: string | null;
      /** Format: int32 */
      idUsuarioDevolucion?: number | null;
      /** Format: int32 */
      idUsuarioAutorizacion?: number | null;
      vencido?: boolean;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      /** Format: int32 */
      idIvaTipo?: number;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idNomenclandorNavigation?: components['schemas']['Nomencladores'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idPlanNavigation?: components['schemas']['Planes'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuarioAltaNavigation?: components['schemas']['Usuarios'];
      idUsuarioAutorizacionNavigation?: components['schemas']['Usuarios'];
      idUsuarioDevolucionNavigation?: components['schemas']['Usuarios'];
    };
    DiaGenerados: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      idHorario?: number | null;
      /** Format: int32 */
      idHorarioAdicional?: number | null;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      turnosTotales?: number;
      /** Format: int32 */
      turnosLibres?: number;
      /** Format: int32 */
      sobreTurnos?: number;
      /** Format: date-time */
      cambiosDesde?: string;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idHorarioAdicionalNavigation?: components['schemas']['HorarioAdicionales'];
      idHorarioNavigation?: components['schemas']['Horarios'];
    };
    Discapacidades: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPaciente?: number;
      noVidente?: boolean;
      claustrofobico?: boolean;
      sordomudo?: boolean;
      movilidadReducida?: boolean;
      idPacienteNavigation?: components['schemas']['Pacientes'];
    };
    DocumentoTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      pacientes?: components['schemas']['Pacientes'][] | null;
    };
    DocumentoTurnoTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      descripcionEnBukcet: string;
      turnoDocumentos?: components['schemas']['TurnoDocumentos'][] | null;
    };
    Empresas: {
      /** Format: int32 */
      id?: number;
      direccion?: string | null;
      razonSocial?: string | null;
      email?: string | null;
      ingresosBrutos?: string | null;
      cuit?: string | null;
      telefono?: string | null;
      /** Format: int32 */
      idLocalidad?: number;
      nombreAbreviatura?: string | null;
      activo?: boolean;
      cajaDiariasPrefijos?: components['schemas']['CajaDiariasPrefijos'][] | null;
      centros?: components['schemas']['Centros'][] | null;
      comprobantes?: components['schemas']['Comprobantes'][] | null;
      idLocalidadNavigation?: components['schemas']['Localidades'];
      obraSocialFactConfig?: components['schemas']['ObraSocialFactConfig'][] | null;
      obraSocialFacturas?: components['schemas']['ObraSocialFacturas'][] | null;
      obraSocialLiqConfigIdEmpresaDestinoNavigation?: components['schemas']['ObraSocialLiqConfig'][] | null;
      obraSocialLiqConfigIdEmpresaOrigenNavigation?: components['schemas']['ObraSocialLiqConfig'][] | null;
      obraSocialLiqConfigManualIdEmpresaDestinoNavigation?: components['schemas']['ObraSocialLiqConfigManual'][] | null;
      obraSocialLiqConfigManualIdEmpresaOrigenNavigation?: components['schemas']['ObraSocialLiqConfigManual'][] | null;
      obraSocialLiquidaciones?: components['schemas']['ObraSocialLiquidaciones'][] | null;
    };
    EntradaSalidas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      idConsultorio?: number;
      /** Format: int32 */
      idHorarioDetalles?: number;
      /** Format: date-time */
      fechaIngreso?: string;
      /** Format: date-time */
      fechaEgreso?: string | null;
      cierreConRechazo?: boolean;
      nota?: string | null;
      usaToken?: boolean;
      cierreAutomatico?: boolean;
      /** Format: int32 */
      idUsuarioIngreso?: number | null;
      /** Format: int32 */
      idUsuarioEgreso?: number | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idConsultorioNavigation?: components['schemas']['Consultorios'];
      idHorarioDetallesNavigation?: components['schemas']['HorarioDetalles'];
      idUsuarioEgresoNavigation?: components['schemas']['Usuarios'];
      idUsuarioIngresoNavigation?: components['schemas']['Usuarios'];
    };
    Equipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      nombreParaAgenda?: string | null;
      /** Format: int32 */
      idCentro?: number;
      marca?: string | null;
      studyInstanceID?: string | null;
      modelo?: string | null;
      /** Format: int32 */
      idModalidad?: number;
      aeTitle: string;
      activo?: boolean;
      agendas?: components['schemas']['Agendas'][] | null;
      consultorios?: components['schemas']['Consultorios'][] | null;
      idCentroNavigation?: components['schemas']['Centros'];
      idModalidadNavigation?: components['schemas']['Modalidades'];
      turnos?: components['schemas']['Turnos'][] | null;
    };
    Especialidades: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idModalidad?: number | null;
      controlManual?: boolean;
      preDefinido?: boolean;
      activo?: boolean;
      agendas?: components['schemas']['Agendas'][] | null;
      cajaCuotas?: components['schemas']['CajaCuotas'][] | null;
      idModalidadNavigation?: components['schemas']['Modalidades'];
      medicos?: components['schemas']['Medicos'][] | null;
      nomencladores?: components['schemas']['Nomencladores'][] | null;
      restriccionReglas?: components['schemas']['RestriccionReglas'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    EstudioTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      usaWorklist?: boolean | null;
      informeTipos?: components['schemas']['InformeTipos'][] | null;
      informes?: components['schemas']['Informes'][] | null;
      prestaciones?: components['schemas']['Prestaciones'][] | null;
      turnoPrestaciones?: components['schemas']['TurnoPrestaciones'][] | null;
    };
    Feriados: {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      idPais?: number;
      descripcion: string;
      feriadoFijo?: boolean;
      diaNoLaborable?: boolean;
      activo?: boolean;
      idPaisNavigation?: components['schemas']['Paises'];
    };
    GrupoMedicos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      agendas?: components['schemas']['Agendas'][] | null;
      medicos?: components['schemas']['Medicos'][] | null;
    };
    GrupoPrePreguntas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idGrupoPrestaciones?: number;
      textoPregunta: string;
      siNo?: boolean;
      bloqueaAvance?: boolean;
      bloqueaNo?: boolean;
      /** Format: int32 */
      idPreguntaPadre?: number | null;
      fuerzaAgendaDestino?: boolean;
      /** Format: int32 */
      idAgendaDestino?: number | null;
      prestacionInversa?: boolean;
      /** Format: int32 */
      idPrestacionDestino?: number | null;
      idAgendaDestinoNavigation?: components['schemas']['Agendas'];
      idGrupoPrestacionesNavigation?: components['schemas']['GrupoPrestaciones'];
      idPreguntaPadreNavigation?: components['schemas']['GrupoPrePreguntas'];
      idPrestacionDestinoNavigation?: components['schemas']['Prestaciones'];
      inverseIdPreguntaPadreNavigation?: components['schemas']['GrupoPrePreguntas'][] | null;
    };
    GrupoPrestaciones: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      formula?: string | null;
      acumulaPrestaciones?: boolean;
      muestraTexto?: boolean;
      texto?: string | null;
      usaPreguntas?: boolean;
      visibleUsuarios?: boolean;
      visiblePacientes?: boolean;
      grupoPrePreguntas?: components['schemas']['GrupoPrePreguntas'][] | null;
      prestaciones?: components['schemas']['Prestaciones'][] | null;
    };
    HorarioAdicionales: {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      sobreTurnosMax?: number | null;
      noOfrecerEnBusqueda?: boolean;
      diaGenerados?: components['schemas']['DiaGenerados'][] | null;
      horarioDetalles?: components['schemas']['HorarioDetalles'][] | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
    };
    HorarioCanceladoDetalles: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idHorarioCancelado?: number;
      /** Format: int32 */
      idTurno?: number;
      reprogramado?: boolean;
      idHorarioCanceladoNavigation?: components['schemas']['HorarioCancelados'];
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    HorarioCancelados: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: date-time */
      fecha?: string;
      diaEntero?: boolean;
      /** Format: time */
      horaDesde?: string | null;
      /** Format: time */
      horaHasta?: string | null;
      motivo: string;
      resuelto?: boolean;
      horarioCanceladoDetalles?: components['schemas']['HorarioCanceladoDetalles'][] | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
    };
    HorarioDetalles: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idHorario?: number | null;
      /** Format: int32 */
      idHorarioAdicional?: number | null;
      /** Format: time */
      horarioDesde?: string;
      /** Format: time */
      horarioHasta?: string;
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      idConsultorio?: number;
      /** Format: int32 */
      idTurnoTipo?: number;
      entradaSalidas?: components['schemas']['EntradaSalidas'][] | null;
      idCentroNavigation?: components['schemas']['Centros'];
      idConsultorioNavigation?: components['schemas']['Consultorios'];
      idHorarioAdicionalNavigation?: components['schemas']['HorarioAdicionales'];
      idHorarioNavigation?: components['schemas']['Horarios'];
      idTurnoTipoNavigation?: components['schemas']['TurnoTipos'];
    };
    Horarios: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      diaDeSemana?: number;
      /** Format: int32 */
      sobreTurnosMax?: number;
      mensaje?: string | null;
      /** Format: date-time */
      fechaActivacion?: string;
      /** Format: date-time */
      fechaBaja?: string | null;
      diaGenerados?: components['schemas']['DiaGenerados'][] | null;
      horarioDetalles?: components['schemas']['HorarioDetalles'][] | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
    };
    InfTempGrupos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      informeTemplates?: components['schemas']['InformeTemplates'][] | null;
    };
    InfTemplateTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      informeTemplates?: components['schemas']['InformeTemplates'][] | null;
    };
    InformeEstados: {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      idUsuario?: number;
      texto: string;
      validado?: boolean;
      impreso?: boolean;
      vistoPaciente?: boolean;
      /** Format: int32 */
      idInformes?: number;
      validacion?: boolean;
      quitaValidacion?: boolean;
      idInformesNavigation?: components['schemas']['Informes'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    InformeSubTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idInformeTipo?: number;
      /** Format: int32 */
      hsSla?: number | null;
      permitePdf?: boolean;
      llevaImagen?: boolean;
      requiereImagen?: boolean;
      usaWorklist?: boolean;
      idInformeTipoNavigation?: components['schemas']['InformeTipos'];
      informeTemplates?: components['schemas']['InformeTemplates'][] | null;
      informes?: components['schemas']['Informes'][] | null;
      poolDefiniciones?: components['schemas']['PoolDefiniciones'][] | null;
      prestaciones?: components['schemas']['Prestaciones'][] | null;
      turnoPrestaciones?: components['schemas']['TurnoPrestaciones'][] | null;
    };
    InformeTemplates: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      texto: string;
      /** Format: int32 */
      idInformeTipo?: number;
      /** Format: int32 */
      idInformeSubTipo?: number;
      /** Format: int32 */
      idUsuarios?: number | null;
      /** Format: int32 */
      idInfTemplateTipos?: number;
      /** Format: int32 */
      idInfTempGrupos?: number | null;
      activo?: boolean;
      idInfTempGruposNavigation?: components['schemas']['InfTempGrupos'];
      idInfTemplateTiposNavigation?: components['schemas']['InfTemplateTipos'];
      idInformeSubTipoNavigation?: components['schemas']['InformeSubTipos'];
      idInformeTipoNavigation?: components['schemas']['InformeTipos'];
      idUsuariosNavigation?: components['schemas']['Usuarios'];
      informes?: components['schemas']['Informes'][] | null;
    };
    InformeTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idModalidades?: number;
      usaWorklist?: boolean | null;
      /** Format: int32 */
      idEstudioTipos?: number;
      idEstudioTiposNavigation?: components['schemas']['EstudioTipos'];
      idModalidadesNavigation?: components['schemas']['Modalidades'];
      informeSubTipos?: components['schemas']['InformeSubTipos'][] | null;
      informeTemplates?: components['schemas']['InformeTemplates'][] | null;
      informes?: components['schemas']['Informes'][] | null;
      pools?: components['schemas']['Pools'][] | null;
      prestaciones?: components['schemas']['Prestaciones'][] | null;
      turnoPrestaciones?: components['schemas']['TurnoPrestaciones'][] | null;
    };
    Informes: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idInformeTipo?: number;
      /** Format: int32 */
      idInformeSubTipo?: number;
      textoInforme: string;
      conclusionInforme: string;
      /** Format: int32 */
      idInformeTemplates?: number | null;
      pdf?: boolean;
      urgente?: boolean;
      validacionDiagnostico?: boolean;
      /** Format: int32 */
      idMedicoSolicitante?: number;
      /** Format: int32 */
      idEstudioTipos?: number;
      conclusionTemporal?: string | null;
      /** Format: int32 */
      idUsuarios?: number | null;
      textoTemporal?: string | null;
      /** Format: int32 */
      idPool?: number | null;
      validado?: boolean;
      impreso?: boolean;
      vistoPaciente?: boolean;
      idEstudioTiposNavigation?: components['schemas']['EstudioTipos'];
      idInformeSubTipoNavigation?: components['schemas']['InformeSubTipos'];
      idInformeTemplatesNavigation?: components['schemas']['InformeTemplates'];
      idInformeTipoNavigation?: components['schemas']['InformeTipos'];
      idMedicoSolicitanteNavigation?: components['schemas']['Medicos'];
      idPoolNavigation?: components['schemas']['Pools'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuariosNavigation?: components['schemas']['Usuarios'];
      informeEstados?: components['schemas']['InformeEstados'][] | null;
    };
    IvaTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      comprobanteDetalles?: components['schemas']['ComprobanteDetalles'][] | null;
      depositos?: components['schemas']['Depositos'][] | null;
      obraSocialFacturas?: components['schemas']['ObraSocialFacturas'][] | null;
      obraSocialLiqConfig?: components['schemas']['ObraSocialLiqConfig'][] | null;
      obraSocialLiqConfigManual?: components['schemas']['ObraSocialLiqConfigManual'][] | null;
      obraSocialLiquidaciones?: components['schemas']['ObraSocialLiquidaciones'][] | null;
      obraSociales?: components['schemas']['ObraSociales'][] | null;
      pacientes?: components['schemas']['Pacientes'][] | null;
      planes?: components['schemas']['Planes'][] | null;
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
    };
    LiquidacionNomencladores: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocialLiqConfig?: number | null;
      /** Format: int32 */
      idObraSocialLiqConfigManual?: number | null;
      /** Format: int64 */
      idNomencladorIncluye?: number | null;
      /** Format: int64 */
      idNomencladorExcluye?: number | null;
      idNomencladorExcluyeNavigation?: components['schemas']['Nomencladores'];
      idNomencladorIncluyeNavigation?: components['schemas']['Nomencladores'];
      idObraSocialLiqConfigManualNavigation?: components['schemas']['ObraSocialLiqConfigManual'];
      idObraSocialLiqConfigNavigation?: components['schemas']['ObraSocialLiqConfig'];
    };
    Llamadores: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idCentro?: number;
      horizontal?: boolean;
      activo?: boolean;
      consultorios?: components['schemas']['Consultorios'][] | null;
      idCentroNavigation?: components['schemas']['Centros'];
      llamadosFila?: components['schemas']['LlamadosFila'][] | null;
    };
    LlamadosFila: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idPaciente?: number;
      /** Format: int32 */
      idVestidor?: number | null;
      /** Format: int32 */
      idLlamador?: number;
      textoLlamado: string;
      /** Format: int32 */
      cantidadLlamados?: number | null;
      /** Format: date-time */
      fechaLlamado?: string | null;
      idLlamadorNavigation?: components['schemas']['Llamadores'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idVestidorNavigation?: components['schemas']['Vestidores'];
    };
    Localidades: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idProvincia?: number;
      descripcion: string;
      /** Format: int32 */
      codigoPostal?: number;
      centros?: components['schemas']['Centros'][] | null;
      empresas?: components['schemas']['Empresas'][] | null;
      idProvinciaNavigation?: components['schemas']['Provincias'];
      pacientes?: components['schemas']['Pacientes'][] | null;
    };
    LogABMs: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTabla?: number | null;
      /** Format: int32 */
      idEntidad?: number | null;
      /** Format: int32 */
      idUsuario?: number | null;
      /** Format: date-time */
      fechaHora?: string | null;
      /** Format: int32 */
      idLogTipo?: number | null;
      registroAnterior?: string | null;
      registroNuevo?: string | null;
      jsonRegistroAnterior?: string | null;
      jsonRegistroNuevo?: string | null;
      idLogTipoNavigation?: components['schemas']['LogTipos'];
      idTablaNavigation?: components['schemas']['Tablas'];
    };
    LogErrores: {
      /** Format: int32 */
      id?: number;
      detalle?: string | null;
      endpoint?: string | null;
      parametros?: string | null;
      /** Format: int32 */
      idUsuario?: number | null;
      /** Format: date-time */
      fechaHora?: string | null;
      /** Format: int32 */
      idLogTipo?: number | null;
      idLogTipoNavigation?: components['schemas']['LogTipos'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    LogInformaciones: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTabla?: number | null;
      /** Format: int32 */
      idEntidad?: number | null;
      /** Format: int32 */
      idUsuario?: number | null;
      /** Format: date-time */
      fechaHora?: string | null;
      mensaje?: string | null;
      /** Format: int32 */
      idLogTipo?: number | null;
      idLogTipoNavigation?: components['schemas']['LogTipos'];
      idTablaNavigation?: components['schemas']['Tablas'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    LogTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      logABMs?: components['schemas']['LogABMs'][] | null;
      logErrores?: components['schemas']['LogErrores'][] | null;
      logInformaciones?: components['schemas']['LogInformaciones'][] | null;
      logTurnos?: components['schemas']['LogTurnos'][] | null;
    };
    LogTurnos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTabla?: number | null;
      /** Format: int32 */
      idEntidad?: number | null;
      /** Format: int32 */
      idTurno?: number | null;
      /** Format: int32 */
      idUsuario?: number | null;
      /** Format: date-time */
      fechaHora?: string | null;
      /** Format: int32 */
      idLogTipo?: number | null;
      registroAnterior?: string | null;
      registroNuevo?: string | null;
      jsonRegistroAnterior?: string | null;
      jsonRegistroNuevo?: string | null;
      idLogTipoNavigation?: components['schemas']['LogTipos'];
      idTablaNavigation?: components['schemas']['Tablas'];
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    MailTemplates: {
      /** Format: int32 */
      id?: number;
      textoMail: string;
      /** Format: int32 */
      idMailTipo?: number;
      comunicacionesFila?: components['schemas']['ComunicacionesFila'][] | null;
      idMailTipoNavigation?: components['schemas']['MailTemplatesTipos'];
    };
    MailTemplatesTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      mailTemplates?: components['schemas']['MailTemplates'][] | null;
    };
    Medicos: {
      /** Format: int32 */
      id?: number;
      nombre: string;
      apellido: string;
      /** Format: int32 */
      idUsuario?: number | null;
      matriculaNacional?: string | null;
      matriculaProvincial?: string | null;
      /** Format: int32 */
      idPrefijo?: number | null;
      /** Format: int32 */
      idEspecialidad?: number;
      cuit?: string | null;
      medicoInterno?: boolean;
      /** Format: int32 */
      idGrupoMedico?: number | null;
      activo?: boolean;
      agendas?: components['schemas']['Agendas'][] | null;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      idEspecialidadNavigation?: components['schemas']['Especialidades'];
      idGrupoMedicoNavigation?: components['schemas']['GrupoMedicos'];
      idPrefijoNavigation?: components['schemas']['Prefijos'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
      informes?: components['schemas']['Informes'][] | null;
      restriccionReglas?: components['schemas']['RestriccionReglas'][] | null;
      turnosIdMedicoNavigation?: components['schemas']['Turnos'][] | null;
      turnosIdMedicoSolicitanteNavigation?: components['schemas']['Turnos'][] | null;
    };
    Modalidades: {
      /** Format: int32 */
      id?: number;
      abreviatura: string;
      descripcion: string;
      equipos?: components['schemas']['Equipos'][] | null;
      especialidades?: components['schemas']['Especialidades'][] | null;
      informeTipos?: components['schemas']['InformeTipos'][] | null;
    };
    Monedas: {
      /** Format: int32 */
      id?: number;
      simbolo: string;
      descripcion: string;
      /** Format: double */
      cotizacionActual?: number;
      afipwsId?: string | null;
      comprobantes?: components['schemas']['Comprobantes'][] | null;
    };
    MotivoRechazoPrestaciones: {
      /** Format: int32 */
      id?: number;
      'descripci\u00F3n': string;
      controlAnticipado?: boolean;
      controlCierreAgenda?: components['schemas']['ControlCierreAgenda'][] | null;
      controlOrdenes?: components['schemas']['ControlOrdenes'][] | null;
    };
    NomencladorTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      nomencladores?: components['schemas']['Nomencladores'][] | null;
    };
    Nomencladores: {
      /** Format: int64 */
      id?: number;
      codigoNomenclador: string;
      descripcion: string;
      /** Format: int32 */
      idEspecialidad?: number;
      liquidaEnMedico?: boolean;
      liquidaEnObraSocial?: boolean;
      nomenclado?: boolean;
      altaComplejidad?: boolean;
      esContenedor?: boolean;
      /** Format: int32 */
      idNomencladorTipo?: number;
      seIncluyeContratos?: boolean;
      controlManual?: boolean;
      consumeArticulos?: boolean;
      requiereOrden?: boolean;
      activo?: boolean;
      agendaNomencladores?: components['schemas']['AgendaNomencladores'][] | null;
      comprobanteDetalles?: components['schemas']['ComprobanteDetalles'][] | null;
      contratos?: components['schemas']['Contratos'][] | null;
      ctaCteNomencladores?: components['schemas']['CtaCteNomencladores'][] | null;
      depositos?: components['schemas']['Depositos'][] | null;
      idEspecialidadNavigation?: components['schemas']['Especialidades'];
      idNomencladorTipoNavigation?: components['schemas']['NomencladorTipos'];
      liquidacionNomencladoresIdNomencladorExcluyeNavigation?:
        | components['schemas']['LiquidacionNomencladores'][]
        | null;
      liquidacionNomencladoresIdNomencladorIncluyeNavigation?:
        | components['schemas']['LiquidacionNomencladores'][]
        | null;
      obraSocialDebitosDetalles?: components['schemas']['ObraSocialDebitosDetalles'][] | null;
      pacienteCtaCte?: components['schemas']['PacienteCtaCte'][] | null;
      prestacionNomencladores?: components['schemas']['PrestacionNomencladores'][] | null;
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
    };
    NotaTurnos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      descripcion: string;
      bloqueaTurno?: boolean;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: date-time */
      fecha?: string;
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    ObSocDebitosMotivos: {
      /** Format: int32 */
      id?: number;
      descripcion?: string | null;
      obraSocialDebitos?: components['schemas']['ObraSocialDebitos'][] | null;
    };
    ObSocValidadores: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObrasSocial?: number;
      /** Format: int32 */
      idValidador?: number;
      codigoFinanciador: string;
      idObrasSocialNavigation?: components['schemas']['ObraSociales'];
      idValidadorNavigation?: components['schemas']['Validadores'];
    };
    ObraSocialDebitos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocialFactura?: number | null;
      /** Format: int32 */
      idObraSocial?: number | null;
      /** Format: int32 */
      nroDebito?: number | null;
      /** Format: date-time */
      fechaRecepcion?: string | null;
      parcial?: boolean | null;
      /** Format: double */
      importeDebito?: number | null;
      aprobado?: boolean | null;
      rechazado?: boolean | null;
      /** Format: int32 */
      idObSocDebitosMotivo?: number | null;
      observaciones?: string | null;
      reFacturado?: boolean | null;
      idObSocDebitosMotivoNavigation?: components['schemas']['ObSocDebitosMotivos'];
      idObraSocialFacturaNavigation?: components['schemas']['ObraSocialFacturas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      obraSocialDebitosDetalles?: components['schemas']['ObraSocialDebitosDetalles'][] | null;
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
    };
    ObraSocialDebitosDetalles: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocialDebito?: number;
      /** Format: date-time */
      fecha?: string;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      idObraSocialLiquidacion?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: double */
      importe?: number;
      /** Format: date-time */
      fechaRefacturado?: string;
      /** Format: int32 */
      idUsuarioRefactura?: number;
      /** Format: int32 */
      idObraSocialLiquidacionRefact?: number;
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
      idObraSocialDebitoNavigation?: components['schemas']['ObraSocialDebitos'];
      idObraSocialLiquidacionNavigation?: components['schemas']['ObraSocialLiquidaciones'];
      idObraSocialLiquidacionRefactNavigation?: components['schemas']['ObraSocialLiquidaciones'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
      idUsuarioRefacturaNavigation?: components['schemas']['Usuarios'];
    };
    ObraSocialFactCircuitos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: date-time */
      fechaAlta?: string;
      ivaTurnosSeparado?: boolean;
      onlineSeparado?: boolean;
      separaVIdeoAtencion?: boolean;
      incluyeMesesAnteriores?: boolean;
      separaCentros?: boolean;
      obraSocialFactConfig?: components['schemas']['ObraSocialFactConfig'][] | null;
      obraSocialFactProcesadas?: components['schemas']['ObraSocialFactProcesadas'][] | null;
      obraSocialFacturas?: components['schemas']['ObraSocialFacturas'][] | null;
    };
    ObraSocialFactConfig: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idCircuitoFact?: number;
      /** Format: int32 */
      procesaDia?: number;
      /** Format: int32 */
      procesaHora?: number;
      /** Format: int32 */
      idUsuarioResponsable?: number | null;
      autorizaManual?: boolean;
      /** Format: int32 */
      nomencladorIncluye?: number | null;
      /** Format: int32 */
      nomencladorExcluye?: number | null;
      /** Format: int32 */
      idEmpresa?: number;
      idCircuitoFactNavigation?: components['schemas']['ObraSocialFactCircuitos'];
      idEmpresaNavigation?: components['schemas']['Empresas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idUsuarioResponsableNavigation?: components['schemas']['Usuarios'];
    };
    ObraSocialFactProcesadas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idObraSocialFacturas?: number;
      /** Format: int32 */
      idObraSocialFactCircuitos?: number;
      /** Format: date-time */
      fechaProcesado?: string;
      error?: boolean | null;
      errorText?: string | null;
      idObraSocialFactCircuitosNavigation?: components['schemas']['ObraSocialFactCircuitos'];
      idObraSocialFacturasNavigation?: components['schemas']['ObraSocialFacturas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
    };
    ObraSocialFacturas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idObraSocialFactCircuito?: number;
      /** Format: date-time */
      fechaAlta?: string;
      /** Format: int32 */
      idUsuarioResponsable?: number;
      /** Format: int32 */
      idComprobante?: number;
      /** Format: int32 */
      idTipoIva?: number;
      /** Format: int32 */
      idEmpresa?: number;
      /** Format: double */
      subtotal?: number;
      /** Format: double */
      total?: number;
      /** Format: double */
      ivaTotal?: number;
      /** Format: int32 */
      idCondicionDePago?: number;
      saldada?: boolean;
      anulada?: boolean;
      debitada?: boolean;
      aprobada?: boolean;
      automatica?: boolean;
      refacturada?: boolean;
      mailNotificacion?: string | null;
      idComprobanteNavigation?: components['schemas']['Comprobantes'];
      idCondicionDePagoNavigation?: components['schemas']['CondicionPagos'];
      idEmpresaNavigation?: components['schemas']['Empresas'];
      idObraSocialFactCircuitoNavigation?: components['schemas']['ObraSocialFactCircuitos'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idTipoIvaNavigation?: components['schemas']['IvaTipos'];
      idUsuarioResponsableNavigation?: components['schemas']['Usuarios'];
      obraSocialDebitos?: components['schemas']['ObraSocialDebitos'][] | null;
      obraSocialFactProcesadas?: components['schemas']['ObraSocialFactProcesadas'][] | null;
      turnoNomencladoresIdObraSocialFacturaNavigation?: components['schemas']['TurnoNomencladores'][] | null;
      turnoNomencladoresIdReObraSocialFacturaNavigation?: components['schemas']['TurnoNomencladores'][] | null;
    };
    ObraSocialGrupos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idObraSocial?: number;
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
    };
    ObraSocialLiqConfig: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idTipoIva?: number;
      /** Format: int32 */
      idControlTipo?: number;
      /** Format: int32 */
      idEmpresaOrigen?: number;
      /** Format: int32 */
      idEmpresaDestino?: number | null;
      ordenaPorFechaTurno?: boolean;
      ordenaPorMonto?: boolean;
      /** Format: int32 */
      diaDesde?: number;
      /** Format: int32 */
      diaHasta?: number | null;
      /** Format: int32 */
      procesaDia?: number | null;
      liquidaMesesAnteriores?: boolean;
      finDeMes?: boolean;
      mesAnterior?: boolean;
      /** Format: int32 */
      idUsuarioResponsable?: number | null;
      idControlTipoNavigation?: components['schemas']['ControlTipos'];
      idEmpresaDestinoNavigation?: components['schemas']['Empresas'];
      idEmpresaOrigenNavigation?: components['schemas']['Empresas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idTipoIvaNavigation?: components['schemas']['IvaTipos'];
      idUsuarioResponsableNavigation?: components['schemas']['Usuarios'];
      liquidacionNomencladores?: components['schemas']['LiquidacionNomencladores'][] | null;
    };
    ObraSocialLiqConfigManual: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idTipoIva?: number;
      /** Format: int32 */
      idControlTipo?: number;
      /** Format: int32 */
      idEmpresaOrigen?: number;
      /** Format: int32 */
      idEmpresaDestino?: number | null;
      ordenaPorFechaTurno?: boolean;
      ordenaPorMonto?: boolean;
      /** Format: date */
      diaDesde?: string;
      /** Format: date */
      diaHasta?: string | null;
      /** Format: int32 */
      procesaDia?: number | null;
      liquidaMesesAnteriores?: boolean;
      finDeMes?: boolean;
      mesAnterior?: boolean;
      /** Format: int32 */
      idUsuarioResponsable?: number | null;
      idControlTipoNavigation?: components['schemas']['ControlTipos'];
      idEmpresaDestinoNavigation?: components['schemas']['Empresas'];
      idEmpresaOrigenNavigation?: components['schemas']['Empresas'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idTipoIvaNavigation?: components['schemas']['IvaTipos'];
      idUsuarioResponsableNavigation?: components['schemas']['Usuarios'];
      liquidacionNomencladores?: components['schemas']['LiquidacionNomencladores'][] | null;
    };
    ObraSocialLiqProcDetalles: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocialLiqProcesada?: number;
      /** Format: int32 */
      idTurnoNomenclador?: number;
      /** Format: int32 */
      idTurno?: number;
      mensajeError: string;
      idObraSocialLiqProcesadaNavigation?: components['schemas']['ObraSocialLiqProcesadas'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idTurnoNomencladorNavigation?: components['schemas']['TurnoNomencladores'];
    };
    ObraSocialLiqProcesadas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idObraSocialLiquidacion?: number;
      /** Format: date-time */
      fechaProcesado?: string;
      error?: boolean;
      idObraSocialLiquidacionNavigation?: components['schemas']['ObraSocialLiquidaciones'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      obraSocialLiqProcDetalles?: components['schemas']['ObraSocialLiqProcDetalles'][] | null;
    };
    ObraSocialLiqResumen: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocialLiquidacion?: number;
      /** Format: int32 */
      idTurnoNomenclador?: number;
      nroAutorizacionManual?: string | null;
      nroAutorizacionOnline?: string | null;
      /** Format: int32 */
      cantidad?: number;
      /** Format: double */
      valor?: number;
      /** Format: double */
      coseguro?: number;
      codigoAuxiliar?: string | null;
      descripcionAuxiliar?: string | null;
      idObraSocialLiquidacionNavigation?: components['schemas']['ObraSocialLiquidaciones'];
      idTurnoNomencladorNavigation?: components['schemas']['TurnoNomencladores'];
    };
    ObraSocialLiquidaciones: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idUsuario?: number | null;
      /** Format: int32 */
      idPlan?: number;
      /** Format: date-time */
      fechaLiquIdacion?: string;
      /** Format: date-time */
      fechaDesde?: string;
      /** Format: date-time */
      fechaHasta?: string;
      /** Format: int32 */
      idIvaTipo?: number;
      /** Format: int32 */
      idEmpresa?: number;
      /** Format: int32 */
      nroFactura?: number | null;
      /** Format: date-time */
      fechaActivacion?: string;
      /** Format: double */
      valor?: number;
      automatica?: boolean;
      idEmpresaNavigation?: components['schemas']['Empresas'];
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPlanNavigation?: components['schemas']['Planes'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
      obraSocialDebitosDetallesIdObraSocialLiquidacionNavigation?:
        | components['schemas']['ObraSocialDebitosDetalles'][]
        | null;
      obraSocialDebitosDetallesIdObraSocialLiquidacionRefactNavigation?:
        | components['schemas']['ObraSocialDebitosDetalles'][]
        | null;
      obraSocialLiqProcesadas?: components['schemas']['ObraSocialLiqProcesadas'][] | null;
      obraSocialLiqResumen?: components['schemas']['ObraSocialLiqResumen'][] | null;
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
    };
    ObraSociales: {
      /** Format: int32 */
      id?: number;
      nombre: string;
      razonSocial: string;
      monoPlan?: boolean;
      domicilio?: string | null;
      telefono?: string | null;
      cuit: string;
      /** Format: int32 */
      idIvaTipo?: number;
      noFacturar?: boolean;
      activo?: boolean;
      bloqueoConsultas?: boolean;
      bloqueoPracticas?: boolean;
      elegibilIdadPaciente?: boolean;
      validacionOnline?: boolean;
      /** Format: int32 */
      idValidador?: number | null;
      mascaraAfiliado?: string | null;
      mascaraAutorizacion?: string | null;
      importeOrden?: boolean;
      abonaPaciente?: boolean;
      /** Format: int32 */
      idPrioridadGrupos?: number | null;
      observaciones?: string | null;
      /** Format: int32 */
      diasOrden?: number | null;
      /** Format: int32 */
      diaspago?: number | null;
      requiereFirmaOrden?: boolean;
      noVisibleRegistroWeb?: boolean;
      noMuestraInformesWeb?: boolean;
      aSuCargos?: components['schemas']['ASuCargos'][] | null;
      agendaOSNoAtendidas?: components['schemas']['AgendaOSNoAtendidas'][] | null;
      comprobantes?: components['schemas']['Comprobantes'][] | null;
      contratoFechaActs?: components['schemas']['ContratoFechaActs'][] | null;
      depositos?: components['schemas']['Depositos'][] | null;
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idPrioridadGruposNavigation?: components['schemas']['PrioridadGrupos'];
      idValidadorNavigation?: components['schemas']['Validadores'];
      obSocValidadores?: components['schemas']['ObSocValidadores'][] | null;
      obraSocialDebitos?: components['schemas']['ObraSocialDebitos'][] | null;
      obraSocialFactConfig?: components['schemas']['ObraSocialFactConfig'][] | null;
      obraSocialFactProcesadas?: components['schemas']['ObraSocialFactProcesadas'][] | null;
      obraSocialFacturas?: components['schemas']['ObraSocialFacturas'][] | null;
      obraSocialGrupos?: components['schemas']['ObraSocialGrupos'][] | null;
      obraSocialLiqConfig?: components['schemas']['ObraSocialLiqConfig'][] | null;
      obraSocialLiqConfigManual?: components['schemas']['ObraSocialLiqConfigManual'][] | null;
      obraSocialLiqProcesadas?: components['schemas']['ObraSocialLiqProcesadas'][] | null;
      obraSocialLiquidaciones?: components['schemas']['ObraSocialLiquidaciones'][] | null;
      obrasSocialesDocumentos?: components['schemas']['ObrasSocialesDocumentos'][] | null;
      pacientes?: components['schemas']['Pacientes'][] | null;
      planes?: components['schemas']['Planes'][] | null;
      restriccionReglas?: components['schemas']['RestriccionReglas'][] | null;
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    ObrasSocialesDocumentos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      bucketId: string;
      path: string;
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
    };
    PacienteCtaCte: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPaciente?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: int32 */
      idComprobante?: number | null;
      /** Format: double */
      importeDebe?: number;
      /** Format: double */
      importeHaber?: number | null;
      esParticular?: boolean;
      saldado?: boolean;
      ctaCteNomencladores?: components['schemas']['CtaCteNomencladores'][] | null;
      idComprobanteNavigation?: components['schemas']['Comprobantes'];
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    Pacientes: {
      /** Format: int32 */
      id?: number;
      nombre: string;
      apellido: string;
      /** Format: int32 */
      idDocumentoTipo?: number;
      documentoNumero: string;
      /** Format: date-time */
      fechaNacimiento?: string;
      telefono?: string | null;
      telefonoMovil?: string | null;
      email: string;
      /** Format: int32 */
      idPais?: number;
      /** Format: int32 */
      idLocalidad?: number | null;
      domicilio?: string | null;
      password: string;
      passwordReqCambio?: boolean;
      /** Format: int32 */
      passwordIntentos?: number | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      numeroAfiliado?: string | null;
      versionCredencial?: string | null;
      sexo: string;
      /** Format: int32 */
      idIvaTipo?: number | null;
      bloqueado?: boolean;
      conflictivo?: boolean;
      fotoPerfil?: string | null;
      googleId?: string | null;
      googleMail?: string | null;
      appleId?: string | null;
      appleMail?: string | null;
      facebookId?: string | null;
      facebookMail?: string | null;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      comunicacionesFila?: components['schemas']['ComunicacionesFila'][] | null;
      depositos?: components['schemas']['Depositos'][] | null;
      discapacidades?: components['schemas']['Discapacidades'][] | null;
      idDocumentoTipoNavigation?: components['schemas']['DocumentoTipos'];
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idLocalidadNavigation?: components['schemas']['Localidades'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPaisNavigation?: components['schemas']['Paises'];
      idPlanNavigation?: components['schemas']['Planes'];
      llamadosFila?: components['schemas']['LlamadosFila'][] | null;
      pacienteCtaCte?: components['schemas']['PacienteCtaCte'][] | null;
      parentescoPacientesIdPacienteDestinoNavigation?: components['schemas']['ParentescoPacientes'][] | null;
      parentescoPacientesIdPacienteNavigation?: components['schemas']['ParentescoPacientes'][] | null;
      telefonoAdicionales?: components['schemas']['TelefonoAdicionales'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    Paises: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      feriados?: components['schemas']['Feriados'][] | null;
      pacientes?: components['schemas']['Pacientes'][] | null;
      provincias?: components['schemas']['Provincias'][] | null;
    };
    ParentescoPacientes: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPaciente?: number;
      /** Format: int32 */
      idPacienteDestino?: number;
      /** Format: int32 */
      idParentesco?: number;
      permiteTomaTurnos?: boolean;
      permiteVerInformes?: boolean;
      idPacienteDestinoNavigation?: components['schemas']['Pacientes'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idParentescoNavigation?: components['schemas']['Parentescos'];
    };
    Parentescos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idParentescoOpuesto?: number | null;
      idParentescoOpuestoNavigation?: components['schemas']['Parentescos'];
      inverseIdParentescoOpuestoNavigation?: components['schemas']['Parentescos'][] | null;
      parentescoPacientes?: components['schemas']['ParentescoPacientes'][] | null;
    };
    Pisos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idCentro?: number;
      activo?: boolean;
      consultorios?: components['schemas']['Consultorios'][] | null;
      idCentroNavigation?: components['schemas']['Centros'];
    };
    Planes: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idObraSocial?: number;
      descripcion: string;
      masterPlan?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idIvaTipo?: number | null;
      /** Format: int32 */
      porcentagePlanMaestro?: number | null;
      aSuCargos?: components['schemas']['ASuCargos'][] | null;
      agendaOSNoAtendidas?: components['schemas']['AgendaOSNoAtendidas'][] | null;
      contratoFechaActs?: components['schemas']['ContratoFechaActs'][] | null;
      contratos?: components['schemas']['Contratos'][] | null;
      depositos?: components['schemas']['Depositos'][] | null;
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      obraSocialLiquidaciones?: components['schemas']['ObraSocialLiquidaciones'][] | null;
      pacientes?: components['schemas']['Pacientes'][] | null;
      restriccionReglas?: components['schemas']['RestriccionReglas'][] | null;
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    PoolDefiniciones: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPool?: number;
      /** Format: int32 */
      idInformeSubTipo?: number | null;
      /** Format: int32 */
      idAgenda?: number | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idInformeSubTipoNavigation?: components['schemas']['InformeSubTipos'];
      idPoolNavigation?: components['schemas']['Pools'];
    };
    PoolUsuarios: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPool?: number;
      /** Format: int32 */
      idUsuario?: number;
      idPoolNavigation?: components['schemas']['Pools'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    Pools: {
      /** Format: int32 */
      id?: number;
      mensaje: string;
      /** Format: int32 */
      idInformeTipo?: number;
      idInformeTipoNavigation?: components['schemas']['InformeTipos'];
      informes?: components['schemas']['Informes'][] | null;
      poolDefiniciones?: components['schemas']['PoolDefiniciones'][] | null;
      poolUsuarios?: components['schemas']['PoolUsuarios'][] | null;
    };
    Prefijos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      medicos?: components['schemas']['Medicos'][] | null;
    };
    PreparacionPrestaciones: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPrestacion?: number;
      /** Format: int32 */
      idPreparacion?: number;
      idPreparacionNavigation?: components['schemas']['Preparaciones'];
      idPrestacionNavigation?: components['schemas']['Prestaciones'];
    };
    Preparaciones: {
      /** Format: int32 */
      id?: number;
      sexo: string;
      /** Format: int32 */
      edadDesde?: number;
      /** Format: int32 */
      edadHasta?: number;
      texto: string;
      preparacionPrestaciones?: components['schemas']['PreparacionPrestaciones'][] | null;
    };
    PrestacionAgendas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPrestacion?: number;
      /** Format: int32 */
      idAgenda?: number;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idPrestacionNavigation?: components['schemas']['Prestaciones'];
    };
    PrestacionFrecuencias: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPrestacion?: number;
      /** Format: int32 */
      cantidad?: number | null;
      noAplicaALogica?: boolean;
      idPrestacionNavigation?: components['schemas']['Prestaciones'];
    };
    PrestacionNomencladores: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPrestacion?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: int32 */
      cantidad?: number;
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
      idPrestacionNavigation?: components['schemas']['Prestaciones'];
    };
    Prestaciones: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      sexo: string;
      /** Format: int32 */
      edadDesde?: number | null;
      /** Format: int32 */
      edadHasta?: number | null;
      esPractica?: boolean;
      conContraste?: boolean;
      requiereLado?: boolean;
      preparacion?: boolean;
      /** Format: double */
      valorInforme?: number | null;
      /** Format: int32 */
      prestInversaContraste?: number | null;
      /** Format: int32 */
      minutos?: number | null;
      /** Format: int32 */
      idGrupoPrestacion?: number | null;
      /** Format: int32 */
      idInformeTipo?: number | null;
      /** Format: int32 */
      idInformeSubTipo?: number | null;
      alias?: string | null;
      ofreceEnWeb?: boolean;
      activo?: boolean;
      /** Format: int32 */
      idEstudioTipos?: number;
      grupoPrePreguntas?: components['schemas']['GrupoPrePreguntas'][] | null;
      idEstudioTiposNavigation?: components['schemas']['EstudioTipos'];
      idGrupoPrestacionNavigation?: components['schemas']['GrupoPrestaciones'];
      idInformeSubTipoNavigation?: components['schemas']['InformeSubTipos'];
      idInformeTipoNavigation?: components['schemas']['InformeTipos'];
      preparacionPrestaciones?: components['schemas']['PreparacionPrestaciones'][] | null;
      prestacionAgendas?: components['schemas']['PrestacionAgendas'][] | null;
      prestacionFrecuencias?: components['schemas']['PrestacionFrecuencias'][] | null;
      prestacionNomencladores?: components['schemas']['PrestacionNomencladores'][] | null;
      restriccionReglas?: components['schemas']['RestriccionReglas'][] | null;
      turnoPrestaciones?: components['schemas']['TurnoPrestaciones'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    PrioridadGrupos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      obraSociales?: components['schemas']['ObraSociales'][] | null;
    };
    Provincias: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPais?: number;
      descripcion: string;
      codigo31662: string;
      idPaisNavigation?: components['schemas']['Paises'];
      localidades?: components['schemas']['Localidades'][] | null;
    };
    Recepciones: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idCentro?: number;
      ubicacion?: string | null;
      activo?: boolean;
      cajaDiarias?: components['schemas']['CajaDiarias'][] | null;
      consultorios?: components['schemas']['Consultorios'][] | null;
      idCentroNavigation?: components['schemas']['Centros'];
    };
    RestriccionCantidades: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idRestriccionRegla?: number;
      /** Format: int32 */
      mes?: number;
      /** Format: int32 */
      anio?: number;
      /** Format: int32 */
      semana?: number;
      /** Format: int32 */
      cantidad?: number;
      /** Format: int32 */
      turnosTotales?: number;
      idRestriccionReglaNavigation?: components['schemas']['RestriccionReglas'];
    };
    RestriccionReglas: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idMedico?: number | null;
      /** Format: int32 */
      idAgenda?: number | null;
      /** Format: int32 */
      idEspecialidad?: number | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number | null;
      /** Format: int32 */
      idCentro?: number | null;
      absoluto?: boolean;
      /** Format: int32 */
      cantidad?: number | null;
      /** Format: int32 */
      porcentaje?: number | null;
      /** Format: int32 */
      idPrestacion?: number | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idCentroNavigation?: components['schemas']['Centros'];
      idEspecialidadNavigation?: components['schemas']['Especialidades'];
      idMedicoNavigation?: components['schemas']['Medicos'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPlanNavigation?: components['schemas']['Planes'];
      idPrestacionNavigation?: components['schemas']['Prestaciones'];
      restriccionCantidades?: components['schemas']['RestriccionCantidades'][] | null;
    };
    Roles: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      usuarioRoles?: components['schemas']['UsuarioRoles'][] | null;
    };
    Tablas: {
      /** Format: int32 */
      id?: number;
      nombre: string;
      /** Format: int32 */
      ordenDelete?: number | null;
      logABMs?: components['schemas']['LogABMs'][] | null;
      logInformaciones?: components['schemas']['LogInformaciones'][] | null;
      logTurnos?: components['schemas']['LogTurnos'][] | null;
    };
    Tecnicos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      idAgenda?: number | null;
      prefijo?: string | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    TelefonoAdicionales: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idPaciente?: number;
      numero: string;
      relacionConPaciente: string;
      nombre: string;
      idPacienteNavigation?: components['schemas']['Pacientes'];
    };
    TurnoAReprogramar: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: date-time */
      fechaCancelacion?: string;
      /** Format: int32 */
      idAgendaOrigen?: number;
      /** Format: int32 */
      idAgendaDestino?: number | null;
      reprogramado?: boolean;
      idAgendaDestinoNavigation?: components['schemas']['Agendas'];
      idAgendaOrigenNavigation?: components['schemas']['Agendas'];
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    TurnoDocumentos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idDocumentoTurnoTipo?: number;
      bucketId: string;
      path: string;
      idDocumentoTurnoTipoNavigation?: components['schemas']['DocumentoTurnoTipos'];
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    TurnoEstadoTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      orden?: number;
      color: string;
      turnoEstados?: components['schemas']['TurnoEstados'][] | null;
    };
    TurnoEstados: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idTurnoEstadoTipos?: number;
      /** Format: int32 */
      idUsuarioAlta?: number;
      /** Format: date-time */
      fechaAlta?: string;
      /** Format: int32 */
      idCancelacionMotivos?: number | null;
      /** Format: int32 */
      idTurnoRelacionado?: number | null;
      /** Format: int32 */
      idBloqueoMotivo?: number | null;
      /** Format: int32 */
      idUsuarioBaja?: number | null;
      /** Format: date-time */
      fechaBaja?: string | null;
      idBloqueoMotivoNavigation?: components['schemas']['BloqueoMotivos'];
      idCancelacionMotivosNavigation?: components['schemas']['CancelacionMotivos'];
      idTurnoEstadoTiposNavigation?: components['schemas']['TurnoEstadoTipos'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idTurnoRelacionadoNavigation?: components['schemas']['Turnos'];
      idUsuarioAltaNavigation?: components['schemas']['Usuarios'];
      idUsuarioBajaNavigation?: components['schemas']['Usuarios'];
    };
    TurnoNomencladores: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int64 */
      idNomenclador?: number;
      /** Format: int32 */
      cantidad?: number;
      numeroAutorizacion?: string | null;
      /** Format: int32 */
      idObraSocial?: number;
      /** Format: int32 */
      idPlan?: number;
      /** Format: int32 */
      idTurnoPrestacionOrigen?: number | null;
      numeroAfiliado: string;
      noSeFactura?: boolean;
      /** Format: int32 */
      idValidacionEstados?: number | null;
      /** Format: int32 */
      idIvaTipo?: number | null;
      rechazoCierreAgenda?: boolean;
      controlado?: boolean;
      informado?: boolean;
      /** Format: int32 */
      idObraSocialLiquidacion?: number | null;
      /** Format: int32 */
      idObraSocialFactura?: number | null;
      /** Format: int32 */
      idObraSocialDebito?: number | null;
      /** Format: int32 */
      idReObraSocialFactura?: number | null;
      /** Format: int32 */
      idLiquidacionMed?: number | null;
      idIvaTipoNavigation?: components['schemas']['IvaTipos'];
      idNomencladorNavigation?: components['schemas']['Nomencladores'];
      idObraSocialDebitoNavigation?: components['schemas']['ObraSocialDebitos'];
      idObraSocialFacturaNavigation?: components['schemas']['ObraSocialFacturas'];
      idObraSocialLiquidacionNavigation?: components['schemas']['ObraSocialLiquidaciones'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPlanNavigation?: components['schemas']['Planes'];
      idReObraSocialFacturaNavigation?: components['schemas']['ObraSocialFacturas'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      idTurnoPrestacionOrigenNavigation?: components['schemas']['TurnoPrestaciones'];
      idValidacionEstadosNavigation?: components['schemas']['ValidacionEstados'];
      obraSocialLiqProcDetalles?: components['schemas']['ObraSocialLiqProcDetalles'][] | null;
      obraSocialLiqResumen?: components['schemas']['ObraSocialLiqResumen'][] | null;
      validaciones?: components['schemas']['Validaciones'][] | null;
    };
    TurnoPrestaciones: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idPrestacion?: number;
      lado?: string | null;
      /** Format: int32 */
      idInformeTipo?: number | null;
      /** Format: int32 */
      idInformeSubTipo?: number | null;
      informado?: boolean;
      /** Format: int32 */
      idEstudioTipos?: number;
      idEstudioTiposNavigation?: components['schemas']['EstudioTipos'];
      idInformeSubTipoNavigation?: components['schemas']['InformeSubTipos'];
      idInformeTipoNavigation?: components['schemas']['InformeTipos'];
      idPrestacionNavigation?: components['schemas']['Prestaciones'];
      idTurnoNavigation?: components['schemas']['Turnos'];
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
    };
    TurnoSinValidaciones: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: date-time */
      fechaBaja?: string;
      /** Format: int32 */
      intentos?: number;
      /** Format: date-time */
      fechaIntento?: string | null;
      numeroAutorizacion?: string | null;
      validado?: boolean;
      /** Format: date-time */
      fechaValidacion?: string | null;
      idTurnoNavigation?: components['schemas']['Turnos'];
    };
    TurnoTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      horarioDetalles?: components['schemas']['HorarioDetalles'][] | null;
      turnos?: components['schemas']['Turnos'][] | null;
    };
    Turnos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idAgenda?: number;
      /** Format: int32 */
      idMedico?: number | null;
      /** Format: int32 */
      idMedicoSolicitante?: number | null;
      /** Format: int32 */
      idEquipo?: number | null;
      /** Format: int32 */
      idEspecialidad?: number;
      /** Format: date */
      fechaTurno?: string;
      /** Format: time */
      horaTurno?: string;
      /** Format: date */
      fechaAsignacion?: string | null;
      /** Format: int32 */
      idPaciente?: number | null;
      /** Format: int32 */
      minutos?: number | null;
      /** Format: int32 */
      minutosDisponibles?: number | null;
      /** Format: int32 */
      idTurnoTipo?: number;
      sobreturnoManual?: boolean;
      sobreturnoAusentismo?: boolean;
      abonado?: boolean;
      informado?: boolean;
      urgente?: boolean;
      noOfrecerEnBusqueda?: boolean;
      evolucionado?: boolean;
      aSuCargos?: boolean;
      /** Format: int32 */
      idObraSocial?: number | null;
      /** Format: int32 */
      idPlan?: number | null;
      numeroAfiliado?: string | null;
      /** Format: int32 */
      idPrestacionOrigen?: number | null;
      /** Format: int32 */
      idCentro?: number;
      /** Format: int32 */
      idConsultorio?: number;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaFactuElectronica?: components['schemas']['CajaFactuElectronica'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      comentarios?: components['schemas']['Comentarios'][] | null;
      comunicacionesFila?: components['schemas']['ComunicacionesFila'][] | null;
      controlCierreAgenda?: components['schemas']['ControlCierreAgenda'][] | null;
      controlOrdenes?: components['schemas']['ControlOrdenes'][] | null;
      depositos?: components['schemas']['Depositos'][] | null;
      horarioCanceladoDetalles?: components['schemas']['HorarioCanceladoDetalles'][] | null;
      idAgendaNavigation?: components['schemas']['Agendas'];
      idCentroNavigation?: components['schemas']['Centros'];
      idConsultorioNavigation?: components['schemas']['Consultorios'];
      idEquipoNavigation?: components['schemas']['Equipos'];
      idEspecialidadNavigation?: components['schemas']['Especialidades'];
      idMedicoNavigation?: components['schemas']['Medicos'];
      idMedicoSolicitanteNavigation?: components['schemas']['Medicos'];
      idObraSocialNavigation?: components['schemas']['ObraSociales'];
      idPacienteNavigation?: components['schemas']['Pacientes'];
      idPlanNavigation?: components['schemas']['Planes'];
      idPrestacionOrigenNavigation?: components['schemas']['Prestaciones'];
      idTurnoTipoNavigation?: components['schemas']['TurnoTipos'];
      informes?: components['schemas']['Informes'][] | null;
      llamadosFila?: components['schemas']['LlamadosFila'][] | null;
      logTurnos?: components['schemas']['LogTurnos'][] | null;
      notaTurnos?: components['schemas']['NotaTurnos'][] | null;
      obraSocialDebitosDetalles?: components['schemas']['ObraSocialDebitosDetalles'][] | null;
      obraSocialLiqProcDetalles?: components['schemas']['ObraSocialLiqProcDetalles'][] | null;
      pacienteCtaCte?: components['schemas']['PacienteCtaCte'][] | null;
      turnoAReprogramar?: components['schemas']['TurnoAReprogramar'][] | null;
      turnoDocumentos?: components['schemas']['TurnoDocumentos'][] | null;
      turnoEstadosIdTurnoNavigation?: components['schemas']['TurnoEstados'][] | null;
      turnoEstadosIdTurnoRelacionadoNavigation?: components['schemas']['TurnoEstados'][] | null;
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
      turnoPrestaciones?: components['schemas']['TurnoPrestaciones'][] | null;
      turnoSinValidaciones?: components['schemas']['TurnoSinValidaciones'][] | null;
      validaciones?: components['schemas']['Validaciones'][] | null;
    };
    UsuarioRoles: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idUsuario?: number;
      /** Format: int32 */
      idRol?: number;
      idRolNavigation?: components['schemas']['Roles'];
      idUsuarioNavigation?: components['schemas']['Usuarios'];
    };
    Usuarios: {
      /** Format: int32 */
      id?: number;
      userName: string;
      nombre: string;
      apellido: string;
      password: string;
      refreshToken?: string | null;
      /** Format: date-time */
      refreshTokenExpirationDate?: string | null;
      documentoNumero: string;
      /** Format: date-time */
      fechaNacimiento?: string;
      telefono?: string | null;
      email: string;
      domicilio: string;
      activo?: boolean;
      cajaAperturaConfigsIdUsuarioConfigNavigation?: components['schemas']['CajaAperturaConfigs'][] | null;
      cajaAperturaConfigsIdUsuarioNavigation?: components['schemas']['CajaAperturaConfigs'][] | null;
      cajaAperturas?: components['schemas']['CajaAperturas'][] | null;
      cajaArqueos?: components['schemas']['CajaArqueos'][] | null;
      cajaDerechos?: components['schemas']['CajaDerechos'][] | null;
      cajaDiariaMovs?: components['schemas']['CajaDiariaMovs'][] | null;
      cajaDiarias?: components['schemas']['CajaDiarias'][] | null;
      cajaHistoricoMovs?: components['schemas']['CajaHistoricoMovs'][] | null;
      cajaUsuarios?: components['schemas']['CajaUsuarios'][] | null;
      comentarios?: components['schemas']['Comentarios'][] | null;
      controlCierreAgenda?: components['schemas']['ControlCierreAgenda'][] | null;
      controlOrdenesIdUsuarioApruebaNavigation?: components['schemas']['ControlOrdenes'][] | null;
      controlOrdenesIdUsuarioRechazoNavigation?: components['schemas']['ControlOrdenes'][] | null;
      depositosIdUsuarioAltaNavigation?: components['schemas']['Depositos'][] | null;
      depositosIdUsuarioAutorizacionNavigation?: components['schemas']['Depositos'][] | null;
      depositosIdUsuarioDevolucionNavigation?: components['schemas']['Depositos'][] | null;
      entradaSalidasIdUsuarioEgresoNavigation?: components['schemas']['EntradaSalidas'][] | null;
      entradaSalidasIdUsuarioIngresoNavigation?: components['schemas']['EntradaSalidas'][] | null;
      informeEstados?: components['schemas']['InformeEstados'][] | null;
      informeTemplates?: components['schemas']['InformeTemplates'][] | null;
      informes?: components['schemas']['Informes'][] | null;
      logErrores?: components['schemas']['LogErrores'][] | null;
      logInformaciones?: components['schemas']['LogInformaciones'][] | null;
      medicos?: components['schemas']['Medicos'][] | null;
      notaTurnos?: components['schemas']['NotaTurnos'][] | null;
      obraSocialDebitosDetallesIdUsuarioNavigation?: components['schemas']['ObraSocialDebitosDetalles'][] | null;
      obraSocialDebitosDetallesIdUsuarioRefacturaNavigation?:
        | components['schemas']['ObraSocialDebitosDetalles'][]
        | null;
      obraSocialFactConfig?: components['schemas']['ObraSocialFactConfig'][] | null;
      obraSocialFacturas?: components['schemas']['ObraSocialFacturas'][] | null;
      obraSocialLiqConfig?: components['schemas']['ObraSocialLiqConfig'][] | null;
      obraSocialLiqConfigManual?: components['schemas']['ObraSocialLiqConfigManual'][] | null;
      obraSocialLiquidaciones?: components['schemas']['ObraSocialLiquidaciones'][] | null;
      poolUsuarios?: components['schemas']['PoolUsuarios'][] | null;
      tecnicos?: components['schemas']['Tecnicos'][] | null;
      turnoEstadosIdUsuarioAltaNavigation?: components['schemas']['TurnoEstados'][] | null;
      turnoEstadosIdUsuarioBajaNavigation?: components['schemas']['TurnoEstados'][] | null;
      usuarioRoles?: components['schemas']['UsuarioRoles'][] | null;
    };
    ValidacionEstados: {
      /** Format: int32 */
      id?: number;
      codigo: string;
      descripcion: string;
      /** Format: int32 */
      idValidador?: number | null;
      idValidadorNavigation?: components['schemas']['Validadores'];
      turnoNomencladores?: components['schemas']['TurnoNomencladores'][] | null;
      validaciones?: components['schemas']['Validaciones'][] | null;
    };
    ValidacionTipos: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      validaciones?: components['schemas']['Validaciones'][] | null;
    };
    Validaciones: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idValidador?: number;
      /** Format: int32 */
      idTurno?: number;
      /** Format: int32 */
      idTurnoNomenclador?: number;
      /** Format: date-time */
      fechaValidacion?: string;
      /** Format: int32 */
      idValidacionEstado?: number;
      /** Format: int32 */
      idValidacionTipos?: number;
      codigoNomenclador?: string | null;
      nroReferencia?: string | null;
      nroReferenciaCancelado?: string | null;
      /** Format: int32 */
      numeroMensaje?: number | null;
      idTurnoNavigation?: components['schemas']['Turnos'];
      idTurnoNomencladorNavigation?: components['schemas']['TurnoNomencladores'];
      idValidacionEstadoNavigation?: components['schemas']['ValidacionEstados'];
      idValidacionTiposNavigation?: components['schemas']['ValidacionTipos'];
      idValidadorNavigation?: components['schemas']['Validadores'];
    };
    ValidadorCaidos: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      idValidador?: number;
      requiereAutorizacion?: boolean;
      numeroAutorizacion?: string | null;
      /** Format: date-time */
      fechaAlta?: string;
      /** Format: date */
      fechaBaja?: string | null;
      idValidadorNavigation?: components['schemas']['Validadores'];
    };
    Validadores: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      urlProductiva?: string | null;
      urlTesting?: string | null;
      obSocValidadores?: components['schemas']['ObSocValidadores'][] | null;
      obraSociales?: components['schemas']['ObraSociales'][] | null;
      validacionEstados?: components['schemas']['ValidacionEstados'][] | null;
      validaciones?: components['schemas']['Validaciones'][] | null;
      validadorCaidos?: components['schemas']['ValidadorCaidos'][] | null;
    };
    Vestidores: {
      /** Format: int32 */
      id?: number;
      descripcion: string;
      /** Format: int32 */
      idConsultorio?: number;
      idConsultorioNavigation?: components['schemas']['Consultorios'];
      llamadosFila?: components['schemas']['LlamadosFila'][] | null;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'Domain.Enums.TipoNomenclador': 1 | 2 | 3;
    'System.AggregateException': {
      targetSite?: components['schemas']['System.Reflection.MethodBase'];
      readonly data?: {
        [key: string]: unknown;
      } | null;
      innerException?: components['schemas']['System.Exception'];
      helpLink?: string | null;
      source?: string | null;
      /** Format: int32 */
      hResult?: number;
      readonly stackTrace?: string | null;
      readonly innerExceptions?: components['schemas']['System.Exception'][] | null;
      readonly message?: string | null;
    };
    'System.Collections.Generic.KeyValuePair`2[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]': {
      /** Format: int32 */
      key?: number;
      value?: boolean;
    };
    'System.Exception': {
      targetSite?: components['schemas']['System.Reflection.MethodBase'];
      readonly message?: string | null;
      readonly data?: {
        [key: string]: unknown;
      } | null;
      innerException?: components['schemas']['System.Exception'];
      helpLink?: string | null;
      source?: string | null;
      /** Format: int32 */
      hResult?: number;
      readonly stackTrace?: string | null;
    };
    'System.IntPtr': Record<string, never>;
    'System.ModuleHandle': {
      /** Format: int32 */
      readonly mdStreamVersion?: number;
    };
    'System.Reflection.Assembly': {
      readonly definedTypes?: components['schemas']['System.Reflection.TypeInfo'][] | null;
      readonly exportedTypes?: components['schemas']['System.Type'][] | null;
      /** @deprecated */
      readonly codeBase?: string | null;
      entryPoint?: components['schemas']['System.Reflection.MethodInfo'];
      readonly fullName?: string | null;
      readonly imageRuntimeVersion?: string | null;
      readonly isDynamic?: boolean;
      readonly location?: string | null;
      readonly reflectionOnly?: boolean;
      readonly isCollectible?: boolean;
      readonly isFullyTrusted?: boolean;
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      /** @deprecated */
      readonly escapedCodeBase?: string | null;
      manifestModule?: components['schemas']['System.Reflection.Module'];
      readonly modules?: components['schemas']['System.Reflection.Module'][] | null;
      /** @deprecated */
      readonly globalAssemblyCache?: boolean;
      /** Format: int64 */
      readonly hostContext?: number;
      securityRuleSet?: components['schemas']['System.Security.SecurityRuleSet'];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.CallingConventions': 1 | 2 | 3 | 32 | 64;
    'System.Reflection.ConstructorInfo': {
      readonly name?: string | null;
      declaringType?: components['schemas']['System.Type'];
      reflectedType?: components['schemas']['System.Type'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      attributes?: components['schemas']['System.Reflection.MethodAttributes'];
      methodImplementationFlags?: components['schemas']['System.Reflection.MethodImplAttributes'];
      callingConvention?: components['schemas']['System.Reflection.CallingConventions'];
      readonly isAbstract?: boolean;
      readonly isConstructor?: boolean;
      readonly isFinal?: boolean;
      readonly isHideBySig?: boolean;
      readonly isSpecialName?: boolean;
      readonly isStatic?: boolean;
      readonly isVirtual?: boolean;
      readonly isAssembly?: boolean;
      readonly isFamily?: boolean;
      readonly isFamilyAndAssembly?: boolean;
      readonly isFamilyOrAssembly?: boolean;
      readonly isPrivate?: boolean;
      readonly isPublic?: boolean;
      readonly isConstructedGenericMethod?: boolean;
      readonly isGenericMethod?: boolean;
      readonly isGenericMethodDefinition?: boolean;
      readonly containsGenericParameters?: boolean;
      methodHandle?: components['schemas']['System.RuntimeMethodHandle'];
      readonly isSecurityCritical?: boolean;
      readonly isSecuritySafeCritical?: boolean;
      readonly isSecurityTransparent?: boolean;
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
    };
    'System.Reflection.CustomAttributeData': {
      attributeType?: components['schemas']['System.Type'];
      constructor?: {
        readonly name?: string | null;
        declaringType?: components['schemas']['System.Type'];
        reflectedType?: components['schemas']['System.Type'];
        module?: components['schemas']['System.Reflection.Module'];
        readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
        readonly isCollectible?: boolean;
        /** Format: int32 */
        readonly metadataToken?: number;
        attributes?: components['schemas']['System.Reflection.MethodAttributes'];
        methodImplementationFlags?: components['schemas']['System.Reflection.MethodImplAttributes'];
        callingConvention?: components['schemas']['System.Reflection.CallingConventions'];
        readonly isAbstract?: boolean;
        readonly isConstructor?: boolean;
        readonly isFinal?: boolean;
        readonly isHideBySig?: boolean;
        readonly isSpecialName?: boolean;
        readonly isStatic?: boolean;
        readonly isVirtual?: boolean;
        readonly isAssembly?: boolean;
        readonly isFamily?: boolean;
        readonly isFamilyAndAssembly?: boolean;
        readonly isFamilyOrAssembly?: boolean;
        readonly isPrivate?: boolean;
        readonly isPublic?: boolean;
        readonly isConstructedGenericMethod?: boolean;
        readonly isGenericMethod?: boolean;
        readonly isGenericMethodDefinition?: boolean;
        readonly containsGenericParameters?: boolean;
        methodHandle?: components['schemas']['System.RuntimeMethodHandle'];
        readonly isSecurityCritical?: boolean;
        readonly isSecuritySafeCritical?: boolean;
        readonly isSecurityTransparent?: boolean;
        memberType?: components['schemas']['System.Reflection.MemberTypes'];
      };
      readonly constructorArguments?: components['schemas']['System.Reflection.CustomAttributeTypedArgument'][] | null;
      readonly namedArguments?: components['schemas']['System.Reflection.CustomAttributeNamedArgument'][] | null;
    };
    'System.Reflection.CustomAttributeNamedArgument': {
      memberInfo?: components['schemas']['System.Reflection.MemberInfo'];
      typedValue?: components['schemas']['System.Reflection.CustomAttributeTypedArgument'];
      readonly memberName?: string | null;
      readonly isField?: boolean;
    };
    'System.Reflection.CustomAttributeTypedArgument': {
      argumentType?: components['schemas']['System.Type'];
      value?: unknown;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.EventAttributes': 0 | 512 | 1024;
    'System.Reflection.EventInfo': {
      readonly name?: string | null;
      declaringType?: components['schemas']['System.Type'];
      reflectedType?: components['schemas']['System.Type'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      attributes?: components['schemas']['System.Reflection.EventAttributes'];
      readonly isSpecialName?: boolean;
      addMethod?: components['schemas']['System.Reflection.MethodInfo'];
      removeMethod?: components['schemas']['System.Reflection.MethodInfo'];
      raiseMethod?: components['schemas']['System.Reflection.MethodInfo'];
      readonly isMulticast?: boolean;
      eventHandlerType?: components['schemas']['System.Type'];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.FieldAttributes':
      | 0
      | 1
      | 2
      | 3
      | 4
      | 5
      | 6
      | 7
      | 16
      | 32
      | 64
      | 128
      | 256
      | 512
      | 1024
      | 4096
      | 8192
      | 32768
      | 38144;
    'System.Reflection.FieldInfo': {
      readonly name?: string | null;
      declaringType?: components['schemas']['System.Type'];
      reflectedType?: components['schemas']['System.Type'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      attributes?: components['schemas']['System.Reflection.FieldAttributes'];
      fieldType?: components['schemas']['System.Type'];
      readonly isInitOnly?: boolean;
      readonly isLiteral?: boolean;
      /** @deprecated */
      readonly isNotSerialized?: boolean;
      readonly isPinvokeImpl?: boolean;
      readonly isSpecialName?: boolean;
      readonly isStatic?: boolean;
      readonly isAssembly?: boolean;
      readonly isFamily?: boolean;
      readonly isFamilyAndAssembly?: boolean;
      readonly isFamilyOrAssembly?: boolean;
      readonly isPrivate?: boolean;
      readonly isPublic?: boolean;
      readonly isSecurityCritical?: boolean;
      readonly isSecuritySafeCritical?: boolean;
      readonly isSecurityTransparent?: boolean;
      fieldHandle?: components['schemas']['System.RuntimeFieldHandle'];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.GenericParameterAttributes': 0 | 1 | 2 | 3 | 4 | 8 | 16 | 28;
    'System.Reflection.ICustomAttributeProvider': Record<string, never>;
    'System.Reflection.MemberInfo': {
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      readonly name?: string | null;
      declaringType?: components['schemas']['System.Type'];
      reflectedType?: components['schemas']['System.Type'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.MemberTypes': 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128 | 191;
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.MethodAttributes':
      | 0
      | 1
      | 2
      | 3
      | 4
      | 5
      | 6
      | 7
      | 8
      | 16
      | 32
      | 64
      | 128
      | 256
      | 512
      | 1024
      | 2048
      | 4096
      | 8192
      | 16384
      | 32768
      | 53248;
    'System.Reflection.MethodBase': {
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      readonly name?: string | null;
      declaringType?: components['schemas']['System.Type'];
      reflectedType?: components['schemas']['System.Type'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      attributes?: components['schemas']['System.Reflection.MethodAttributes'];
      methodImplementationFlags?: components['schemas']['System.Reflection.MethodImplAttributes'];
      callingConvention?: components['schemas']['System.Reflection.CallingConventions'];
      readonly isAbstract?: boolean;
      readonly isConstructor?: boolean;
      readonly isFinal?: boolean;
      readonly isHideBySig?: boolean;
      readonly isSpecialName?: boolean;
      readonly isStatic?: boolean;
      readonly isVirtual?: boolean;
      readonly isAssembly?: boolean;
      readonly isFamily?: boolean;
      readonly isFamilyAndAssembly?: boolean;
      readonly isFamilyOrAssembly?: boolean;
      readonly isPrivate?: boolean;
      readonly isPublic?: boolean;
      readonly isConstructedGenericMethod?: boolean;
      readonly isGenericMethod?: boolean;
      readonly isGenericMethodDefinition?: boolean;
      readonly containsGenericParameters?: boolean;
      methodHandle?: components['schemas']['System.RuntimeMethodHandle'];
      readonly isSecurityCritical?: boolean;
      readonly isSecuritySafeCritical?: boolean;
      readonly isSecurityTransparent?: boolean;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.MethodImplAttributes': 0 | 1 | 2 | 3 | 4 | 8 | 16 | 32 | 64 | 128 | 256 | 512 | 4096 | 65535;
    'System.Reflection.MethodInfo': {
      readonly name?: string | null;
      declaringType?: components['schemas']['System.Type'];
      reflectedType?: components['schemas']['System.Type'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      attributes?: components['schemas']['System.Reflection.MethodAttributes'];
      methodImplementationFlags?: components['schemas']['System.Reflection.MethodImplAttributes'];
      callingConvention?: components['schemas']['System.Reflection.CallingConventions'];
      readonly isAbstract?: boolean;
      readonly isConstructor?: boolean;
      readonly isFinal?: boolean;
      readonly isHideBySig?: boolean;
      readonly isSpecialName?: boolean;
      readonly isStatic?: boolean;
      readonly isVirtual?: boolean;
      readonly isAssembly?: boolean;
      readonly isFamily?: boolean;
      readonly isFamilyAndAssembly?: boolean;
      readonly isFamilyOrAssembly?: boolean;
      readonly isPrivate?: boolean;
      readonly isPublic?: boolean;
      readonly isConstructedGenericMethod?: boolean;
      readonly isGenericMethod?: boolean;
      readonly isGenericMethodDefinition?: boolean;
      readonly containsGenericParameters?: boolean;
      methodHandle?: components['schemas']['System.RuntimeMethodHandle'];
      readonly isSecurityCritical?: boolean;
      readonly isSecuritySafeCritical?: boolean;
      readonly isSecurityTransparent?: boolean;
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      returnParameter?: components['schemas']['System.Reflection.ParameterInfo'];
      returnType?: components['schemas']['System.Type'];
      returnTypeCustomAttributes?: components['schemas']['System.Reflection.ICustomAttributeProvider'];
    };
    'System.Reflection.Module': {
      assembly?: components['schemas']['System.Reflection.Assembly'];
      readonly fullyQualifiedName?: string | null;
      readonly name?: string | null;
      /** Format: int32 */
      readonly mdStreamVersion?: number;
      /** Format: uuid */
      readonly moduleVersionId?: string;
      readonly scopeName?: string | null;
      moduleHandle?: components['schemas']['System.ModuleHandle'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      /** Format: int32 */
      readonly metadataToken?: number;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.ParameterAttributes': 0 | 1 | 2 | 4 | 8 | 16 | 4096 | 8192 | 16384 | 32768 | 61440;
    'System.Reflection.ParameterInfo': {
      attributes?: components['schemas']['System.Reflection.ParameterAttributes'];
      member?: components['schemas']['System.Reflection.MemberInfo'];
      readonly name?: string | null;
      parameterType?: components['schemas']['System.Type'];
      /** Format: int32 */
      readonly position?: number;
      readonly isIn?: boolean;
      readonly isLcid?: boolean;
      readonly isOptional?: boolean;
      readonly isOut?: boolean;
      readonly isRetval?: boolean;
      readonly defaultValue?: unknown;
      readonly rawDefaultValue?: unknown;
      readonly hasDefaultValue?: boolean;
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      /** Format: int32 */
      readonly metadataToken?: number;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.PropertyAttributes': 0 | 512 | 1024 | 4096 | 8192 | 16384 | 32768 | 62464;
    'System.Reflection.PropertyInfo': {
      readonly name?: string | null;
      declaringType?: components['schemas']['System.Type'];
      reflectedType?: components['schemas']['System.Type'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      propertyType?: components['schemas']['System.Type'];
      attributes?: components['schemas']['System.Reflection.PropertyAttributes'];
      readonly isSpecialName?: boolean;
      readonly canRead?: boolean;
      readonly canWrite?: boolean;
      getMethod?: components['schemas']['System.Reflection.MethodInfo'];
      setMethod?: components['schemas']['System.Reflection.MethodInfo'];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Reflection.TypeAttributes':
      | 0
      | 1
      | 2
      | 3
      | 4
      | 5
      | 6
      | 7
      | 8
      | 16
      | 24
      | 32
      | 128
      | 256
      | 1024
      | 2048
      | 4096
      | 8192
      | 16384
      | 65536
      | 131072
      | 196608
      | 262144
      | 264192
      | 1048576
      | 12582912;
    'System.Reflection.TypeInfo': {
      readonly name?: string | null;
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      readonly isInterface?: boolean;
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      readonly namespace?: string | null;
      readonly assemblyQualifiedName?: string | null;
      readonly fullName?: string | null;
      assembly?: components['schemas']['System.Reflection.Assembly'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly isNested?: boolean;
      declaringType?: components['schemas']['System.Type'];
      declaringMethod?: components['schemas']['System.Reflection.MethodBase'];
      reflectedType?: components['schemas']['System.Type'];
      underlyingSystemType?: components['schemas']['System.Type'];
      readonly isTypeDefinition?: boolean;
      readonly isArray?: boolean;
      readonly isByRef?: boolean;
      readonly isPointer?: boolean;
      readonly isConstructedGenericType?: boolean;
      readonly isGenericParameter?: boolean;
      readonly isGenericTypeParameter?: boolean;
      readonly isGenericMethodParameter?: boolean;
      readonly isGenericType?: boolean;
      readonly isGenericTypeDefinition?: boolean;
      readonly isSZArray?: boolean;
      readonly isVariableBoundArray?: boolean;
      readonly isByRefLike?: boolean;
      readonly isFunctionPointer?: boolean;
      readonly isUnmanagedFunctionPointer?: boolean;
      readonly hasElementType?: boolean;
      readonly genericTypeArguments?: components['schemas']['System.Type'][] | null;
      /** Format: int32 */
      readonly genericParameterPosition?: number;
      genericParameterAttributes?: components['schemas']['System.Reflection.GenericParameterAttributes'];
      attributes?: components['schemas']['System.Reflection.TypeAttributes'];
      readonly isAbstract?: boolean;
      readonly isImport?: boolean;
      readonly isSealed?: boolean;
      readonly isSpecialName?: boolean;
      readonly isClass?: boolean;
      readonly isNestedAssembly?: boolean;
      readonly isNestedFamANDAssem?: boolean;
      readonly isNestedFamily?: boolean;
      readonly isNestedFamORAssem?: boolean;
      readonly isNestedPrivate?: boolean;
      readonly isNestedPublic?: boolean;
      readonly isNotPublic?: boolean;
      readonly isPublic?: boolean;
      readonly isAutoLayout?: boolean;
      readonly isExplicitLayout?: boolean;
      readonly isLayoutSequential?: boolean;
      readonly isAnsiClass?: boolean;
      readonly isAutoClass?: boolean;
      readonly isUnicodeClass?: boolean;
      readonly isCOMObject?: boolean;
      readonly isContextful?: boolean;
      readonly isEnum?: boolean;
      readonly isMarshalByRef?: boolean;
      readonly isPrimitive?: boolean;
      readonly isValueType?: boolean;
      readonly isSignatureType?: boolean;
      readonly isSecurityCritical?: boolean;
      readonly isSecuritySafeCritical?: boolean;
      readonly isSecurityTransparent?: boolean;
      structLayoutAttribute?: components['schemas']['System.Runtime.InteropServices.StructLayoutAttribute'];
      typeInitializer?: components['schemas']['System.Reflection.ConstructorInfo'];
      typeHandle?: components['schemas']['System.RuntimeTypeHandle'];
      /** Format: uuid */
      readonly guid?: string;
      baseType?: components['schemas']['System.Type'];
      /** @deprecated */
      readonly isSerializable?: boolean;
      readonly containsGenericParameters?: boolean;
      readonly isVisible?: boolean;
      readonly genericTypeParameters?: components['schemas']['System.Type'][] | null;
      readonly declaredConstructors?: components['schemas']['System.Reflection.ConstructorInfo'][] | null;
      readonly declaredEvents?: components['schemas']['System.Reflection.EventInfo'][] | null;
      readonly declaredFields?: components['schemas']['System.Reflection.FieldInfo'][] | null;
      readonly declaredMembers?: components['schemas']['System.Reflection.MemberInfo'][] | null;
      readonly declaredMethods?: components['schemas']['System.Reflection.MethodInfo'][] | null;
      readonly declaredNestedTypes?: components['schemas']['System.Reflection.TypeInfo'][] | null;
      readonly declaredProperties?: components['schemas']['System.Reflection.PropertyInfo'][] | null;
      readonly implementedInterfaces?: components['schemas']['System.Type'][] | null;
    };
    'System.Runtime.CompilerServices.AsyncTaskMethodBuilder': {
      task?: components['schemas']['System.Threading.Tasks.Task'];
    };
    'System.Runtime.CompilerServices.AsyncVoidMethodBuilder': Record<string, never>;
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Runtime.InteropServices.LayoutKind': 0 | 2 | 3;
    'System.Runtime.InteropServices.StructLayoutAttribute': {
      readonly typeId?: unknown;
      value?: components['schemas']['System.Runtime.InteropServices.LayoutKind'];
    };
    'System.RuntimeFieldHandle': {
      value?: components['schemas']['System.IntPtr'];
    };
    'System.RuntimeMethodHandle': {
      value?: components['schemas']['System.IntPtr'];
    };
    'System.RuntimeTypeHandle': {
      value?: components['schemas']['System.IntPtr'];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Security.SecurityRuleSet': 0 | 1 | 2;
    'System.Threading.Tasks.Task': {
      /** Format: int32 */
      readonly id?: number;
      exception?: components['schemas']['System.AggregateException'];
      status?: components['schemas']['System.Threading.Tasks.TaskStatus'];
      readonly isCanceled?: boolean;
      readonly isCompleted?: boolean;
      readonly isCompletedSuccessfully?: boolean;
      creationOptions?: components['schemas']['System.Threading.Tasks.TaskCreationOptions'];
      readonly asyncState?: unknown;
      readonly isFaulted?: boolean;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Threading.Tasks.TaskCreationOptions': 0 | 1 | 2 | 4 | 8 | 16 | 64;
    /**
     * Format: int32
     * @enum {integer}
     */
    'System.Threading.Tasks.TaskStatus': 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
    'System.Type': {
      readonly name?: string | null;
      readonly customAttributes?: components['schemas']['System.Reflection.CustomAttributeData'][] | null;
      readonly isCollectible?: boolean;
      /** Format: int32 */
      readonly metadataToken?: number;
      readonly isInterface?: boolean;
      memberType?: components['schemas']['System.Reflection.MemberTypes'];
      readonly namespace?: string | null;
      readonly assemblyQualifiedName?: string | null;
      readonly fullName?: string | null;
      assembly?: components['schemas']['System.Reflection.Assembly'];
      module?: components['schemas']['System.Reflection.Module'];
      readonly isNested?: boolean;
      declaringType?: components['schemas']['System.Type'];
      declaringMethod?: components['schemas']['System.Reflection.MethodBase'];
      reflectedType?: components['schemas']['System.Type'];
      underlyingSystemType?: components['schemas']['System.Type'];
      readonly isTypeDefinition?: boolean;
      readonly isArray?: boolean;
      readonly isByRef?: boolean;
      readonly isPointer?: boolean;
      readonly isConstructedGenericType?: boolean;
      readonly isGenericParameter?: boolean;
      readonly isGenericTypeParameter?: boolean;
      readonly isGenericMethodParameter?: boolean;
      readonly isGenericType?: boolean;
      readonly isGenericTypeDefinition?: boolean;
      readonly isSZArray?: boolean;
      readonly isVariableBoundArray?: boolean;
      readonly isByRefLike?: boolean;
      readonly isFunctionPointer?: boolean;
      readonly isUnmanagedFunctionPointer?: boolean;
      readonly hasElementType?: boolean;
      readonly genericTypeArguments?: components['schemas']['System.Type'][] | null;
      /** Format: int32 */
      readonly genericParameterPosition?: number;
      genericParameterAttributes?: components['schemas']['System.Reflection.GenericParameterAttributes'];
      attributes?: components['schemas']['System.Reflection.TypeAttributes'];
      readonly isAbstract?: boolean;
      readonly isImport?: boolean;
      readonly isSealed?: boolean;
      readonly isSpecialName?: boolean;
      readonly isClass?: boolean;
      readonly isNestedAssembly?: boolean;
      readonly isNestedFamANDAssem?: boolean;
      readonly isNestedFamily?: boolean;
      readonly isNestedFamORAssem?: boolean;
      readonly isNestedPrivate?: boolean;
      readonly isNestedPublic?: boolean;
      readonly isNotPublic?: boolean;
      readonly isPublic?: boolean;
      readonly isAutoLayout?: boolean;
      readonly isExplicitLayout?: boolean;
      readonly isLayoutSequential?: boolean;
      readonly isAnsiClass?: boolean;
      readonly isAutoClass?: boolean;
      readonly isUnicodeClass?: boolean;
      readonly isCOMObject?: boolean;
      readonly isContextful?: boolean;
      readonly isEnum?: boolean;
      readonly isMarshalByRef?: boolean;
      readonly isPrimitive?: boolean;
      readonly isValueType?: boolean;
      readonly isSignatureType?: boolean;
      readonly isSecurityCritical?: boolean;
      readonly isSecuritySafeCritical?: boolean;
      readonly isSecurityTransparent?: boolean;
      structLayoutAttribute?: components['schemas']['System.Runtime.InteropServices.StructLayoutAttribute'];
      typeInitializer?: components['schemas']['System.Reflection.ConstructorInfo'];
      typeHandle?: components['schemas']['System.RuntimeTypeHandle'];
      /** Format: uuid */
      readonly guid?: string;
      baseType?: components['schemas']['System.Type'];
      /** @deprecated */
      readonly isSerializable?: boolean;
      readonly containsGenericParameters?: boolean;
      readonly isVisible?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type ASuCargoASuCargoRequestDto = components['schemas']['ASuCargo.ASuCargoRequestDTO'];
export type AgendaAgendaRequestDto = components['schemas']['Agenda.AgendaRequestDTO'];
export type AgendaAgendaResponseDto = components['schemas']['Agenda.AgendaResponseDTO'];
export type AgendaAnalisisCierreAgendaAnalisisCierreAgendaRequestDto =
  components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaRequestDTO'];
export type AgendaAnalisisCierreAgendaAnalisisCierreAgendaResponseDto =
  components['schemas']['Agenda.AnalisisCierreAgenda.AnalisisCierreAgendaResponseDTO'];
export type AgendaAnalisisCierreAgendaDtoAuxiliaresAnalisisCierreAgendaPacienteDto =
  components['schemas']['Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaPacienteDTO'];
export type AgendaAnalisisCierreAgendaDtoAuxiliaresAnalisisCierreAgendaTurnoDto =
  components['schemas']['Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaTurnoDTO'];
export type AgendaAnalisisCierreAgendaDtoAuxiliaresAnalisisCierreAgendaTurnoNomencladoresDto =
  components['schemas']['Agenda.AnalisisCierreAgenda.DTOAuxiliares.AnalisisCierreAgendaTurnoNomencladoresDTO'];
export type AgendaAperturaDeAgendaAperturaDeAgendaRequestDto =
  components['schemas']['Agenda.AperturaDeAgenda.AperturaDeAgendaRequestDTO'];
export type AgendaCierreAgendaCierreAgendaRequestDto =
  components['schemas']['Agenda.CierreAgenda.CierreAgendaRequestDTO'];
export type AgendaListAgendasActivasDtoAuxiliaresListAgendasActivasEntradaSalidasDto =
  components['schemas']['Agenda.ListAgendasActivas.DTOAuxiliares.ListAgendasActivasEntradaSalidasDTO'];
export type AgendaListAgendasActivasDtoAuxiliaresListAgendasActivasHorariosDetallesDto =
  components['schemas']['Agenda.ListAgendasActivas.DTOAuxiliares.ListAgendasActivasHorariosDetallesDTO'];
export type AgendaListAgendasActivasListAgendasActivasResponseDto =
  components['schemas']['Agenda.ListAgendasActivas.ListAgendasActivasResponseDTO'];
export type AgendaListFechasConTurnosListFechasConTurnosResponseDto =
  components['schemas']['Agenda.ListFechasConTurnos.ListFechasConTurnosResponseDTO'];
export type AgendaListVistaAgendaListVistaAgendaResponseDto =
  components['schemas']['Agenda.ListVistaAgenda.ListVistaAgendaResponseDTO'];
export type AgendaListVistaAgendaDiaDtoAuxiliaresListVistaAgendaDiaEntradaSalidasDto =
  components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaEntradaSalidasDTO'];
export type AgendaListVistaAgendaDiaDtoAuxiliaresListVistaAgendaDiaHorariosDetallesDto =
  components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaHorariosDetallesDTO'];
export type AgendaListVistaAgendaDiaDtoAuxiliaresListVistaAgendaDiaNotaTurnosResponseDto =
  components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaNotaTurnosResponseDTO'];
export type AgendaListVistaAgendaDiaDtoAuxiliaresListVistaAgendaDiaTurnosResponseDto =
  components['schemas']['Agenda.ListVistaAgendaDia.DTOAuxiliares.ListVistaAgendaDiaTurnosResponseDTO'];
export type AgendaListVistaAgendaDiaListVistaAgendaDiaResponseDto =
  components['schemas']['Agenda.ListVistaAgendaDia.ListVistaAgendaDiaResponseDTO'];
export type AgendaModalInfoTurnoAgendaDtoAuxiliaresModalInfoTurnoAgendaTurnoDelDiaDto =
  components['schemas']['Agenda.ModalInfoTurnoAgenda.DTOAuxiliares.ModalInfoTurnoAgendaTurnoDelDiaDTO'];
export type AgendaModalInfoTurnoAgendaDtoAuxiliaresModalInfoTurnoAgendaTurnoPrestacionesDto =
  components['schemas']['Agenda.ModalInfoTurnoAgenda.DTOAuxiliares.ModalInfoTurnoAgendaTurnoPrestacionesDTO'];
export type AgendaModalInfoTurnoAgendaModalInfoTurnoAgendaResponseDto =
  components['schemas']['Agenda.ModalInfoTurnoAgenda.ModalInfoTurnoAgendaResponseDTO'];
export type AgendaModificarAperturaDeAgendaModificarAperturaDeAgendaRequestDto =
  components['schemas']['Agenda.ModificarAperturaDeAgenda.ModificarAperturaDeAgendaRequestDTO'];
export type AgendaNomencladorAgendaNomencladorRequestDto =
  components['schemas']['AgendaNomenclador.AgendaNomencladorRequestDTO'];
export type AgendaOsNoAtendidaAgendaOsNoAtendidaRequestDto =
  components['schemas']['AgendaOSNoAtendida.AgendaOSNoAtendidaRequestDTO'];
export type AgendaTipoAgendaTipoRequestDto = components['schemas']['AgendaTipo.AgendaTipoRequestDTO'];
export type AgendaTipoAgendaTipoResponseDto = components['schemas']['AgendaTipo.AgendaTipoResponseDTO'];
export type AreaLoginAreaLoginRequestDto = components['schemas']['AreaLogin.AreaLoginRequestDTO'];
export type AreaLoginListVistaAreaLoginListVistaAreaLoginResponseDto =
  components['schemas']['AreaLogin.ListVistaAreaLogin.ListVistaAreaLoginResponseDTO'];
export type AtencionTipoAtencionTipoRequestDto = components['schemas']['AtencionTipo.AtencionTipoRequestDTO'];
export type AtencionTipoAtencionTipoResponseDto = components['schemas']['AtencionTipo.AtencionTipoResponseDTO'];
export type BloqueoMotivoBloqueoMotivosRequestDto = components['schemas']['BloqueoMotivo.BloqueoMotivosRequestDTO'];
export type CajaAperturaConfigCajaAperturaConfigsRequestDto =
  components['schemas']['CajaAperturaConfig.CajaAperturaConfigsRequestDTO'];
export type CajaBancoCajaBancosRequestDto = components['schemas']['CajaBanco.CajaBancosRequestDTO'];
export type CajaCuotaCajaCuotasRequestDto = components['schemas']['CajaCuota.CajaCuotasRequestDTO'];
export type CajaDerechoCajaDerechosRequestDto = components['schemas']['CajaDerecho.CajaDerechosRequestDTO'];
export type CajaDiariaCajaDiariasRequestDto = components['schemas']['CajaDiaria.CajaDiariasRequestDTO'];
export type CajaDiariasPrefijoCajaDiariasPrefijosRequestDto =
  components['schemas']['CajaDiariasPrefijo.CajaDiariasPrefijosRequestDTO'];
export type CajaMaestraCajaMaestrasRequestDto = components['schemas']['CajaMaestra.CajaMaestrasRequestDTO'];
export type CajaMedioPagoCajaMediosPagoRequestDto = components['schemas']['CajaMedioPago.CajaMediosPagoRequestDTO'];
export type CajaMovTipoCajaMovTiposRequestDto = components['schemas']['CajaMovTipo.CajaMovTiposRequestDTO'];
export type CajaUsuarioCajaUsuariosRequestDto = components['schemas']['CajaUsuario.CajaUsuariosRequestDTO'];
export type CajasConfiguracionCajaConfiguracionRequestDto =
  components['schemas']['CajasConfiguracion.CajaConfiguracionRequestDTO'];
export type CancelacionMotivoCancelacionMotivosRequestDto =
  components['schemas']['CancelacionMotivo.CancelacionMotivosRequestDTO'];
export type CancelacionMotivoListVistaCancelacionMotivoListVistaCancelacionMotivoResponseDto =
  components['schemas']['CancelacionMotivo.ListVistaCancelacionMotivo.ListVistaCancelacionMotivoResponseDTO'];
export type CentroCentroRequestDto = components['schemas']['Centro.CentroRequestDTO'];
export type CentroCentroResponseDto = components['schemas']['Centro.CentroResponseDTO'];
export type CentroListVistaEstructuraCentroListVistaEstructuraCentroResponseDto =
  components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO'];
export type CentroListVistaEstructuraCentroListVistaEstructuraCentroResponseDtoListVistaEstructuraCentroItem =
  components['schemas']['Centro.ListVistaEstructuraCentro.ListVistaEstructuraCentroResponseDTO-ListVistaEstructuraCentroItem'];
export type CentroAperturaCentroAperturaRequestDto = components['schemas']['CentroApertura.CentroAperturaRequestDTO'];
export type ConsultorioConsultorioRequestDto = components['schemas']['Consultorio.ConsultorioRequestDTO'];
export type ConsultorioConsultorioResponseDto = components['schemas']['Consultorio.ConsultorioResponseDTO'];
export type ContratoContratoRequestDto = components['schemas']['Contrato.ContratoRequestDTO'];
export type ContratoFechaActContratoFechaActRequestDto =
  components['schemas']['ContratoFechaAct.ContratoFechaActRequestDTO'];
export type ControlesControlAnticipadoListVistaControlAnticipadoResponseDto =
  components['schemas']['Controles.ControlAnticipado.ListVistaControlAnticipadoResponseDTO'];
export type ControlesControlOrdenControlOrdenRequestDto =
  components['schemas']['Controles.ControlOrden.ControlOrdenRequestDTO'];
export type ControlesControlOrdenControlOrdenResponseDto =
  components['schemas']['Controles.ControlOrden.ControlOrdenResponseDTO'];
export type ControlesControlPostTurnoControlPostTurnoRequestDto =
  components['schemas']['Controles.ControlPostTurno.ControlPostTurnoRequestDTO'];
export type ControlesControlPostTurnoControlPostTurnoResponseDto =
  components['schemas']['Controles.ControlPostTurno.ControlPostTurnoResponseDTO'];
export type ControlesGetAssemblyVersionGetAssemblyVersionResponseDto =
  components['schemas']['Controles.GetAssemblyVersion.GetAssemblyVersionResponseDTO'];
export type ControlesGetVistaComboControlPostDtoAuxiliaresGetVistaComboControlPostAgendasResponseDto =
  components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostAgendasResponseDTO'];
export type ControlesGetVistaComboControlPostDtoAuxiliaresGetVistaComboControlPostCentrosResponseDto =
  components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostCentrosResponseDTO'];
export type ControlesGetVistaComboControlPostDtoAuxiliaresGetVistaComboControlPostEspecialidadesResponseDto =
  components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostEspecialidadesResponseDTO'];
export type ControlesGetVistaComboControlPostDtoAuxiliaresGetVistaComboControlPostEstadoTurnosResponseDto =
  components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostEstadoTurnosResponseDTO'];
export type ControlesGetVistaComboControlPostDtoAuxiliaresGetVistaComboControlPostObraSocialesResponseDto =
  components['schemas']['Controles.GetVistaComboControlPost.DTOAuxiliares.GetVistaComboControlPostObraSocialesResponseDTO'];
export type ControlesGetVistaComboControlPostGetVistaComboControlPostResponseDto =
  components['schemas']['Controles.GetVistaComboControlPost.GetVistaComboControlPostResponseDTO'];
export type ControlesJobControlPostJobControlPostResponseDto =
  components['schemas']['Controles.JobControlPost.JobControlPostResponseDTO'];
export type ControlesListVistaControlPostListVistaControlPostRequestDto =
  components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostRequestDTO'];
export type ControlesListVistaControlPostListVistaControlPostResponseDto =
  components['schemas']['Controles.ListVistaControlPost.ListVistaControlPostResponseDTO'];
export type DiaGeneradoDiaGeneradoResponseDto = components['schemas']['DiaGenerado.DiaGeneradoResponseDTO'];
export type DiscapacidadDiscapacidadRequestDto = components['schemas']['Discapacidad.DiscapacidadRequestDTO'];
export type DocumentoTipoDocumentoTipoRequestDto = components['schemas']['DocumentoTipo.DocumentoTipoRequestDTO'];
export type DocumentoTipoDocumentoTipoResponseDto = components['schemas']['DocumentoTipo.DocumentoTipoResponseDTO'];
export type DocumentoTurnoTipoDocumentoTurnoTipoRequestDto =
  components['schemas']['DocumentoTurnoTipo.DocumentoTurnoTipoRequestDTO'];
export type EmpresaEmpresasResponseDto = components['schemas']['Empresa.EmpresasResponseDTO'];
export type EquipoEquipoRequestDto = components['schemas']['Equipo.EquipoRequestDTO'];
export type EquipoEquipoResponseDto = components['schemas']['Equipo.EquipoResponseDTO'];
export type EquipoListVistaEquiposListVistaEquiposResponseDto =
  components['schemas']['Equipo.ListVistaEquipos.ListVistaEquiposResponseDTO'];
export type EspecialidadEspecialidadRequestDto = components['schemas']['Especialidad.EspecialidadRequestDTO'];
export type EspecialidadEspecialidadResponseDto = components['schemas']['Especialidad.EspecialidadResponseDTO'];
export type EspecialidadListVistaEspecialidadesListVistaEspecialidadesResponseDto =
  components['schemas']['Especialidad.ListVistaEspecialidades.ListVistaEspecialidadesResponseDTO'];
export type EstudioTipoEstudioTiposRequestDto = components['schemas']['EstudioTipo.EstudioTiposRequestDTO'];
export type EstudioTipoEstudioTiposResponseDto = components['schemas']['EstudioTipo.EstudioTiposResponseDTO'];
export type FacturacionOsListVistaContratosOsDtoAuxiliaresListVistaContratosOsByContratosFechaActsRequestDto =
  components['schemas']['FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByContratosFechaActsRequestDTO'];
export type FacturacionOsListVistaContratosOsDtoAuxiliaresListVistaContratosOsByObraSocialesRequestDto =
  components['schemas']['FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByObraSocialesRequestDTO'];
export type FacturacionOsListVistaContratosOsDtoAuxiliaresListVistaContratosOsByPlanesRequestDto =
  components['schemas']['FacturacionOS.ListVistaContratosOS.DTOAuxiliares.ListVistaContratosOSByPlanesRequestDTO'];
export type FacturacionOsListVistaContratosOsListVistaContratosOsRequestDto =
  components['schemas']['FacturacionOS.ListVistaContratosOS.ListVistaContratosOSRequestDTO'];
export type FacturacionOsListVistaContratosOsListVistaContratosOsListVistaContratosOsResponseDto =
  components['schemas']['FacturacionOS.ListVistaContratosOSListVistaContratosOS.ListVistaContratosOSResponseDTO'];
export type FacturacionOsListVistaDebitosOsListVistaDebitosOsRequestDto =
  components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSRequestDTO'];
export type FacturacionOsListVistaDebitosOsListVistaDebitosOsResponseDto =
  components['schemas']['FacturacionOS.ListVistaDebitosOS.ListVistaDebitosOSResponseDTO'];
export type FacturacionOsListVistaDetalleLiquidacionOsListVistaDetalleLiquidacionOsRequestDto =
  components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSRequestDTO'];
export type FacturacionOsListVistaDetalleLiquidacionOsListVistaDetalleLiquidacionOsResponseDto =
  components['schemas']['FacturacionOS.ListVistaDetalleLiquidacionOS.ListVistaDetalleLiquidacionOSResponseDTO'];
export type FacturacionOsListVistaFacturasOsListVistaFacturasOsRequestDto =
  components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSRequestDTO'];
export type FacturacionOsListVistaFacturasOsListVistaFacturasOsResponseDto =
  components['schemas']['FacturacionOS.ListVistaFacturasOS.ListVistaFacturasOSResponseDTO'];
export type FacturacionOsListVistaLiquidacionesOsListVistaLiquidacionesOsRequestDto =
  components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSRequestDTO'];
export type FacturacionOsListVistaLiquidacionesOsListVistaLiquidacionesOsResponseDto =
  components['schemas']['FacturacionOS.ListVistaLiquidacionesOS.ListVistaLiquidacionesOSResponseDTO'];
export type FacturacionOsListVistaPrestacionesPendientesListVistaPrestacionesPendientesRequestDto =
  components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesRequestDTO'];
export type FacturacionOsListVistaPrestacionesPendientesListVistaPrestacionesPendientesResponseDto =
  components['schemas']['FacturacionOS.ListVistaPrestacionesPendientes.ListVistaPrestacionesPendientesResponseDTO'];
export type FeriadoFeriadoRequestDto = components['schemas']['Feriado.FeriadoRequestDTO'];
export type FeriadoListVistaFeriadoListVistaFeriadosResponseDto =
  components['schemas']['Feriado.ListVistaFeriado.ListVistaFeriadosResponseDTO'];
export type GrupoPrestacionGrupoPrestacionRequestDto =
  components['schemas']['GrupoPrestacion.GrupoPrestacionRequestDTO'];
export type GrupoPrestacionGrupoPrestacionResponseDto =
  components['schemas']['GrupoPrestacion.GrupoPrestacionResponseDTO'];
export type GruposMedicoGrupoMedicoRequestDto = components['schemas']['GruposMedico.GrupoMedicoRequestDTO'];
export type GruposMedicoGrupoMedicoResponseDto = components['schemas']['GruposMedico.GrupoMedicoResponseDTO'];
export type GruposPresPreguntaGruposPresPreguntaRequestDto =
  components['schemas']['GruposPresPregunta.GruposPresPreguntaRequestDTO'];
export type HorarioHorarioRequestDto = components['schemas']['Horario.HorarioRequestDTO'];
export type HorarioHorarioResponseDto = components['schemas']['Horario.HorarioResponseDTO'];
export type HorarioAdicionalHorarioAdicionalRequestDto =
  components['schemas']['HorarioAdicional.HorarioAdicionalRequestDTO'];
export type HorarioAdicionalHorarioAdicionalResponseDto =
  components['schemas']['HorarioAdicional.HorarioAdicionalResponseDTO'];
export type HorarioDetalleHorarioDetalleRequestDto = components['schemas']['HorarioDetalle.HorarioDetalleRequestDTO'];
export type InfTemplateTipoInfTemplateTipoRequestDto =
  components['schemas']['InfTemplateTipo.InfTemplateTipoRequestDTO'];
export type InformeAsignacionPoolAsignacionPoolResponseDto =
  components['schemas']['Informe.AsignacionPool.AsignacionPoolResponseDTO'];
export type InformeCombosFiltroInformesComboDto = components['schemas']['Informe.CombosFiltroInformes.ComboDTO'];
export type InformeCombosFiltroInformesCombosFiltroInformesResponseDto =
  components['schemas']['Informe.CombosFiltroInformes.CombosFiltroInformesResponseDTO'];
export type InformeGetDataInformeGetDataInformeResponseDto =
  components['schemas']['Informe.GetDataInforme.GetDataInformeResponseDTO'];
export type InformeGetInformePorTurnoDtoAuxiliaresGetInformePorTurnoInformesDto =
  components['schemas']['Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoInformesDTO'];
export type InformeGetInformePorTurnoDtoAuxiliaresGetInformePorTurnoTurnoNomencladorDto =
  components['schemas']['Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoTurnoNomencladorDTO'];
export type InformeGetInformePorTurnoDtoAuxiliaresGetInformePorTurnoTurnoPrestacionesDto =
  components['schemas']['Informe.GetInformePorTurno.DTOAuxiliares.GetInformePorTurnoTurnoPrestacionesDTO'];
export type InformeGetInformePorTurnoGetInformePorTurnoResponseDto =
  components['schemas']['Informe.GetInformePorTurno.GetInformePorTurnoResponseDTO'];
export type InformeListVistaInformesListVistaInformesRequestDto =
  components['schemas']['Informe.ListVistaInformes.ListVistaInformesRequestDTO'];
export type InformeListVistaInformesListVistaInformesResponseDto =
  components['schemas']['Informe.ListVistaInformes.ListVistaInformesResponseDTO'];
export type InformeEstadoTipoInformeEstadoTipoRequestDto =
  components['schemas']['InformeEstadoTipo.InformeEstadoTipoRequestDTO'];
export type InformeSubTipoInformeSubTipoRequestDto = components['schemas']['InformeSubTipo.InformeSubTipoRequestDTO'];
export type InformeSubTipoInformeSubTipoResponseDto = components['schemas']['InformeSubTipo.InformeSubTipoResponseDTO'];
export type InformeSubTipoListVistaInformeSubTipoListVistaInformeSubTipoResponseDto =
  components['schemas']['InformeSubTipo.ListVistaInformeSubTipo.ListVistaInformeSubTipoResponseDTO'];
export type InformeTemplateInformeTemplateRequestDto =
  components['schemas']['InformeTemplate.InformeTemplateRequestDTO'];
export type InformeTemplateGruposInformesTemplateGruposRequestDto =
  components['schemas']['InformeTemplateGrupos.InformesTemplateGruposRequestDTO'];
export type InformeTipoInformeTiposRequestDto = components['schemas']['InformeTipo.InformeTiposRequestDTO'];
export type InformeTipoInformeTiposResponseDto = components['schemas']['InformeTipo.InformeTiposResponseDTO'];
export type InformeTipoListVistaInformeTiposListVistaInformeTiposResponseDto =
  components['schemas']['InformeTipo.ListVistaInformeTipos.ListVistaInformeTiposResponseDTO'];
export type InformeTipoTipoInformePrestacionTipoInformePrestacionRequestDto =
  components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionRequestDTO'];
export type InformeTipoTipoInformePrestacionTipoInformePrestacionResponseDto =
  components['schemas']['InformeTipo.TipoInformePrestacion.TipoInformePrestacionResponseDTO'];
export type IvaTipoIvaTipoRequestDto = components['schemas']['IvaTipo.IvaTipoRequestDTO'];
export type IvaTipoIvaTipoResponseDto = components['schemas']['IvaTipo.IvaTipoResponseDTO'];
export type ListVistaUsuariosListVistaMedicosListVistaMedicosResponseDto =
  components['schemas']['ListVistaUsuarios.ListVistaMedicos.ListVistaMedicosResponseDTO'];
export type LlamadorLlamadorEnColarPacienteLlamadorEnColarPacienteRequestDto =
  components['schemas']['Llamador.LlamadorEnColarPaciente.LlamadorEnColarPacienteRequestDTO'];
export type LlamadorLlamadorRequestDto = components['schemas']['Llamador.LlamadorRequestDTO'];
export type LlamadorLlamadorResponseDto = components['schemas']['Llamador.LlamadorResponseDTO'];
export type LocalidadLocalidadResponseDto = components['schemas']['Localidad.LocalidadResponseDTO'];
export type MailTemplateMailTemplatesRequestDto = components['schemas']['MailTemplate.MailTemplatesRequestDTO'];
export type MailTemplatesTipoMailTemplatesTiposRequestDto =
  components['schemas']['MailTemplatesTipo.MailTemplatesTiposRequestDTO'];
export type MedicoGetDataMedicoGetDataMedicoResponseDto =
  components['schemas']['Medico.GetDataMedico.GetDataMedicoResponseDTO'];
export type MedicoMedicoRequestDto = components['schemas']['Medico.MedicoRequestDTO'];
export type MedicoMedicoResponseDto = components['schemas']['Medico.MedicoResponseDTO'];
export type ModalidadModalidadRequestDto = components['schemas']['Modalidad.ModalidadRequestDTO'];
export type ModalidadModalidadResponseDto = components['schemas']['Modalidad.ModalidadResponseDTO'];
export type MotivoRechazoPrestacionMotivoRechazoPrestacionesRequestDto =
  components['schemas']['MotivoRechazoPrestacion.MotivoRechazoPrestacionesRequestDTO'];
export type NomencladorListVistaNomencladoresListVistaNomencladoresResponseDto =
  components['schemas']['Nomenclador.ListVistaNomencladores.ListVistaNomencladoresResponseDTO'];
export type NomencladorNomencladorRequestDto = components['schemas']['Nomenclador.NomencladorRequestDTO'];
export type NomencladorTipoNomencladorTipoRequestDto =
  components['schemas']['NomencladorTipo.NomencladorTipoRequestDTO'];
export type NotaTurnoNotaTurnoRequestDto = components['schemas']['NotaTurno.NotaTurnoRequestDTO'];
export type NovedadNovedadRequestDto = components['schemas']['Novedad.NovedadRequestDTO'];
export type ObSocDebitosMotivoObSocDebitosMotivosRequestDto =
  components['schemas']['ObSocDebitosMotivo.ObSocDebitosMotivosRequestDTO'];
export type ObSocValidadoreObSocValidadoresRequestDto =
  components['schemas']['ObSocValidadore.ObSocValidadoresRequestDTO'];
export type ObraSocialObraSocialRequestDto = components['schemas']['ObraSocial.ObraSocialRequestDTO'];
export type ObraSocialObraSocialResponseDto = components['schemas']['ObraSocial.ObraSocialResponseDTO'];
export type ObraSocialFactCircuitoObraSocialFactCircuitosRequestDto =
  components['schemas']['ObraSocialFactCircuito.ObraSocialFactCircuitosRequestDTO'];
export type ObraSocialFactConfigsObraSocialFactConfigRequestDto =
  components['schemas']['ObraSocialFactConfigs.ObraSocialFactConfigRequestDTO'];
export type ObraSocialGrupoObraSocialGruposRequestDto =
  components['schemas']['ObraSocialGrupo.ObraSocialGruposRequestDTO'];
export type ObraSocialLiqConfigsBajaObraSocialLiqConfigBajaObraSocialLiqConfigRequestDto =
  components['schemas']['ObraSocialLiqConfigs.BajaObraSocialLiqConfig.BajaObraSocialLiqConfigRequestDTO'];
export type ObraSocialLiqConfigsObraSocialLiqConfigRequestDto =
  components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigRequestDTO'];
export type ObraSocialLiqConfigsObraSocialLiqConfigResponseDto =
  components['schemas']['ObraSocialLiqConfigs.ObraSocialLiqConfigResponseDTO'];
export type ObraSocialLiquidacionAltaTnLiquidacionOsAltaTnLiquidacionOsRequestDto =
  components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSRequestDTO'];
export type ObraSocialLiquidacionAltaTnLiquidacionOsAltaTnLiquidacionOsResponseDto =
  components['schemas']['ObraSocialLiquidacion.AltaTNLiquidacionOS.AltaTNLiquidacionOSResponseDTO'];
export type ObraSocialLiquidacionBajaTnLiquidacionOsBajaTnLiquidacionOsRequestDto =
  components['schemas']['ObraSocialLiquidacion.BajaTNLiquidacionOS.BajaTNLiquidacionOSRequestDTO'];
export type ObraSocialLiquidacionEliminarLiquidacionOsEliminarLiquidacionOsRequestDto =
  components['schemas']['ObraSocialLiquidacion.EliminarLiquidacionOS.EliminarLiquidacionOSRequestDTO'];
export type ObraSocialLiquidacionLiquidacionOsLiquidacionOsRequestDto =
  components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSRequestDTO'];
export type ObraSocialLiquidacionLiquidacionOsLiquidacionOsResponseDto =
  components['schemas']['ObraSocialLiquidacion.LiquidacionOS.LiquidacionOSResponseDTO'];
export type PacienteGetAtencionPacienteDtoAuxiliaresGetAtencionPacienteParentescoDto =
  components['schemas']['Paciente.GetAtencionPaciente.DTOAuxiliares.GetAtencionPacienteParentescoDTO'];
export type PacienteGetAtencionPacienteDtoAuxiliaresGetAtencionPacienteTurnoDto =
  components['schemas']['Paciente.GetAtencionPaciente.DTOAuxiliares.GetAtencionPacienteTurnoDTO'];
export type PacienteGetAtencionPacienteGetAtencionPacienteResponseDto =
  components['schemas']['Paciente.GetAtencionPaciente.GetAtencionPacienteResponseDTO'];
export type PacienteGetAtencionPacientePrestacionesGetAtencionPacientePrestacionesResponseDto =
  components['schemas']['Paciente.GetAtencionPacientePrestaciones.GetAtencionPacientePrestacionesResponseDTO'];
export type PacienteGetDataPacienteGetDataPacienteResponseDto =
  components['schemas']['Paciente.GetDataPaciente.GetDataPacienteResponseDTO'];
export type PacienteModificarDniPacienteModificarDniPacienteRequestDto =
  components['schemas']['Paciente.ModificarDniPaciente.ModificarDniPacienteRequestDTO'];
export type PacientePacienteRequestDto = components['schemas']['Paciente.PacienteRequestDTO'];
export type PacientePacienteResponseDto = components['schemas']['Paciente.PacienteResponseDTO'];
export type PaisPaisesResponseDto = components['schemas']['Pais.PaisesResponseDTO'];
export type ParentescoParentescoRequestDto = components['schemas']['Parentesco.ParentescoRequestDTO'];
export type ParentescoPacienteParentescoPacienteRequestDto =
  components['schemas']['ParentescoPaciente.ParentescoPacienteRequestDTO'];
export type PisoPisoRequestDto = components['schemas']['Piso.PisoRequestDTO'];
export type PisoPisoResponseDto = components['schemas']['Piso.PisoResponseDTO'];
export type PlanListVistaPlanesListVistaPlanesResponseDto =
  components['schemas']['Plan.ListVistaPlanes.ListVistaPlanesResponseDTO'];
export type PlanPlanRequestDto = components['schemas']['Plan.PlanRequestDTO'];
export type PlanPlanResponseDto = components['schemas']['Plan.PlanResponseDTO'];
export type PreparacionPreparacionRequestDto = components['schemas']['Preparacion.PreparacionRequestDTO'];
export type PreparacionPrestacionPreparacionPrestacionRequestDto =
  components['schemas']['PreparacionPrestacion.PreparacionPrestacionRequestDTO'];
export type PrestacionPreBusquedaPrestacionesPreBusquedaPrestacionesRequestDto =
  components['schemas']['Prestacion.PreBusquedaPrestaciones.PreBusquedaPrestacionesRequestDTO'];
export type PrestacionPrestacionRequestDto = components['schemas']['Prestacion.PrestacionRequestDTO'];
export type PrestacionPrestacionResponseDto = components['schemas']['Prestacion.PrestacionResponseDTO'];
export type PrestacionAgendaPrestacionAgendaRequestDto =
  components['schemas']['PrestacionAgenda.PrestacionAgendaRequestDTO'];
export type PrestacionNomencladorPrestacionNomencladorRequestDto =
  components['schemas']['PrestacionNomenclador.PrestacionNomencladorRequestDTO'];
export type ProvinciaProvinciasResponseDto = components['schemas']['Provincia.ProvinciasResponseDTO'];
export type QuitaPresenteMotivoListVistaQuitaPresenteMotivosListVistaQuitaPresenteMotivosResponseDto =
  components['schemas']['QuitaPresenteMotivo.ListVistaQuitaPresenteMotivos.ListVistaQuitaPresenteMotivosResponseDTO'];
export type QuitaPresenteMotivoQuitaPresenteMotivoRequestDto =
  components['schemas']['QuitaPresenteMotivo.QuitaPresenteMotivoRequestDTO'];
export type RecepcionRecepcionRequestDto = components['schemas']['Recepcion.RecepcionRequestDTO'];
export type RecepcionRecepcionResponseDto = components['schemas']['Recepcion.RecepcionResponseDTO'];
export type RolRolRequestDto = components['schemas']['Rol.RolRequestDTO'];
export type TelefonoAdicionalTelefonoAdicionalRequestDto =
  components['schemas']['TelefonoAdicional.TelefonoAdicionalRequestDTO'];
export type TurnoAsignacionDeTurnoAsignacionDeTurnoRequestDto =
  components['schemas']['Turno.AsignacionDeTurno.AsignacionDeTurnoRequestDTO'];
export type TurnoAsignacionDeTurnoDtoAuxiliaresAsignacionDeTurnoPrestacionRequestDto =
  components['schemas']['Turno.AsignacionDeTurno.DTOAuxiliares.AsignacionDeTurnoPrestacionRequestDTO'];
export type TurnoAsociarDesasociarMedicoSolicitanteAsociarDesasociarMedicoSolicitanteRequestDto =
  components['schemas']['Turno.AsociarDesasociarMedicoSolicitante.AsociarDesasociarMedicoSolicitanteRequestDTO'];
export type TurnoBloqueoDeTurnoBloqueoDeTurnoRequestDto =
  components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoRequestDTO'];
export type TurnoBloqueoDeTurnoBloqueoDeTurnoResponseDto =
  components['schemas']['Turno.BloqueoDeTurno.BloqueoDeTurnoResponseDTO'];
export type TurnoBloqueoDeTurnoDtoAuxiliaresBloqueoDeTurnoTurnoRequestDto =
  components['schemas']['Turno.BloqueoDeTurno.DTOAuxiliares.BloqueoDeTurnoTurnoRequestDTO'];
export type TurnoCambioDeTurnoCambioDeTurnoRequestDto =
  components['schemas']['Turno.CambioDeTurno.CambioDeTurnoRequestDTO'];
export type TurnoCambioDeTurnoDtoAuxiliaresCambioDeTurnoPrestacionRequestDto =
  components['schemas']['Turno.CambioDeTurno.DTOAuxiliares.CambioDeTurnoPrestacionRequestDTO'];
export type TurnoCambioOsCambioOsRequestDto = components['schemas']['Turno.CambioOS.CambioOSRequestDTO'];
export type TurnoCambioOsDtoAuxiliaresCambioOsTurnoNomencladorRequestDto =
  components['schemas']['Turno.CambioOS.DTOAuxiliares.CambioOSTurnoNomencladorRequestDTO'];
export type TurnoCambioOsAnalisisCambioOsAnalisisRequestDto =
  components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisRequestDTO'];
export type TurnoCambioOsAnalisisCambioOsAnalisisResponseDto =
  components['schemas']['Turno.CambioOSAnalisis.CambioOSAnalisisResponseDTO'];
export type TurnoCancelacionDeTurnoCancelacionDeTurnoRequestDto =
  components['schemas']['Turno.CancelacionDeTurno.CancelacionDeTurnoRequestDTO'];
export type TurnoCobroTurnoCobroTurnoRequestDto = components['schemas']['Turno.CobroTurno.CobroTurnoRequestDTO'];
export type TurnoCreacionSobreTurnoCreacionSobreTurnoRequestDto =
  components['schemas']['Turno.CreacionSobreTurno.CreacionSobreTurnoRequestDTO'];
export type TurnoDefinicionDeValoresDtoAuxiliaresDefinicionDeValoresCajaBancosResponseDto =
  components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaBancosResponseDTO'];
export type TurnoDefinicionDeValoresDtoAuxiliaresDefinicionDeValoresCajaCuotasResponseDto =
  components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaCuotasResponseDTO'];
export type TurnoDefinicionDeValoresDtoAuxiliaresDefinicionDeValoresCajaMediosPagoResponseDto =
  components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresCajaMediosPagoResponseDTO'];
export type TurnoDefinicionDeValoresDtoAuxiliaresDefinicionDeValoresTurnoNomencladorRequestDto =
  components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresTurnoNomencladorRequestDTO'];
export type TurnoDefinicionDeValoresDtoAuxiliaresDefinicionDeValoresTurnoNomencladorResponseDto =
  components['schemas']['Turno.DefinicionDeValores.DTOAuxiliares.DefinicionDeValoresTurnoNomencladorResponseDTO'];
export type TurnoDefinicionDeValoresDefinicionDeValoresRequestDto =
  components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresRequestDTO'];
export type TurnoDefinicionDeValoresDefinicionDeValoresResponseDto =
  components['schemas']['Turno.DefinicionDeValores.DefinicionDeValoresResponseDTO'];
export type TurnoEnvioWorklistDtoAuxiliaresEnvioWorklistScheduledProcedureStepSequenceResponseDto =
  components['schemas']['Turno.EnvioWorklist.DTOAuxiliares.EnvioWorklistScheduledProcedureStepSequenceResponseDTO'];
export type TurnoEnvioWorklistEnvioWorklistRequestDto =
  components['schemas']['Turno.EnvioWorklist.EnvioWorklistRequestDTO'];
export type TurnoEnvioWorklistEnvioWorklistResponseDto =
  components['schemas']['Turno.EnvioWorklist.EnvioWorklistResponseDTO'];
export type TurnoGetDataTurnoGetDataTurnoResponseDto =
  components['schemas']['Turno.GetDataTurno.GetDataTurnoResponseDTO'];
export type TurnoGetPrestacionAgendaGetPrestacionesAgendaResponseDto =
  components['schemas']['Turno.GetPrestacionAgenda.GetPrestacionesAgendaResponseDTO'];
export type TurnoInformacionTurnoDtoAuxiliaresInformacionTurnoTurnoDocumentosResponseDto =
  components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoDocumentosResponseDTO'];
export type TurnoInformacionTurnoDtoAuxiliaresInformacionTurnoTurnoEstadosResponseDto =
  components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoEstadosResponseDTO'];
export type TurnoInformacionTurnoDtoAuxiliaresInformacionTurnoTurnoNomencladoresResponseDto =
  components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoNomencladoresResponseDTO'];
export type TurnoInformacionTurnoDtoAuxiliaresInformacionTurnoTurnoPrestacionesResponseDto =
  components['schemas']['Turno.InformacionTurno.DTOAuxiliares.InformacionTurnoTurnoPrestacionesResponseDTO'];
export type TurnoInformacionTurnoInformacionTurnoResponseDto =
  components['schemas']['Turno.InformacionTurno.InformacionTurnoResponseDTO'];
export type TurnoModificarCodigoNomencladorDtoAuxiliaresModificarCodigoNomencladorTurnoNomencladorRequestDto =
  components['schemas']['Turno.ModificarCodigoNomenclador.DTOAuxiliares.ModificarCodigoNomencladorTurnoNomencladorRequestDTO'];
export type TurnoModificarCodigoNomencladorModificarCodigoNomencladoresRequestDto =
  components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresRequestDTO'];
export type TurnoModificarCodigoNomencladorModificarCodigoNomencladoresResponsetDto =
  components['schemas']['Turno.ModificarCodigoNomenclador.ModificarCodigoNomencladoresResponsetDTO'];
export type TurnoModificarPrestacionModificarPrestacionesRequestDto =
  components['schemas']['Turno.ModificarPrestacion.ModificarPrestacionesRequestDTO'];
export type TurnoModificarPrestacionsDtoAuxiliaresModificarPrestacionesPrestacionRequestDto =
  components['schemas']['Turno.ModificarPrestacions.DTOAuxiliares.ModificarPrestacionesPrestacionRequestDTO'];
export type TurnoNumeroAutorizacionDtoAuxiliaresNumeroAutorizacionTurnoNomencladorRequestDto =
  components['schemas']['Turno.NumeroAutorizacion.DTOAuxiliares.NumeroAutorizacionTurnoNomencladorRequestDTO'];
export type TurnoNumeroAutorizacionNumeroAutorizacionRequestDto =
  components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionRequestDTO'];
export type TurnoNumeroAutorizacionNumeroAutorizacionResponseDto =
  components['schemas']['Turno.NumeroAutorizacion.NumeroAutorizacionResponseDTO'];
export type TurnoQuitaPresenteDtoAuxiliaresQuitaPresenteTurnoCancelacionRequestDto =
  components['schemas']['Turno.QuitaPresente.DTOAuxiliares.QuitaPresenteTurnoCancelacionRequestDTO'];
export type TurnoQuitaPresenteQuitaPresenteRequestDto =
  components['schemas']['Turno.QuitaPresente.QuitaPresenteRequestDTO'];
export type TurnoQuitaPresenteQuitaPresenteResponseDto =
  components['schemas']['Turno.QuitaPresente.QuitaPresenteResponseDTO'];
export type TurnoRecepcionDeTurnoRecepcionDeTurnoRequestDto =
  components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoRequestDTO'];
export type TurnoRecepcionDeTurnoRecepcionDeTurnoResponseDto =
  components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO'];
export type TurnoRecepcionDeTurnoRecepcionDeTurnoResponseDtoNomencladorDto =
  components['schemas']['Turno.RecepcionDeTurno.RecepcionDeTurnoResponseDTO-NomencladorDTO'];
export type TurnoTurnoResponseDto = components['schemas']['Turno.TurnoResponseDTO'];
export type TurnoDocumentoS3ModifyS3ModifyRequestDto =
  components['schemas']['TurnoDocumento.S3Modify.S3ModifyRequestDTO'];
export type TurnoDocumentoS3UploadIntegrityS3UploadIntegrityRequestDto =
  components['schemas']['TurnoDocumento.S3UploadIntegrity.S3UploadIntegrityRequestDTO'];
export type TurnoEstadoCambiosEstadoTurnoAsignarEstadoAtendiendoEstadoAtendiendoResponseDto =
  components['schemas']['TurnoEstado.CambiosEstadoTurno.AsignarEstadoAtendiendo.EstadoAtendiendoResponseDTO'];
export type TurnoEstadoCambiosEstadoTurnoCambioEstadoTurnoRequestDto =
  components['schemas']['TurnoEstado.CambiosEstadoTurno.CambioEstadoTurnoRequestDTO'];
export type TurnoEstadoTurnoEstadoRequestDto = components['schemas']['TurnoEstado.TurnoEstadoRequestDTO'];
export type TurnoEstadoTipoTurnoEstadoTipoRequestDto =
  components['schemas']['TurnoEstadoTipo.TurnoEstadoTipoRequestDTO'];
export type TurnoTipoTurnoTipoRequestDto = components['schemas']['TurnoTipo.TurnoTipoRequestDTO'];
export type TurnoTipoTurnoTipoResponseDto = components['schemas']['TurnoTipo.TurnoTipoResponseDTO'];
export type UsuarioListVistaUsuariosListVistaUsuariosResponseDto =
  components['schemas']['Usuario.ListVistaUsuarios.ListVistaUsuariosResponseDTO'];
export type UsuarioUsuarioRequestDto = components['schemas']['Usuario.UsuarioRequestDTO'];
export type UsuarioUsuarioResponseDto = components['schemas']['Usuario.UsuarioResponseDTO'];
export type ValidadorValidadorRequestDto = components['schemas']['Validador.ValidadorRequestDTO'];
export type ValidadorCaidoValidadorCaidoRequestDto = components['schemas']['ValidadorCaido.ValidadorCaidoRequestDTO'];
export type VestidorVestidorRequestDto = components['schemas']['Vestidor.VestidorRequestDTO'];
export type ApplicationQueriesSqlJobsGeneradorDeTurnosGeneradorDeTurnosResponseDto =
  components['schemas']['Application.QueriesSqlJobs.GeneradorDeTurnos.GeneradorDeTurnosResponseDTO'];
export type ASuCargos = components['schemas']['ASuCargos'];
export type AgendaNomencladores = components['schemas']['AgendaNomencladores'];
export type AgendaOsNoAtendidas = components['schemas']['AgendaOSNoAtendidas'];
export type AgendaTipos = components['schemas']['AgendaTipos'];
export type Agendas = components['schemas']['Agendas'];
export type AreaLogIns = components['schemas']['AreaLogIns'];
export type AtencionTipos = components['schemas']['AtencionTipos'];
export type BloqueoMotivos = components['schemas']['BloqueoMotivos'];
export type CajaAperturaConfigs = components['schemas']['CajaAperturaConfigs'];
export type CajaAperturas = components['schemas']['CajaAperturas'];
export type CajaArqueos = components['schemas']['CajaArqueos'];
export type CajaBancos = components['schemas']['CajaBancos'];
export type CajaCuotas = components['schemas']['CajaCuotas'];
export type CajaDerechos = components['schemas']['CajaDerechos'];
export type CajaDiariaMovs = components['schemas']['CajaDiariaMovs'];
export type CajaDiarias = components['schemas']['CajaDiarias'];
export type CajaDiariasPrefijos = components['schemas']['CajaDiariasPrefijos'];
export type CajaFactuElectronica = components['schemas']['CajaFactuElectronica'];
export type CajaHistoricoMovs = components['schemas']['CajaHistoricoMovs'];
export type CajaMaestras = components['schemas']['CajaMaestras'];
export type CajaMediosPago = components['schemas']['CajaMediosPago'];
export type CajaMovInternos = components['schemas']['CajaMovInternos'];
export type CajaMovTipos = components['schemas']['CajaMovTipos'];
export type CajaProductos = components['schemas']['CajaProductos'];
export type CajaUsuarios = components['schemas']['CajaUsuarios'];
export type CancelacionMotivos = components['schemas']['CancelacionMotivos'];
export type CentroAperturas = components['schemas']['CentroAperturas'];
export type Centros = components['schemas']['Centros'];
export type Comentarios = components['schemas']['Comentarios'];
export type ComprobanteDetalles = components['schemas']['ComprobanteDetalles'];
export type ComprobanteTipos = components['schemas']['ComprobanteTipos'];
export type Comprobantes = components['schemas']['Comprobantes'];
export type ComunicacionTipos = components['schemas']['ComunicacionTipos'];
export type ComunicacionesFila = components['schemas']['ComunicacionesFila'];
export type CondicionPagos = components['schemas']['CondicionPagos'];
export type Consultorios = components['schemas']['Consultorios'];
export type ContratoFechaActs = components['schemas']['ContratoFechaActs'];
export type Contratos = components['schemas']['Contratos'];
export type ControlCierreAgenda = components['schemas']['ControlCierreAgenda'];
export type ControlOrdenes = components['schemas']['ControlOrdenes'];
export type ControlTipos = components['schemas']['ControlTipos'];
export type CtaCteNomencladores = components['schemas']['CtaCteNomencladores'];
export type Depositos = components['schemas']['Depositos'];
export type DiaGenerados = components['schemas']['DiaGenerados'];
export type Discapacidades = components['schemas']['Discapacidades'];
export type DocumentoTipos = components['schemas']['DocumentoTipos'];
export type DocumentoTurnoTipos = components['schemas']['DocumentoTurnoTipos'];
export type Empresas = components['schemas']['Empresas'];
export type EntradaSalidas = components['schemas']['EntradaSalidas'];
export type Equipos = components['schemas']['Equipos'];
export type Especialidades = components['schemas']['Especialidades'];
export type EstudioTipos = components['schemas']['EstudioTipos'];
export type Feriados = components['schemas']['Feriados'];
export type GrupoMedicos = components['schemas']['GrupoMedicos'];
export type GrupoPrePreguntas = components['schemas']['GrupoPrePreguntas'];
export type GrupoPrestaciones = components['schemas']['GrupoPrestaciones'];
export type HorarioAdicionales = components['schemas']['HorarioAdicionales'];
export type HorarioCanceladoDetalles = components['schemas']['HorarioCanceladoDetalles'];
export type HorarioCancelados = components['schemas']['HorarioCancelados'];
export type HorarioDetalles = components['schemas']['HorarioDetalles'];
export type Horarios = components['schemas']['Horarios'];
export type InfTempGrupos = components['schemas']['InfTempGrupos'];
export type InfTemplateTipos = components['schemas']['InfTemplateTipos'];
export type InformeEstados = components['schemas']['InformeEstados'];
export type InformeSubTipos = components['schemas']['InformeSubTipos'];
export type InformeTemplates = components['schemas']['InformeTemplates'];
export type InformeTipos = components['schemas']['InformeTipos'];
export type Informes = components['schemas']['Informes'];
export type IvaTipos = components['schemas']['IvaTipos'];
export type LiquidacionNomencladores = components['schemas']['LiquidacionNomencladores'];
export type Llamadores = components['schemas']['Llamadores'];
export type LlamadosFila = components['schemas']['LlamadosFila'];
export type Localidades = components['schemas']['Localidades'];
export type LogAbMs = components['schemas']['LogABMs'];
export type LogErrores = components['schemas']['LogErrores'];
export type LogInformaciones = components['schemas']['LogInformaciones'];
export type LogTipos = components['schemas']['LogTipos'];
export type LogTurnos = components['schemas']['LogTurnos'];
export type MailTemplates = components['schemas']['MailTemplates'];
export type MailTemplatesTipos = components['schemas']['MailTemplatesTipos'];
export type Medicos = components['schemas']['Medicos'];
export type Modalidades = components['schemas']['Modalidades'];
export type Monedas = components['schemas']['Monedas'];
export type MotivoRechazoPrestaciones = components['schemas']['MotivoRechazoPrestaciones'];
export type NomencladorTipos = components['schemas']['NomencladorTipos'];
export type Nomencladores = components['schemas']['Nomencladores'];
export type NotaTurnos = components['schemas']['NotaTurnos'];
export type ObSocDebitosMotivos = components['schemas']['ObSocDebitosMotivos'];
export type ObSocValidadores = components['schemas']['ObSocValidadores'];
export type ObraSocialDebitos = components['schemas']['ObraSocialDebitos'];
export type ObraSocialDebitosDetalles = components['schemas']['ObraSocialDebitosDetalles'];
export type ObraSocialFactCircuitos = components['schemas']['ObraSocialFactCircuitos'];
export type ObraSocialFactConfig = components['schemas']['ObraSocialFactConfig'];
export type ObraSocialFactProcesadas = components['schemas']['ObraSocialFactProcesadas'];
export type ObraSocialFacturas = components['schemas']['ObraSocialFacturas'];
export type ObraSocialGrupos = components['schemas']['ObraSocialGrupos'];
export type ObraSocialLiqConfig = components['schemas']['ObraSocialLiqConfig'];
export type ObraSocialLiqConfigManual = components['schemas']['ObraSocialLiqConfigManual'];
export type ObraSocialLiqProcDetalles = components['schemas']['ObraSocialLiqProcDetalles'];
export type ObraSocialLiqProcesadas = components['schemas']['ObraSocialLiqProcesadas'];
export type ObraSocialLiqResumen = components['schemas']['ObraSocialLiqResumen'];
export type ObraSocialLiquidaciones = components['schemas']['ObraSocialLiquidaciones'];
export type ObraSociales = components['schemas']['ObraSociales'];
export type ObrasSocialesDocumentos = components['schemas']['ObrasSocialesDocumentos'];
export type PacienteCtaCte = components['schemas']['PacienteCtaCte'];
export type Pacientes = components['schemas']['Pacientes'];
export type Paises = components['schemas']['Paises'];
export type ParentescoPacientes = components['schemas']['ParentescoPacientes'];
export type Parentescos = components['schemas']['Parentescos'];
export type Pisos = components['schemas']['Pisos'];
export type Planes = components['schemas']['Planes'];
export type PoolDefiniciones = components['schemas']['PoolDefiniciones'];
export type PoolUsuarios = components['schemas']['PoolUsuarios'];
export type Pools = components['schemas']['Pools'];
export type Prefijos = components['schemas']['Prefijos'];
export type PreparacionPrestaciones = components['schemas']['PreparacionPrestaciones'];
export type Preparaciones = components['schemas']['Preparaciones'];
export type PrestacionAgendas = components['schemas']['PrestacionAgendas'];
export type PrestacionFrecuencias = components['schemas']['PrestacionFrecuencias'];
export type PrestacionNomencladores = components['schemas']['PrestacionNomencladores'];
export type Prestaciones = components['schemas']['Prestaciones'];
export type PrioridadGrupos = components['schemas']['PrioridadGrupos'];
export type Provincias = components['schemas']['Provincias'];
export type Recepciones = components['schemas']['Recepciones'];
export type RestriccionCantidades = components['schemas']['RestriccionCantidades'];
export type RestriccionReglas = components['schemas']['RestriccionReglas'];
export type Roles = components['schemas']['Roles'];
export type Tablas = components['schemas']['Tablas'];
export type Tecnicos = components['schemas']['Tecnicos'];
export type TelefonoAdicionales = components['schemas']['TelefonoAdicionales'];
export type TurnoAReprogramar = components['schemas']['TurnoAReprogramar'];
export type TurnoDocumentos = components['schemas']['TurnoDocumentos'];
export type TurnoEstadoTipos = components['schemas']['TurnoEstadoTipos'];
export type TurnoEstados = components['schemas']['TurnoEstados'];
export type TurnoNomencladores = components['schemas']['TurnoNomencladores'];
export type TurnoPrestaciones = components['schemas']['TurnoPrestaciones'];
export type TurnoSinValidaciones = components['schemas']['TurnoSinValidaciones'];
export type TurnoTipos = components['schemas']['TurnoTipos'];
export type Turnos = components['schemas']['Turnos'];
export type UsuarioRoles = components['schemas']['UsuarioRoles'];
export type Usuarios = components['schemas']['Usuarios'];
export type ValidacionEstados = components['schemas']['ValidacionEstados'];
export type ValidacionTipos = components['schemas']['ValidacionTipos'];
export type Validaciones = components['schemas']['Validaciones'];
export type ValidadorCaidos = components['schemas']['ValidadorCaidos'];
export type Validadores = components['schemas']['Validadores'];
export type Vestidores = components['schemas']['Vestidores'];
export type DomainEnumsTipoNomenclador = components['schemas']['Domain.Enums.TipoNomenclador'];
export type SystemAggregateException = components['schemas']['System.AggregateException'];
export type SystemCollectionsGenericKeyValuePair_2SystemInt32SystemPrivateCoreLibVersion_8_0_0_0CultureNeutralPublicKeyToken_7cec85d7bea7798eSystemBooleanSystemPrivateCoreLibVersion_8_0_0_0CultureNeutralPublicKeyToken_7cec85d7bea7798e =
  components['schemas']['System.Collections.Generic.KeyValuePair`2[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'];
export type SystemException = components['schemas']['System.Exception'];
export type SystemIntPtr = components['schemas']['System.IntPtr'];
export type SystemModuleHandle = components['schemas']['System.ModuleHandle'];
export type SystemReflectionAssembly = components['schemas']['System.Reflection.Assembly'];
export type SystemReflectionCallingConventions = components['schemas']['System.Reflection.CallingConventions'];
export type SystemReflectionConstructorInfo = components['schemas']['System.Reflection.ConstructorInfo'];
export type SystemReflectionCustomAttributeData = components['schemas']['System.Reflection.CustomAttributeData'];
export type SystemReflectionCustomAttributeNamedArgument =
  components['schemas']['System.Reflection.CustomAttributeNamedArgument'];
export type SystemReflectionCustomAttributeTypedArgument =
  components['schemas']['System.Reflection.CustomAttributeTypedArgument'];
export type SystemReflectionEventAttributes = components['schemas']['System.Reflection.EventAttributes'];
export type SystemReflectionEventInfo = components['schemas']['System.Reflection.EventInfo'];
export type SystemReflectionFieldAttributes = components['schemas']['System.Reflection.FieldAttributes'];
export type SystemReflectionFieldInfo = components['schemas']['System.Reflection.FieldInfo'];
export type SystemReflectionGenericParameterAttributes =
  components['schemas']['System.Reflection.GenericParameterAttributes'];
export type SystemReflectionICustomAttributeProvider =
  components['schemas']['System.Reflection.ICustomAttributeProvider'];
export type SystemReflectionMemberInfo = components['schemas']['System.Reflection.MemberInfo'];
export type SystemReflectionMemberTypes = components['schemas']['System.Reflection.MemberTypes'];
export type SystemReflectionMethodAttributes = components['schemas']['System.Reflection.MethodAttributes'];
export type SystemReflectionMethodBase = components['schemas']['System.Reflection.MethodBase'];
export type SystemReflectionMethodImplAttributes = components['schemas']['System.Reflection.MethodImplAttributes'];
export type SystemReflectionMethodInfo = components['schemas']['System.Reflection.MethodInfo'];
export type SystemReflectionModule = components['schemas']['System.Reflection.Module'];
export type SystemReflectionParameterAttributes = components['schemas']['System.Reflection.ParameterAttributes'];
export type SystemReflectionParameterInfo = components['schemas']['System.Reflection.ParameterInfo'];
export type SystemReflectionPropertyAttributes = components['schemas']['System.Reflection.PropertyAttributes'];
export type SystemReflectionPropertyInfo = components['schemas']['System.Reflection.PropertyInfo'];
export type SystemReflectionTypeAttributes = components['schemas']['System.Reflection.TypeAttributes'];
export type SystemReflectionTypeInfo = components['schemas']['System.Reflection.TypeInfo'];
export type SystemRuntimeCompilerServicesAsyncTaskMethodBuilder =
  components['schemas']['System.Runtime.CompilerServices.AsyncTaskMethodBuilder'];
export type SystemRuntimeCompilerServicesAsyncVoidMethodBuilder =
  components['schemas']['System.Runtime.CompilerServices.AsyncVoidMethodBuilder'];
export type SystemRuntimeInteropServicesLayoutKind = components['schemas']['System.Runtime.InteropServices.LayoutKind'];
export type SystemRuntimeInteropServicesStructLayoutAttribute =
  components['schemas']['System.Runtime.InteropServices.StructLayoutAttribute'];
export type SystemRuntimeFieldHandle = components['schemas']['System.RuntimeFieldHandle'];
export type SystemRuntimeMethodHandle = components['schemas']['System.RuntimeMethodHandle'];
export type SystemRuntimeTypeHandle = components['schemas']['System.RuntimeTypeHandle'];
export type SystemSecuritySecurityRuleSet = components['schemas']['System.Security.SecurityRuleSet'];
export type SystemThreadingTasksTask = components['schemas']['System.Threading.Tasks.Task'];
export type SystemThreadingTasksTaskCreationOptions =
  components['schemas']['System.Threading.Tasks.TaskCreationOptions'];
export type SystemThreadingTasksTaskStatus = components['schemas']['System.Threading.Tasks.TaskStatus'];
export type SystemType = components['schemas']['System.Type'];
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
